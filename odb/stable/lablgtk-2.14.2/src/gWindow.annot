"gWindow.ml" 34 1784 1788 "gWindow.ml" 34 1784 1791
type(
  'a Gobject.obj -> ('a, 'b) Gobject.property -> 'b -> unit
)
ident(
  def set "gWindow.ml" 35 1815 1815 --
)
"gWindow.ml" 34 1784 1794 "gWindow.ml" 34 1784 1814
type(
  'a Gobject.obj -> ('a, 'b) Gobject.property -> 'b -> unit
)
ident(
  ext_ref Gobject.Property.set
)
"gWindow.ml" 35 1815 1819 "gWindow.ml" 35 1815 1822
type(
  'a Gobject.obj -> ('a, 'b) Gobject.property -> 'b
)
ident(
  def get "gWindow.ml" 39 1863 1863 --
)
"gWindow.ml" 35 1815 1825 "gWindow.ml" 35 1815 1845
type(
  'a Gobject.obj -> ('a, 'b) Gobject.property -> 'b
)
ident(
  ext_ref Gobject.Property.get
)
"gWindow.ml" 41 1884 1902 "gWindow.ml" 41 1884 1905
type(
  [> Gtk.window ] Gtk.obj
)
"gWindow.ml" 41 1884 1915 "gWindow.ml" 41 1884 1921
type(
  < accept_focus : bool; activate_default : unit -> bool;
    activate_focus : unit -> bool; add : GObj.widget -> unit;
    add_accel_group : Gtk.accel_group -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; child : GObj.widget; children : GObj.widget list;
    coerce : GObj.widget; decorated : bool; default_height : int;
    default_width : int; deiconify : unit -> unit; deletable : bool;
    destroy : unit -> unit; destroy_with_parent : bool; drag : GObj.drag_ops;
    event : GObj.event_ops; focus : GContainer.focus; focus_on_map : 
    bool; get_oid : int; gravity : GdkEnums.gravity;
    has_toplevel_focus : bool; icon : GdkPixbuf.pixbuf option;
    icon_name : string; iconify : unit -> unit; is_active : bool;
    kind : GtkEnums.window_type; misc : GObj.misc_ops; modal : bool;
    move : x:int -> y:int -> unit; opacity : float;
    parse_geometry : string -> bool; position : GtkEnums.window_position;
    present : unit -> unit; remove : GObj.widget -> unit; resizable : 
    bool; resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode; role : string; screen : Gdk.screen;
    set_accept_focus : bool -> unit; set_allow_grow : bool -> unit;
    set_allow_shrink : bool -> unit; set_border_width : int -> unit;
    set_decorated : bool -> unit; set_default_height : int -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_modal : bool -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_role : string -> unit; set_screen : Gdk.screen -> unit;
    set_skip_pager_hint : bool -> unit; set_skip_taskbar_hint : bool -> unit;
    set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool; .. >
)
"gWindow.ml" 42 1922 1946 "gWindow.ml" 42 1922 1949
type(
  ([> Gtk.window ] as 'a) Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 41 1884 1902 "gWindow.ml" 41 1884 1905
)
"gWindow.ml" 44 1973 1990 "gWindow.ml" 44 1973 2008
type(
  'a Gtk.obj -> GObj.event_ops
)
"gWindow.ml" 44 1973 2009 "gWindow.ml" 44 1973 2012
type(
  'a Gtk.obj
)
"gWindow.ml" 44 1973 1990 "gWindow.ml" 44 1973 2012
call(
  tail
)
type(
  GObj.event_ops
)
type(
  GObj.event_ops
)
"gWindow.ml" 45 2013 2035 "gWindow.ml" 45 2013 2038
type(
  Gtk.window Gtk.obj
)
type(
  Gtk.window Gtk.obj
)
type(
  'a Gtk.obj
)
"gWindow.ml" 46 2058 2082 "gWindow.ml" 46 2058 2084
type(
  unit
)
"gWindow.ml" 46 2058 2087 "gWindow.ml" 46 2058 2108
type(
  'a Gtk.obj -> bool
)
ident(
  ext_ref GtkWindow.Window.activate_focus
)
"gWindow.ml" 46 2058 2109 "gWindow.ml" 46 2058 2112
type(
  'a Gtk.obj
)
"gWindow.ml" 46 2058 2087 "gWindow.ml" 46 2058 2112
type(
  bool
)
"gWindow.ml" 47 2113 2139 "gWindow.ml" 47 2113 2141
type(
  unit
)
"gWindow.ml" 47 2113 2144 "gWindow.ml" 47 2113 2167
type(
  'a Gtk.obj -> bool
)
ident(
  ext_ref GtkWindow.Window.activate_default
)
"gWindow.ml" 47 2113 2168 "gWindow.ml" 47 2113 2171
type(
  'a Gtk.obj
)
"gWindow.ml" 47 2113 2144 "gWindow.ml" 47 2113 2171
type(
  bool
)
"gWindow.ml" 48 2172 2199 "gWindow.ml" 48 2172 2221
type(
  'a Gtk.obj -> Gtk.accel_group -> unit
)
ident(
  ext_ref GtkWindow.Window.add_accel_group
)
"gWindow.ml" 48 2172 2222 "gWindow.ml" 48 2172 2225
type(
  'a Gtk.obj
)
"gWindow.ml" 48 2172 2199 "gWindow.ml" 48 2172 2225
call(
  tail
)
type(
  Gtk.accel_group -> unit
)
type(
  Gtk.accel_group -> unit
)
"gWindow.ml" 49 2226 2253 "gWindow.ml" 49 2226 2258
type(
  int
)
ident(
  def width "gWindow.ml" 49 2226 2259 "gWindow.ml" 51 2304 2339
)
"gWindow.ml" 49 2226 2260 "gWindow.ml" 49 2226 2266
type(
  int
)
ident(
  def height "gWindow.ml" 50 2269 2273 "gWindow.ml" 51 2304 2339
)
"gWindow.ml" 50 2269 2273 "gWindow.ml" 50 2269 2276
type(
  'a Gtk.obj -> ('a, int) Gobject.property -> int -> unit
)
ident(
  int_ref set "gWindow.ml" 34 1784 1788 "gWindow.ml" 34 1784 1791
)
"gWindow.ml" 50 2269 2277 "gWindow.ml" 50 2269 2280
type(
  'a Gtk.obj
)
"gWindow.ml" 50 2269 2281 "gWindow.ml" 50 2269 2296
type(
  ('a, int) Gobject.property
)
ident(
  ext_ref P.default_width
)
"gWindow.ml" 50 2269 2297 "gWindow.ml" 50 2269 2302
type(
  int
)
ident(
  int_ref width "gWindow.ml" 49 2226 2253 "gWindow.ml" 49 2226 2258
)
"gWindow.ml" 50 2269 2273 "gWindow.ml" 50 2269 2302
call(
  stack
)
type(
  unit
)
"gWindow.ml" 51 2304 2308 "gWindow.ml" 51 2304 2311
type(
  'a Gtk.obj -> ('a, int) Gobject.property -> int -> unit
)
ident(
  int_ref set "gWindow.ml" 34 1784 1788 "gWindow.ml" 34 1784 1791
)
"gWindow.ml" 51 2304 2312 "gWindow.ml" 51 2304 2315
type(
  'a Gtk.obj
)
"gWindow.ml" 51 2304 2316 "gWindow.ml" 51 2304 2332
type(
  ('a, int) Gobject.property
)
ident(
  ext_ref P.default_height
)
"gWindow.ml" 51 2304 2333 "gWindow.ml" 51 2304 2339
type(
  int
)
ident(
  int_ref height "gWindow.ml" 49 2226 2260 "gWindow.ml" 49 2226 2266
)
"gWindow.ml" 51 2304 2308 "gWindow.ml" 51 2304 2339
call(
  tail
)
type(
  unit
)
"gWindow.ml" 50 2269 2273 "gWindow.ml" 51 2304 2339
type(
  unit
)
"gWindow.ml" 52 2340 2356 "gWindow.ml" 52 2340 2367
type(
  'a Gtk.obj -> x:int -> y:int -> unit
)
ident(
  ext_ref GtkWindow.Window.move
)
"gWindow.ml" 52 2340 2368 "gWindow.ml" 52 2340 2371
type(
  'a Gtk.obj
)
"gWindow.ml" 52 2340 2356 "gWindow.ml" 52 2340 2371
call(
  tail
)
type(
  x:int -> y:int -> unit
)
type(
  x:int -> y:int -> unit
)
"gWindow.ml" 53 2372 2398 "gWindow.ml" 53 2372 2419
type(
  'a Gtk.obj -> string -> bool
)
ident(
  ext_ref GtkWindow.Window.parse_geometry
)
"gWindow.ml" 53 2372 2420 "gWindow.ml" 53 2372 2423
type(
  'a Gtk.obj
)
"gWindow.ml" 53 2372 2398 "gWindow.ml" 53 2372 2423
call(
  tail
)
type(
  string -> bool
)
type(
  string -> bool
)
"gWindow.ml" 54 2424 2442 "gWindow.ml" 54 2424 2455
type(
  'a Gtk.obj -> width:int -> height:int -> unit
)
ident(
  ext_ref GtkWindow.Window.resize
)
"gWindow.ml" 54 2424 2456 "gWindow.ml" 54 2424 2459
type(
  'a Gtk.obj
)
"gWindow.ml" 54 2424 2442 "gWindow.ml" 54 2424 2459
call(
  tail
)
type(
  width:int -> height:int -> unit
)
type(
  width:int -> height:int -> unit
)
"gWindow.ml" 55 2460 2489 "gWindow.ml" 55 2460 2497
type(
  (int * int) option
)
ident(
  def min_size "gWindow.ml" 55 2460 2498 "gWindow.ml" 58 2661 2731
)
"gWindow.ml" 55 2460 2499 "gWindow.ml" 55 2460 2507
type(
  (int * int) option
)
ident(
  def max_size "gWindow.ml" 55 2460 2508 "gWindow.ml" 58 2661 2731
)
"gWindow.ml" 55 2460 2509 "gWindow.ml" 55 2460 2518
type(
  (int * int) option
)
ident(
  def base_size "gWindow.ml" 55 2460 2519 "gWindow.ml" 58 2661 2731
)
"gWindow.ml" 55 2460 2520 "gWindow.ml" 55 2460 2526
type(
  (float * float) option
)
ident(
  def aspect "gWindow.ml" 56 2527 2533 "gWindow.ml" 58 2661 2731
)
"gWindow.ml" 56 2527 2534 "gWindow.ml" 56 2527 2544
type(
  (int * int) option
)
ident(
  def resize_inc "gWindow.ml" 56 2527 2545 "gWindow.ml" 58 2661 2731
)
"gWindow.ml" 56 2527 2546 "gWindow.ml" 56 2527 2557
type(
  Gdk.Tags.gravity option
)
ident(
  def win_gravity "gWindow.ml" 56 2527 2558 "gWindow.ml" 58 2661 2731
)
"gWindow.ml" 56 2527 2559 "gWindow.ml" 56 2527 2562
type(
  bool option
)
ident(
  def pos "gWindow.ml" 56 2527 2563 "gWindow.ml" 58 2661 2731
)
"gWindow.ml" 56 2527 2564 "gWindow.ml" 56 2527 2572
type(
  bool option
)
ident(
  def user_pos "gWindow.ml" 56 2527 2573 "gWindow.ml" 58 2661 2731
)
"gWindow.ml" 56 2527 2574 "gWindow.ml" 56 2527 2583
type(
  bool option
)
ident(
  def user_size "gWindow.ml" 56 2527 2584 "gWindow.ml" 58 2661 2731
)
"gWindow.ml" 56 2527 2584 "gWindow.ml" 56 2527 2585
type(
  GObj.widget
)
ident(
  def w "gWindow.ml" 57 2588 2592 "gWindow.ml" 58 2661 2731
)
"gWindow.ml" 57 2588 2592 "gWindow.ml" 57 2588 2617
type(
  'a Gtk.obj ->
  ?pos:bool ->
  ?min_size:int * int ->
  ?max_size:int * int ->
  ?base_size:int * int ->
  ?aspect:float * float ->
  ?resize_inc:int * int ->
  ?win_gravity:Gdk.Tags.gravity ->
  ?user_pos:bool -> ?user_size:bool -> Gtk.widget Gtk.obj -> unit
)
ident(
  ext_ref GtkWindow.Window.set_geometry_hints
)
"gWindow.ml" 57 2588 2618 "gWindow.ml" 57 2588 2621
type(
  'a Gtk.obj
)
"gWindow.ml" 57 2588 2623 "gWindow.ml" 57 2588 2631
type(
  (int * int) option
)
ident(
  int_ref min_size "gWindow.ml" 55 2460 2489 "gWindow.ml" 55 2460 2497
)
"gWindow.ml" 57 2588 2633 "gWindow.ml" 57 2588 2641
type(
  (int * int) option
)
ident(
  int_ref max_size "gWindow.ml" 55 2460 2499 "gWindow.ml" 55 2460 2507
)
"gWindow.ml" 57 2588 2643 "gWindow.ml" 57 2588 2652
type(
  (int * int) option
)
ident(
  int_ref base_size "gWindow.ml" 55 2460 2509 "gWindow.ml" 55 2460 2518
)
"gWindow.ml" 57 2588 2654 "gWindow.ml" 57 2588 2660
type(
  (float * float) option
)
ident(
  int_ref aspect "gWindow.ml" 55 2460 2520 "gWindow.ml" 55 2460 2526
)
"gWindow.ml" 58 2661 2668 "gWindow.ml" 58 2661 2678
type(
  (int * int) option
)
ident(
  int_ref resize_inc "gWindow.ml" 56 2527 2534 "gWindow.ml" 56 2527 2544
)
"gWindow.ml" 58 2661 2680 "gWindow.ml" 58 2661 2691
type(
  Gdk.Tags.gravity option
)
ident(
  int_ref win_gravity "gWindow.ml" 56 2527 2546 "gWindow.ml" 56 2527 2557
)
"gWindow.ml" 58 2661 2693 "gWindow.ml" 58 2661 2696
type(
  bool option
)
ident(
  int_ref pos "gWindow.ml" 56 2527 2559 "gWindow.ml" 56 2527 2562
)
"gWindow.ml" 58 2661 2698 "gWindow.ml" 58 2661 2706
type(
  bool option
)
ident(
  int_ref user_pos "gWindow.ml" 56 2527 2564 "gWindow.ml" 56 2527 2572
)
"gWindow.ml" 58 2661 2708 "gWindow.ml" 58 2661 2717
type(
  bool option
)
ident(
  int_ref user_size "gWindow.ml" 56 2527 2574 "gWindow.ml" 56 2527 2583
)
"gWindow.ml" 58 2661 2719 "gWindow.ml" 58 2661 2728
type(
  GObj.widget -> Gtk.widget Gtk.obj
)
ident(
  ext_ref GObj.as_widget
)
"gWindow.ml" 58 2661 2729 "gWindow.ml" 58 2661 2730
type(
  GObj.widget
)
ident(
  int_ref w "gWindow.ml" 56 2527 2584 "gWindow.ml" 56 2527 2585
)
"gWindow.ml" 58 2661 2718 "gWindow.ml" 58 2661 2731
call(
  stack
)
type(
  Gtk.widget Gtk.obj
)
"gWindow.ml" 57 2588 2592 "gWindow.ml" 58 2661 2731
type(
  unit
)
"gWindow.ml" 59 2732 2759 "gWindow.ml" 59 2732 2760
type(
  Gtk.window Gtk.obj
)
ident(
  def w "gWindow.ml" 60 2763 2767 "gWindow.ml" 60 2763 2799
)
"gWindow.ml" 60 2763 2767 "gWindow.ml" 60 2763 2770
type(
  'a Gtk.obj ->
  ('a, Gtk.window Gtk.obj option) Gobject.property ->
  Gtk.window Gtk.obj option -> unit
)
ident(
  int_ref set "gWindow.ml" 34 1784 1788 "gWindow.ml" 34 1784 1791
)
"gWindow.ml" 60 2763 2771 "gWindow.ml" 60 2763 2774
type(
  'a Gtk.obj
)
"gWindow.ml" 60 2763 2775 "gWindow.ml" 60 2763 2790
type(
  ('a, Gtk.window Gtk.obj option) Gobject.property
)
ident(
  ext_ref P.transient_for
)
"gWindow.ml" 60 2763 2797 "gWindow.ml" 60 2763 2798
type(
  Gtk.window Gtk.obj
)
ident(
  int_ref w "gWindow.ml" 59 2732 2759 "gWindow.ml" 59 2732 2760
)
"gWindow.ml" 60 2763 2791 "gWindow.ml" 60 2763 2799
type(
  Gtk.window Gtk.obj option
)
"gWindow.ml" 60 2763 2767 "gWindow.ml" 60 2763 2799
call(
  tail
)
type(
  unit
)
"gWindow.ml" 61 2800 2821 "gWindow.ml" 61 2800 2825
type(
  string
)
ident(
  def name "gWindow.ml" 61 2800 2828 "gWindow.ml" 61 2800 2856
)
"gWindow.ml" 61 2800 2828 "gWindow.ml" 61 2800 2846
type(
  ?name:string -> ?clas:string -> 'a Gtk.obj -> unit
)
ident(
  ext_ref GtkWindow.Window.set_wmclass
)
"gWindow.ml" 61 2800 2847 "gWindow.ml" 61 2800 2850
type(
  'a Gtk.obj
)
"gWindow.ml" 61 2800 2852 "gWindow.ml" 61 2800 2856
type(
  string
)
ident(
  int_ref name "gWindow.ml" 61 2800 2821 "gWindow.ml" 61 2800 2825
)
"gWindow.ml" 61 2800 2828 "gWindow.ml" 61 2800 2856
call(
  tail
)
type(
  unit
)
"gWindow.ml" 62 2857 2879 "gWindow.ml" 62 2857 2882
type(
  string
)
ident(
  def cls "gWindow.ml" 62 2857 2885 "gWindow.ml" 62 2857 2917
)
"gWindow.ml" 62 2857 2885 "gWindow.ml" 62 2857 2903
type(
  ?name:string -> ?clas:string -> 'a Gtk.obj -> unit
)
ident(
  ext_ref GtkWindow.Window.set_wmclass
)
"gWindow.ml" 62 2857 2904 "gWindow.ml" 62 2857 2907
type(
  'a Gtk.obj
)
"gWindow.ml" 62 2857 2914 "gWindow.ml" 62 2857 2917
type(
  string
)
ident(
  int_ref cls "gWindow.ml" 62 2857 2879 "gWindow.ml" 62 2857 2882
)
"gWindow.ml" 62 2857 2885 "gWindow.ml" 62 2857 2917
call(
  tail
)
type(
  unit
)
"gWindow.ml" 63 2918 2932 "gWindow.ml" 63 2918 2934
type(
  unit
)
"gWindow.ml" 63 2918 2937 "gWindow.ml" 63 2918 2948
type(
  'a Gtk.obj -> unit
)
ident(
  ext_ref GtkBase.Widget.show
)
"gWindow.ml" 63 2918 2949 "gWindow.ml" 63 2918 2952
type(
  'a Gtk.obj
)
"gWindow.ml" 63 2918 2937 "gWindow.ml" 63 2918 2952
type(
  unit
)
"gWindow.ml" 64 2953 2970 "gWindow.ml" 64 2953 2972
type(
  unit
)
"gWindow.ml" 64 2953 2975 "gWindow.ml" 64 2953 2989
type(
  'a Gtk.obj -> unit
)
ident(
  ext_ref GtkWindow.Window.present
)
"gWindow.ml" 64 2953 2990 "gWindow.ml" 64 2953 2993
type(
  'a Gtk.obj
)
"gWindow.ml" 64 2953 2975 "gWindow.ml" 64 2953 2993
type(
  unit
)
"gWindow.ml" 65 2994 3011 "gWindow.ml" 65 2994 3013
type(
  unit
)
"gWindow.ml" 65 2994 3016 "gWindow.ml" 65 2994 3030
type(
  'a Gtk.obj -> unit
)
ident(
  ext_ref GtkWindow.Window.iconify
)
"gWindow.ml" 65 2994 3031 "gWindow.ml" 65 2994 3034
type(
  'a Gtk.obj
)
"gWindow.ml" 65 2994 3016 "gWindow.ml" 65 2994 3034
type(
  unit
)
"gWindow.ml" 66 3035 3054 "gWindow.ml" 66 3035 3056
type(
  unit
)
"gWindow.ml" 66 3035 3059 "gWindow.ml" 66 3035 3075
type(
  'a Gtk.obj -> unit
)
ident(
  ext_ref GtkWindow.Window.deiconify
)
"gWindow.ml" 66 3035 3076 "gWindow.ml" 66 3035 3079
type(
  'a Gtk.obj
)
"gWindow.ml" 66 3035 3059 "gWindow.ml" 66 3035 3079
type(
  unit
)
"gWindow.ml" 69 3085 3098 "gWindow.ml" 69 3085 3101
type(
  [> Gtk.window ] Gtk.obj
)
"gWindow.ml" 70 3111 3134 "gWindow.ml" 70 3111 3137
type(
  ([> Gtk.window ] as 'a) Gtk.obj
)
type(
  'a Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 69 3085 3098 "gWindow.ml" 69 3085 3101
)
"gWindow.ml" 71 3160 3179 "gWindow.ml" 71 3160 3205
type(
  'a Gtk.obj -> GContainer.container_signals_impl
)
"gWindow.ml" 71 3160 3206 "gWindow.ml" 71 3160 3209
type(
  'a Gtk.obj
)
"gWindow.ml" 71 3160 3179 "gWindow.ml" 71 3160 3209
call(
  tail
)
type(
  GContainer.container_signals_impl
)
type(
  GContainer.container_signals_impl
)
"gWindow.ml" 72 3210 3228 "gWindow.ml" 72 3210 3230
type(
  unit
)
"gWindow.ml" 72 3210 3233 "gWindow.ml" 72 3210 3248
type(
  'a Gtk.obj -> unit
)
ident(
  ext_ref GtkWindow.Window.maximize
)
"gWindow.ml" 72 3210 3249 "gWindow.ml" 72 3210 3252
type(
  'a Gtk.obj
)
"gWindow.ml" 72 3210 3233 "gWindow.ml" 72 3210 3252
type(
  unit
)
"gWindow.ml" 73 3253 3273 "gWindow.ml" 73 3253 3275
type(
  unit
)
"gWindow.ml" 73 3253 3278 "gWindow.ml" 73 3253 3295
type(
  'a Gtk.obj -> unit
)
ident(
  ext_ref GtkWindow.Window.unmaximize
)
"gWindow.ml" 73 3253 3296 "gWindow.ml" 73 3253 3299
type(
  'a Gtk.obj
)
"gWindow.ml" 73 3253 3278 "gWindow.ml" 73 3253 3299
type(
  unit
)
"gWindow.ml" 74 3300 3320 "gWindow.ml" 74 3300 3322
type(
  unit
)
"gWindow.ml" 74 3300 3325 "gWindow.ml" 74 3300 3342
type(
  'a Gtk.obj -> unit
)
ident(
  ext_ref GtkWindow.Window.fullscreen
)
"gWindow.ml" 74 3300 3343 "gWindow.ml" 74 3300 3346
type(
  'a Gtk.obj
)
"gWindow.ml" 74 3300 3325 "gWindow.ml" 74 3300 3346
type(
  unit
)
"gWindow.ml" 75 3347 3369 "gWindow.ml" 75 3347 3371
type(
  unit
)
"gWindow.ml" 75 3347 3374 "gWindow.ml" 75 3347 3393
type(
  'a Gtk.obj -> unit
)
ident(
  ext_ref GtkWindow.Window.unfullscreen
)
"gWindow.ml" 75 3347 3394 "gWindow.ml" 75 3347 3397
type(
  'a Gtk.obj
)
"gWindow.ml" 75 3347 3374 "gWindow.ml" 75 3347 3397
type(
  unit
)
"gWindow.ml" 76 3398 3413 "gWindow.ml" 76 3398 3415
type(
  unit
)
"gWindow.ml" 76 3398 3418 "gWindow.ml" 76 3398 3430
type(
  'a Gtk.obj -> unit
)
ident(
  ext_ref GtkWindow.Window.stick
)
"gWindow.ml" 76 3398 3431 "gWindow.ml" 76 3398 3434
type(
  'a Gtk.obj
)
"gWindow.ml" 76 3398 3418 "gWindow.ml" 76 3398 3434
type(
  unit
)
"gWindow.ml" 77 3435 3452 "gWindow.ml" 77 3435 3454
type(
  unit
)
"gWindow.ml" 77 3435 3457 "gWindow.ml" 77 3435 3471
type(
  'a Gtk.obj -> unit
)
ident(
  ext_ref GtkWindow.Window.unstick
)
"gWindow.ml" 77 3435 3472 "gWindow.ml" 77 3435 3475
type(
  'a Gtk.obj
)
"gWindow.ml" 77 3435 3457 "gWindow.ml" 77 3435 3475
type(
  unit
)
"gWindow.ml" 80 3481 3485 "gWindow.ml" 80 3481 3496
type(
  create:(([> `container | `widget | `window ] as 'a) Gobject.param list ->
          (#window_skel as 'b)) ->
  'a Gobject.param list ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int -> ?width:int -> ?height:int -> ?show:bool -> unit -> 'b
)
ident(
  def make_window "gWindow.ml" 89 3780 3780 --
)
"gWindow.ml" 80 3481 3498 "gWindow.ml" 80 3481 3504
type(
  'a Gobject.param list -> 'b
)
ident(
  def create "gWindow.ml" 81 3507 3509 "gWindow.ml" 87 3769 3778
)
"gWindow.ml" 81 3507 3509 "gWindow.ml" 81 3507 3527
type(
  cont:('a Gobject.param list ->
        ?wm_name:string ->
        ?wm_class:string ->
        ?border_width:int ->
        ?width:int -> ?height:int -> ?show:bool -> unit -> 'b) ->
  'a Gobject.param list ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int -> ?width:int -> ?height:int -> ?show:bool -> unit -> 'b
)
ident(
  ext_ref GtkWindow.Window.make_params
)
"gWindow.ml" 81 3507 3539 "gWindow.ml" 81 3507 3541
type(
  'a Gobject.param list
)
ident(
  def pl "gWindow.ml" 81 3507 3542 "gWindow.ml" 87 3769 3777
)
"gWindow.ml" 81 3507 3543 "gWindow.ml" 81 3507 3550
type(
  string option
)
ident(
  def wm_name "gWindow.ml" 81 3507 3551 "gWindow.ml" 87 3769 3777
)
"gWindow.ml" 81 3507 3552 "gWindow.ml" 81 3507 3560
type(
  string option
)
ident(
  def wm_class "gWindow.ml" 82 3564 3568 "gWindow.ml" 87 3769 3777
)
"gWindow.ml" 82 3564 3568 "gWindow.ml" 82 3564 3589
type(
  cont:('a Gobject.param list -> ?show:bool -> unit -> 'b) ->
  'a Gobject.param list ->
  ?border_width:int -> ?width:int -> ?height:int -> ?show:bool -> unit -> 'b
)
ident(
  ext_ref GtkBase.Container.make_params
)
"gWindow.ml" 82 3564 3590 "gWindow.ml" 82 3564 3592
type(
  'a Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 81 3507 3539 "gWindow.ml" 81 3507 3541
)
"gWindow.ml" 82 3564 3604 "gWindow.ml" 82 3564 3606
type(
  'a Gobject.param list
)
ident(
  def pl "gWindow.ml" 82 3564 3607 "gWindow.ml" 87 3769 3776
)
"gWindow.ml" 82 3564 3609 "gWindow.ml" 82 3564 3613
type(
  bool
)
"gWindow.ml" 82 3564 3614 "gWindow.ml" 82 3564 3619
type(
  bool
)
type(
  bool
)
ident(
  int_ref *sth* "gWindow.ml" 82 3564 3614 "gWindow.ml" 82 3564 3619
)
type(
  bool option
)
type(
  bool option
)
type(
  bool
)
ident(
  def *sth* "gWindow.ml" 82 3564 3614 "gWindow.ml" 82 3564 3619
)
"gWindow.ml" 82 3564 3621 "gWindow.ml" 82 3564 3623
type(
  unit
)
"gWindow.ml" 83 3627 3638 "gWindow.ml" 83 3627 3639
type(
  'b
)
"gWindow.ml" 83 3627 3658 "gWindow.ml" 83 3627 3664
type(
  'a Gobject.param list -> 'b
)
ident(
  int_ref create "gWindow.ml" 80 3481 3498 "gWindow.ml" 80 3481 3504
)
"gWindow.ml" 83 3627 3665 "gWindow.ml" 83 3627 3667
type(
  'a Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 82 3564 3604 "gWindow.ml" 82 3564 3606
)
"gWindow.ml" 83 3627 3658 "gWindow.ml" 83 3627 3667
call(
  stack
)
type(
  'b
)
"gWindow.ml" 84 3671 3677 "gWindow.ml" 84 3671 3680
type(
  f:(string -> unit) -> string option -> unit
)
ident(
  ext_ref Gaux.may
)
"gWindow.ml" 84 3671 3681 "gWindow.ml" 84 3671 3682
type(
  'b
)
ident(
  int_ref w "gWindow.ml" 83 3627 3638 "gWindow.ml" 83 3627 3639
)
"gWindow.ml" 84 3671 3681 "gWindow.ml" 84 3671 3694
call(
  stack
)
type(
  string -> unit
)
"gWindow.ml" 84 3671 3695 "gWindow.ml" 84 3671 3702
type(
  string option
)
ident(
  int_ref wm_name "gWindow.ml" 81 3507 3543 "gWindow.ml" 81 3507 3550
)
"gWindow.ml" 84 3671 3677 "gWindow.ml" 84 3671 3702
call(
  stack
)
type(
  unit
)
"gWindow.ml" 85 3704 3710 "gWindow.ml" 85 3704 3713
type(
  f:(string -> unit) -> string option -> unit
)
ident(
  ext_ref Gaux.may
)
"gWindow.ml" 85 3704 3714 "gWindow.ml" 85 3704 3715
type(
  'b
)
ident(
  int_ref w "gWindow.ml" 83 3627 3638 "gWindow.ml" 83 3627 3639
)
"gWindow.ml" 85 3704 3714 "gWindow.ml" 85 3704 3728
call(
  stack
)
type(
  string -> unit
)
"gWindow.ml" 85 3704 3729 "gWindow.ml" 85 3704 3737
type(
  string option
)
ident(
  int_ref wm_class "gWindow.ml" 81 3507 3552 "gWindow.ml" 81 3507 3560
)
"gWindow.ml" 85 3704 3710 "gWindow.ml" 85 3704 3737
call(
  stack
)
type(
  unit
)
"gWindow.ml" 86 3739 3748 "gWindow.ml" 86 3739 3752
type(
  bool
)
ident(
  int_ref show "gWindow.ml" 82 3564 3609 "gWindow.ml" 82 3564 3613
)
"gWindow.ml" 86 3739 3758 "gWindow.ml" 86 3739 3759
type(
  'b
)
ident(
  int_ref w "gWindow.ml" 83 3627 3638 "gWindow.ml" 83 3627 3639
)
"gWindow.ml" 86 3739 3758 "gWindow.ml" 86 3739 3764
call(
  stack
)
type(
  unit -> unit
)
"gWindow.ml" 86 3739 3765 "gWindow.ml" 86 3739 3767
type(
  unit
)
"gWindow.ml" 86 3739 3758 "gWindow.ml" 86 3739 3767
type(
  unit
)
"gWindow.ml" 86 3739 3745 "gWindow.ml" 86 3739 3767
type(
  unit
)
"gWindow.ml" 87 3769 3775 "gWindow.ml" 87 3769 3776
type(
  'b
)
ident(
  int_ref w "gWindow.ml" 83 3627 3638 "gWindow.ml" 83 3627 3639
)
"gWindow.ml" 86 3739 3745 "gWindow.ml" 87 3769 3776
type(
  'b
)
"gWindow.ml" 85 3704 3710 "gWindow.ml" 87 3769 3776
type(
  'b
)
"gWindow.ml" 84 3671 3677 "gWindow.ml" 87 3769 3776
type(
  'b
)
"gWindow.ml" 83 3627 3633 "gWindow.ml" 87 3769 3776
type(
  'b
)
"gWindow.ml" 82 3564 3599 "gWindow.ml" 87 3769 3777
type(
  'a Gobject.param list -> ?show:bool -> unit -> 'b
)
"gWindow.ml" 82 3564 3568 "gWindow.ml" 87 3769 3777
call(
  tail
)
type(
  ?border_width:int -> ?width:int -> ?height:int -> ?show:bool -> unit -> 'b
)
"gWindow.ml" 81 3507 3534 "gWindow.ml" 87 3769 3778
type(
  'a Gobject.param list ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int -> ?width:int -> ?height:int -> ?show:bool -> unit -> 'b
)
"gWindow.ml" 81 3507 3509 "gWindow.ml" 87 3769 3778
call(
  tail
)
type(
  'a Gobject.param list ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int -> ?width:int -> ?height:int -> ?show:bool -> unit -> 'b
)
"gWindow.ml" 89 3780 3784 "gWindow.ml" 89 3780 3790
type(
  ?kind:GtkEnums.window_type ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> window
)
ident(
  def window "gWindow.ml" 92 3873 3873 --
)
"gWindow.ml" 89 3780 3792 "gWindow.ml" 89 3780 3796
type(
  GtkEnums.window_type option
)
ident(
  def kind "gWindow.ml" 90 3799 3801 "gWindow.ml" 90 3799 3871
)
"gWindow.ml" 90 3799 3801 "gWindow.ml" 90 3799 3812
type(
  create:(Gtk.window Gobject.param list -> window) ->
  Gtk.window Gobject.param list ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> window
)
ident(
  int_ref make_window "gWindow.ml" 80 3481 3485 "gWindow.ml" 80 3481 3496
)
"gWindow.ml" 90 3799 3813 "gWindow.ml" 90 3799 3815
type(
  Gtk.window Gobject.param list
)
"gWindow.ml" 90 3799 3829 "gWindow.ml" 90 3799 3831
type(
  Gtk.window Gobject.param list
)
ident(
  def pl "gWindow.ml" 90 3799 3835 "gWindow.ml" 90 3799 3870
)
"gWindow.ml" 90 3799 3835 "gWindow.ml" 90 3799 3845
type(
  Gtk.window Gtk.obj -> window
)
"gWindow.ml" 90 3799 3847 "gWindow.ml" 90 3799 3860
type(
  ?kind:GtkEnums.window_type ->
  Gtk.window Gobject.param list -> Gtk.window Gtk.obj
)
ident(
  ext_ref GtkWindow.Window.create
)
"gWindow.ml" 90 3799 3862 "gWindow.ml" 90 3799 3866
type(
  GtkEnums.window_type option
)
ident(
  int_ref kind "gWindow.ml" 89 3780 3792 "gWindow.ml" 89 3780 3796
)
"gWindow.ml" 90 3799 3867 "gWindow.ml" 90 3799 3869
type(
  Gtk.window Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 90 3799 3829 "gWindow.ml" 90 3799 3831
)
"gWindow.ml" 90 3799 3846 "gWindow.ml" 90 3799 3870
call(
  stack
)
type(
  Gtk.window Gtk.obj
)
"gWindow.ml" 90 3799 3835 "gWindow.ml" 90 3799 3870
call(
  tail
)
type(
  window
)
"gWindow.ml" 90 3799 3824 "gWindow.ml" 90 3799 3871
type(
  Gtk.window Gobject.param list -> window
)
"gWindow.ml" 90 3799 3801 "gWindow.ml" 90 3799 3871
call(
  tail
)
type(
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> window
)
"gWindow.ml" 92 3873 3877 "gWindow.ml" 92 3873 3888
type(
  #GObj.widget -> window
)
ident(
  def cast_window "gWindow.ml" 95 3945 3945 --
)
"gWindow.ml" 92 3873 3890 "gWindow.ml" 92 3873 3891
type(
  #GObj.widget as 'a
)
ident(
  def w "gWindow.ml" 93 3905 3907 "gWindow.ml" 93 3905 3943
)
"gWindow.ml" 93 3905 3907 "gWindow.ml" 93 3905 3917
type(
  Gtk.window Gtk.obj -> window
)
"gWindow.ml" 93 3905 3919 "gWindow.ml" 93 3905 3930
type(
  Gtk.widget Gtk.obj -> Gtk.window Gtk.obj
)
ident(
  ext_ref GtkWindow.Window.cast
)
"gWindow.ml" 93 3905 3931 "gWindow.ml" 93 3905 3932
type(
  'a
)
ident(
  int_ref w "gWindow.ml" 92 3873 3890 "gWindow.ml" 92 3873 3891
)
"gWindow.ml" 93 3905 3931 "gWindow.ml" 93 3905 3942
call(
  stack
)
type(
  Gtk.widget Gtk.obj
)
"gWindow.ml" 93 3905 3918 "gWindow.ml" 93 3905 3943
call(
  stack
)
type(
  Gtk.window Gtk.obj
)
"gWindow.ml" 93 3905 3907 "gWindow.ml" 93 3905 3943
call(
  tail
)
type(
  window
)
"gWindow.ml" 95 3945 3949 "gWindow.ml" 95 3945 3957
type(
  #GObj.widget -> window option
)
ident(
  def toplevel "gWindow.ml" 101 4068 4068 --
)
"gWindow.ml" 95 3945 3959 "gWindow.ml" 95 3945 3960
type(
  #GObj.widget as 'a
)
ident(
  def w "gWindow.ml" 96 3974 3976 "gWindow.ml" 96 3974 4049
)
"gWindow.ml" 96 3974 3986 "gWindow.ml" 96 3974 3997
type(
  GObj.widget -> window
)
ident(
  int_ref cast_window "gWindow.ml" 92 3873 3877 "gWindow.ml" 92 3873 3888
)
"gWindow.ml" 96 3974 3998 "gWindow.ml" 96 3974 3999
type(
  'a
)
ident(
  int_ref w "gWindow.ml" 95 3945 3959 "gWindow.ml" 95 3945 3960
)
"gWindow.ml" 96 3974 3998 "gWindow.ml" 96 3974 4004
call(
  stack
)
type(
  GObj.misc_ops
)
"gWindow.ml" 96 3974 3998 "gWindow.ml" 96 3974 4013
call(
  stack
)
type(
  GObj.widget
)
"gWindow.ml" 96 3974 3985 "gWindow.ml" 96 3974 4014
call(
  stack
)
type(
  window
)
"gWindow.ml" 96 3974 3980 "gWindow.ml" 96 3974 4014
type(
  window option
)
"gWindow.ml" 96 3974 4040 "gWindow.ml" 96 3974 4041
type(
  string
)
type(
  string
)
"gWindow.ml" 96 3974 4020 "gWindow.ml" 96 3974 4041
type(
  exn
)
"gWindow.ml" 96 3974 4045 "gWindow.ml" 96 3974 4049
type(
  window option
)
"gWindow.ml" 96 3974 3976 "gWindow.ml" 96 3974 4049
type(
  window option
)
"gWindow.ml" 101 4068 4095 "gWindow.ml" 101 4068 4098
type(
  [> Gtk.dialog ] Gtk.obj
)
"gWindow.ml" 101 4068 4121 "gWindow.ml" 101 4068 4127
type(
  int -> 'a
)
"gWindow.ml" 101 4068 4137 "gWindow.ml" 101 4068 4143
type(
  < add : callback:(GObj.widget -> unit) -> GtkSignal.id; after : 'b;
    close : callback:(unit -> unit) -> GtkSignal.id;
    destroy : callback:(unit -> unit) -> GtkSignal.id;
    remove : callback:(GObj.widget -> unit) -> GtkSignal.id;
    response : callback:('a -> unit) -> GtkSignal.id; .. >
  as 'b
)
"gWindow.ml" 102 4144 4177 "gWindow.ml" 102 4144 4180
type(
  ([> Gtk.dialog ] as 'c) Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 101 4068 4095 "gWindow.ml" 101 4068 4098
)
"gWindow.ml" 103 4181 4201 "gWindow.ml" 103 4181 4209
type(
  'a -> unit
)
ident(
  def callback "gWindow.ml" 104 4227 4231 "gWindow.ml" 105 4262 4308
)
"gWindow.ml" 104 4227 4231 "gWindow.ml" 104 4227 4235
type(
  'b
)
"gWindow.ml" 104 4227 4231 "gWindow.ml" 104 4227 4243
call(
  tail
)
type(
  ('c, int -> unit) GtkSignal.t -> callback:(int -> unit) -> GtkSignal.id
)
"gWindow.ml" 104 4227 4244 "gWindow.ml" 104 4227 4261
type(
  ('c, int -> unit) GtkSignal.t
)
ident(
  ext_ref GtkWindow.Dialog.S.response
)
"gWindow.ml" 105 4262 4283 "gWindow.ml" 105 4262 4284
type(
  int
)
ident(
  def i "gWindow.ml" 105 4262 4288 "gWindow.ml" 105 4262 4307
)
"gWindow.ml" 105 4262 4288 "gWindow.ml" 105 4262 4296
type(
  'a -> unit
)
ident(
  int_ref callback "gWindow.ml" 103 4181 4201 "gWindow.ml" 103 4181 4209
)
"gWindow.ml" 105 4262 4298 "gWindow.ml" 105 4262 4304
type(
  int -> 'a
)
"gWindow.ml" 105 4262 4305 "gWindow.ml" 105 4262 4306
type(
  int
)
ident(
  int_ref i "gWindow.ml" 105 4262 4283 "gWindow.ml" 105 4262 4284
)
"gWindow.ml" 105 4262 4297 "gWindow.ml" 105 4262 4307
call(
  stack
)
type(
  'a
)
"gWindow.ml" 105 4262 4288 "gWindow.ml" 105 4262 4307
call(
  tail
)
type(
  unit
)
"gWindow.ml" 105 4262 4278 "gWindow.ml" 105 4262 4308
type(
  int -> unit
)
"gWindow.ml" 104 4227 4231 "gWindow.ml" 105 4262 4308
type(
  GtkSignal.id
)
"gWindow.ml" 106 4309 4326 "gWindow.ml" 106 4309 4330
type(
  'b
)
"gWindow.ml" 106 4309 4326 "gWindow.ml" 106 4309 4338
call(
  tail
)
type(
  ('c, unit -> unit) GtkSignal.t -> callback:(unit -> unit) -> GtkSignal.id
)
"gWindow.ml" 106 4309 4339 "gWindow.ml" 106 4309 4353
type(
  ('c, unit -> unit) GtkSignal.t
)
ident(
  ext_ref GtkWindow.Dialog.S.close
)
"gWindow.ml" 106 4309 4326 "gWindow.ml" 106 4309 4353
type(
  callback:(unit -> unit) -> GtkSignal.id
)
type(
  callback:(unit -> unit) -> GtkSignal.id
)
"gWindow.ml" 109 4359 4367 "gWindow.ml" 109 4359 4378
type(
  'a -> ('b * 'a) list -> 'b
)
ident(
  def list_rassoc "gWindow.ml" 109 4359 4359 --
)
"gWindow.ml" 109 4359 4379 "gWindow.ml" 109 4359 4380
type(
  'a
)
ident(
  def k "gWindow.ml" 109 4359 4383 "gWindow.ml" 112 4454 4479
)
"gWindow.ml" 110 4392 4397 "gWindow.ml" 110 4392 4398
type(
  'b
)
ident(
  def a "gWindow.ml" 110 4392 4408 "gWindow.ml" 110 4392 4423
)
"gWindow.ml" 110 4392 4400 "gWindow.ml" 110 4392 4401
type(
  'a
)
ident(
  def b "gWindow.ml" 110 4392 4408 "gWindow.ml" 110 4392 4423
)
"gWindow.ml" 110 4392 4396 "gWindow.ml" 110 4392 4402
type(
  'b * 'a
)
"gWindow.ml" 110 4392 4406 "gWindow.ml" 110 4392 4407
type(
  ('b * 'a) list
)
"gWindow.ml" 110 4392 4396 "gWindow.ml" 110 4392 4407
type(
  ('b * 'a) list
)
"gWindow.ml" 110 4392 4413 "gWindow.ml" 110 4392 4414
type(
  'a
)
ident(
  int_ref b "gWindow.ml" 110 4392 4400 "gWindow.ml" 110 4392 4401
)
"gWindow.ml" 110 4392 4415 "gWindow.ml" 110 4392 4416
type(
  'a -> 'a -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"gWindow.ml" 110 4392 4417 "gWindow.ml" 110 4392 4418
type(
  'a
)
ident(
  int_ref k "gWindow.ml" 109 4359 4379 "gWindow.ml" 109 4359 4380
)
"gWindow.ml" 110 4392 4413 "gWindow.ml" 110 4392 4418
type(
  bool
)
"gWindow.ml" 110 4392 4422 "gWindow.ml" 110 4392 4423
type(
  'b
)
ident(
  int_ref a "gWindow.ml" 110 4392 4397 "gWindow.ml" 110 4392 4398
)
"gWindow.ml" 110 4392 4408 "gWindow.ml" 110 4392 4423
type(
  'b
)
"gWindow.ml" 111 4424 4428 "gWindow.ml" 111 4424 4429
type(
  'b * 'a
)
"gWindow.ml" 111 4424 4433 "gWindow.ml" 111 4424 4434
type(
  ('b * 'a) list
)
ident(
  def l "gWindow.ml" 111 4424 4438 "gWindow.ml" 111 4424 4453
)
"gWindow.ml" 111 4424 4428 "gWindow.ml" 111 4424 4434
type(
  ('b * 'a) list
)
"gWindow.ml" 111 4424 4438 "gWindow.ml" 111 4424 4449
type(
  'a -> ('b * 'a) list -> 'b
)
ident(
  int_ref list_rassoc "gWindow.ml" 109 4359 4367 "gWindow.ml" 109 4359 4378
)
"gWindow.ml" 111 4424 4450 "gWindow.ml" 111 4424 4451
type(
  'a
)
ident(
  int_ref k "gWindow.ml" 109 4359 4379 "gWindow.ml" 109 4359 4380
)
"gWindow.ml" 111 4424 4452 "gWindow.ml" 111 4424 4453
type(
  ('b * 'a) list
)
ident(
  int_ref l "gWindow.ml" 111 4424 4433 "gWindow.ml" 111 4424 4434
)
"gWindow.ml" 111 4424 4438 "gWindow.ml" 111 4424 4453
call(
  tail
)
type(
  'b
)
"gWindow.ml" 112 4454 4458 "gWindow.ml" 112 4454 4460
type(
  ('b * 'a) list
)
"gWindow.ml" 112 4454 4464 "gWindow.ml" 112 4454 4469
type(
  exn -> 'b
)
ident(
  ext_ref Pervasives.raise
)
"gWindow.ml" 112 4454 4470 "gWindow.ml" 112 4454 4479
type(
  exn
)
"gWindow.ml" 112 4454 4464 "gWindow.ml" 112 4454 4479
type(
  'b
)
"gWindow.ml" 109 4359 4383 "gWindow.ml" 112 4454 4479
type(
  ('b * 'a) list -> 'b
)
"gWindow.ml" 114 4481 4485 "gWindow.ml" 114 4481 4489
type(
  GtkEnums.response -> int
)
ident(
  def resp "gWindow.ml" 116 4513 4513 --
)
"gWindow.ml" 114 4481 4492 "gWindow.ml" 114 4481 4511
type(
  GtkEnums.response -> int
)
ident(
  ext_ref GtkWindow.Dialog.std_response
)
"gWindow.ml" 116 4513 4517 "gWindow.ml" 116 4513 4522
type(
  int
)
ident(
  def rnone "gWindow.ml" 128 4783 4783 --
)
"gWindow.ml" 116 4513 4525 "gWindow.ml" 116 4513 4529
type(
  GtkEnums.response -> int
)
ident(
  int_ref resp "gWindow.ml" 114 4481 4485 "gWindow.ml" 114 4481 4489
)
"gWindow.ml" 116 4513 4530 "gWindow.ml" 116 4513 4535
type(
  GtkEnums.response
)
"gWindow.ml" 116 4513 4525 "gWindow.ml" 116 4513 4535
call(
  stack
)
type(
  int
)
"gWindow.ml" 117 4536 4540 "gWindow.ml" 117 4536 4547
type(
  int
)
ident(
  def rreject "gWindow.ml" 128 4783 4783 --
)
"gWindow.ml" 117 4536 4550 "gWindow.ml" 117 4536 4554
type(
  GtkEnums.response -> int
)
ident(
  int_ref resp "gWindow.ml" 114 4481 4485 "gWindow.ml" 114 4481 4489
)
"gWindow.ml" 117 4536 4555 "gWindow.ml" 117 4536 4562
type(
  GtkEnums.response
)
"gWindow.ml" 117 4536 4550 "gWindow.ml" 117 4536 4562
call(
  stack
)
type(
  int
)
"gWindow.ml" 118 4563 4567 "gWindow.ml" 118 4563 4574
type(
  int
)
ident(
  def raccept "gWindow.ml" 128 4783 4783 --
)
"gWindow.ml" 118 4563 4577 "gWindow.ml" 118 4563 4581
type(
  GtkEnums.response -> int
)
ident(
  int_ref resp "gWindow.ml" 114 4481 4485 "gWindow.ml" 114 4481 4489
)
"gWindow.ml" 118 4563 4582 "gWindow.ml" 118 4563 4589
type(
  GtkEnums.response
)
"gWindow.ml" 118 4563 4577 "gWindow.ml" 118 4563 4589
call(
  stack
)
type(
  int
)
"gWindow.ml" 119 4590 4594 "gWindow.ml" 119 4590 4601
type(
  int
)
ident(
  def rdelete "gWindow.ml" 128 4783 4783 --
)
"gWindow.ml" 119 4590 4604 "gWindow.ml" 119 4590 4608
type(
  GtkEnums.response -> int
)
ident(
  int_ref resp "gWindow.ml" 114 4481 4485 "gWindow.ml" 114 4481 4489
)
"gWindow.ml" 119 4590 4609 "gWindow.ml" 119 4590 4622
type(
  GtkEnums.response
)
"gWindow.ml" 119 4590 4604 "gWindow.ml" 119 4590 4622
call(
  stack
)
type(
  int
)
"gWindow.ml" 120 4623 4627 "gWindow.ml" 120 4623 4630
type(
  int
)
ident(
  def rok "gWindow.ml" 128 4783 4783 --
)
"gWindow.ml" 120 4623 4633 "gWindow.ml" 120 4623 4637
type(
  GtkEnums.response -> int
)
ident(
  int_ref resp "gWindow.ml" 114 4481 4485 "gWindow.ml" 114 4481 4489
)
"gWindow.ml" 120 4623 4638 "gWindow.ml" 120 4623 4641
type(
  GtkEnums.response
)
"gWindow.ml" 120 4623 4633 "gWindow.ml" 120 4623 4641
call(
  stack
)
type(
  int
)
"gWindow.ml" 121 4642 4646 "gWindow.ml" 121 4642 4653
type(
  int
)
ident(
  def rcancel "gWindow.ml" 128 4783 4783 --
)
"gWindow.ml" 121 4642 4656 "gWindow.ml" 121 4642 4660
type(
  GtkEnums.response -> int
)
ident(
  int_ref resp "gWindow.ml" 114 4481 4485 "gWindow.ml" 114 4481 4489
)
"gWindow.ml" 121 4642 4661 "gWindow.ml" 121 4642 4668
type(
  GtkEnums.response
)
"gWindow.ml" 121 4642 4656 "gWindow.ml" 121 4642 4668
call(
  stack
)
type(
  int
)
"gWindow.ml" 122 4669 4673 "gWindow.ml" 122 4669 4679
type(
  int
)
ident(
  def rclose "gWindow.ml" 128 4783 4783 --
)
"gWindow.ml" 122 4669 4682 "gWindow.ml" 122 4669 4686
type(
  GtkEnums.response -> int
)
ident(
  int_ref resp "gWindow.ml" 114 4481 4485 "gWindow.ml" 114 4481 4489
)
"gWindow.ml" 122 4669 4687 "gWindow.ml" 122 4669 4693
type(
  GtkEnums.response
)
"gWindow.ml" 122 4669 4682 "gWindow.ml" 122 4669 4693
call(
  stack
)
type(
  int
)
"gWindow.ml" 123 4694 4698 "gWindow.ml" 123 4694 4702
type(
  int
)
ident(
  def ryes "gWindow.ml" 128 4783 4783 --
)
"gWindow.ml" 123 4694 4705 "gWindow.ml" 123 4694 4709
type(
  GtkEnums.response -> int
)
ident(
  int_ref resp "gWindow.ml" 114 4481 4485 "gWindow.ml" 114 4481 4489
)
"gWindow.ml" 123 4694 4710 "gWindow.ml" 123 4694 4714
type(
  GtkEnums.response
)
"gWindow.ml" 123 4694 4705 "gWindow.ml" 123 4694 4714
call(
  stack
)
type(
  int
)
"gWindow.ml" 124 4715 4719 "gWindow.ml" 124 4715 4722
type(
  int
)
ident(
  def rno "gWindow.ml" 128 4783 4783 --
)
"gWindow.ml" 124 4715 4725 "gWindow.ml" 124 4715 4729
type(
  GtkEnums.response -> int
)
ident(
  int_ref resp "gWindow.ml" 114 4481 4485 "gWindow.ml" 114 4481 4489
)
"gWindow.ml" 124 4715 4730 "gWindow.ml" 124 4715 4733
type(
  GtkEnums.response
)
"gWindow.ml" 124 4715 4725 "gWindow.ml" 124 4715 4733
call(
  stack
)
type(
  int
)
"gWindow.ml" 125 4734 4738 "gWindow.ml" 125 4734 4744
type(
  int
)
ident(
  def rapply "gWindow.ml" 128 4783 4783 --
)
"gWindow.ml" 125 4734 4747 "gWindow.ml" 125 4734 4751
type(
  GtkEnums.response -> int
)
ident(
  int_ref resp "gWindow.ml" 114 4481 4485 "gWindow.ml" 114 4481 4489
)
"gWindow.ml" 125 4734 4752 "gWindow.ml" 125 4734 4758
type(
  GtkEnums.response
)
"gWindow.ml" 125 4734 4747 "gWindow.ml" 125 4734 4758
call(
  stack
)
type(
  int
)
"gWindow.ml" 126 4759 4763 "gWindow.ml" 126 4759 4768
type(
  int
)
ident(
  def rhelp "gWindow.ml" 128 4783 4783 --
)
"gWindow.ml" 126 4759 4771 "gWindow.ml" 126 4759 4775
type(
  GtkEnums.response -> int
)
ident(
  int_ref resp "gWindow.ml" 114 4481 4485 "gWindow.ml" 114 4481 4489
)
"gWindow.ml" 126 4759 4776 "gWindow.ml" 126 4759 4781
type(
  GtkEnums.response
)
"gWindow.ml" 126 4759 4771 "gWindow.ml" 126 4759 4781
call(
  stack
)
type(
  int
)
"gWindow.ml" 128 4783 4814 "gWindow.ml" 128 4783 4817
type(
  [> `bin | `container | `dialog | `gtk | `widget | `window ] Gtk.obj
)
"gWindow.ml" 128 4783 4827 "gWindow.ml" 128 4783 4833
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; child : GObj.widget; children : GObj.widget list;
    coerce : GObj.widget; decorated : bool; default_height : int;
    default_width : int; deiconify : unit -> unit; deletable : bool;
    destroy : unit -> unit; destroy_with_parent : bool; drag : GObj.drag_ops;
    event : GObj.event_ops; focus : GContainer.focus; focus_on_map : 
    bool; get_oid : int; gravity : GdkEnums.gravity; has_separator : 
    bool; has_toplevel_focus : bool; icon : GdkPixbuf.pixbuf option;
    icon_name : string; iconify : unit -> unit; is_active : bool;
    kind : GtkEnums.window_type; misc : GObj.misc_ops; modal : bool;
    move : x:int -> y:int -> unit; opacity : float;
    parse_geometry : string -> bool; position : GtkEnums.window_position;
    present : unit -> unit; remove : GObj.widget -> unit; resizable : 
    bool; resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode; response : 'a -> unit; role : 
    string; run : unit -> 'a; screen : Gdk.screen;
    set_accept_focus : bool -> unit; set_allow_grow : bool -> unit;
    set_allow_shrink : bool -> unit; set_border_width : int -> unit;
    set_decorated : bool -> unit; set_default_height : int -> unit;
    set_default_response : 'a -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_modal : bool -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : 'a -> bool -> unit; set_role : string -> unit;
    set_screen : Gdk.screen -> unit; set_skip_pager_hint : bool -> unit;
    set_skip_taskbar_hint : bool -> unit; set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
)
"gWindow.ml" 129 4834 4856 "gWindow.ml" 129 4834 4859
type(
  ([> `bin | `container | `dialog | `gtk | `widget | `window ] as 'b) Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 128 4783 4814 "gWindow.ml" 128 4783 4817
)
"gWindow.ml" 131 4883 4906 "gWindow.ml" 131 4883 4926
type(
  Gtk.button_box Gtk.obj -> GPack.button_box
)
"gWindow.ml" 131 4883 4928 "gWindow.ml" 131 4883 4946
type(
  'b Gtk.obj -> Gtk.button_box Gtk.obj
)
ident(
  ext_ref GtkWindow.Dialog.action_area
)
"gWindow.ml" 131 4883 4947 "gWindow.ml" 131 4883 4950
type(
  'b Gtk.obj
)
"gWindow.ml" 131 4883 4927 "gWindow.ml" 131 4883 4951
type(
  Gtk.button_box Gtk.obj
)
"gWindow.ml" 131 4883 4906 "gWindow.ml" 131 4883 4951
call(
  tail
)
type(
  GPack.button_box
)
type(
  GPack.button_box
)
"gWindow.ml" 132 4952 4968 "gWindow.ml" 132 4952 4981
type(
  Gtk.box Gtk.obj -> GPack.box
)
"gWindow.ml" 132 4952 4983 "gWindow.ml" 132 4952 4994
type(
  'b Gtk.obj -> Gtk.box Gtk.obj
)
ident(
  ext_ref GtkWindow.Dialog.vbox
)
"gWindow.ml" 132 4952 4995 "gWindow.ml" 132 4952 4998
type(
  'b Gtk.obj
)
"gWindow.ml" 132 4952 4982 "gWindow.ml" 132 4952 4999
type(
  Gtk.box Gtk.obj
)
"gWindow.ml" 132 4952 4968 "gWindow.ml" 132 4952 4999
call(
  tail
)
type(
  GPack.box
)
type(
  GPack.box
)
"gWindow.ml" 135 5088 5106 "gWindow.ml" 135 5088 5107
type(
  'a
)
ident(
  def v "gWindow.ml" 135 5088 5110 "gWindow.ml" 135 5088 5145
)
"gWindow.ml" 135 5088 5110 "gWindow.ml" 135 5088 5125
type(
  'b Gtk.obj -> int -> unit
)
ident(
  ext_ref GtkWindow.Dialog.response
)
"gWindow.ml" 135 5088 5126 "gWindow.ml" 135 5088 5129
type(
  'b Gtk.obj
)
"gWindow.ml" 135 5088 5131 "gWindow.ml" 135 5088 5135
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; child : GObj.widget; children : GObj.widget list;
    coerce : GObj.widget; decorated : bool; default_height : int;
    default_width : int; deiconify : unit -> unit; deletable : bool;
    destroy : unit -> unit; destroy_with_parent : bool; drag : GObj.drag_ops;
    event : GObj.event_ops; focus : GContainer.focus; focus_on_map : 
    bool; get_oid : int; gravity : GdkEnums.gravity; has_separator : 
    bool; has_toplevel_focus : bool; icon : GdkPixbuf.pixbuf option;
    icon_name : string; iconify : unit -> unit; is_active : bool;
    kind : GtkEnums.window_type; misc : GObj.misc_ops; modal : bool;
    move : x:int -> y:int -> unit; opacity : float;
    parse_geometry : string -> bool; position : GtkEnums.window_position;
    present : unit -> unit; remove : GObj.widget -> unit; resizable : 
    bool; resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode; response : 'a -> unit; role : 
    string; run : unit -> 'a; screen : Gdk.screen;
    set_accept_focus : bool -> unit; set_allow_grow : bool -> unit;
    set_allow_shrink : bool -> unit; set_border_width : int -> unit;
    set_decorated : bool -> unit; set_default_height : int -> unit;
    set_default_response : 'a -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_modal : bool -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : 'a -> bool -> unit; set_role : string -> unit;
    set_screen : Gdk.screen -> unit; set_skip_pager_hint : bool -> unit;
    set_skip_taskbar_hint : bool -> unit; set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
  as 'c
)
"gWindow.ml" 135 5088 5131 "gWindow.ml" 135 5088 5142
call(
  stack
)
type(
  'a -> int
)
"gWindow.ml" 135 5088 5143 "gWindow.ml" 135 5088 5144
type(
  'a
)
ident(
  int_ref v "gWindow.ml" 135 5088 5106 "gWindow.ml" 135 5088 5107
)
"gWindow.ml" 135 5088 5130 "gWindow.ml" 135 5088 5145
type(
  int
)
"gWindow.ml" 135 5088 5110 "gWindow.ml" 135 5088 5145
type(
  unit
)
"gWindow.ml" 136 5146 5178 "gWindow.ml" 136 5146 5179
type(
  'a
)
ident(
  def v "gWindow.ml" 136 5146 5180 "gWindow.ml" 137 5184 5239
)
"gWindow.ml" 136 5146 5180 "gWindow.ml" 136 5146 5181
type(
  bool
)
ident(
  def s "gWindow.ml" 137 5184 5188 "gWindow.ml" 137 5184 5239
)
"gWindow.ml" 137 5184 5188 "gWindow.ml" 137 5184 5217
type(
  'b Gtk.obj -> int -> bool -> unit
)
ident(
  ext_ref GtkWindow.Dialog.set_response_sensitive
)
"gWindow.ml" 137 5184 5218 "gWindow.ml" 137 5184 5221
type(
  'b Gtk.obj
)
"gWindow.ml" 137 5184 5223 "gWindow.ml" 137 5184 5227
type(
  'c
)
"gWindow.ml" 137 5184 5223 "gWindow.ml" 137 5184 5234
call(
  stack
)
type(
  'a -> int
)
"gWindow.ml" 137 5184 5235 "gWindow.ml" 137 5184 5236
type(
  'a
)
ident(
  int_ref v "gWindow.ml" 136 5146 5178 "gWindow.ml" 136 5146 5179
)
"gWindow.ml" 137 5184 5222 "gWindow.ml" 137 5184 5237
type(
  int
)
"gWindow.ml" 137 5184 5238 "gWindow.ml" 137 5184 5239
type(
  bool
)
ident(
  int_ref s "gWindow.ml" 136 5146 5180 "gWindow.ml" 136 5146 5181
)
"gWindow.ml" 137 5184 5188 "gWindow.ml" 137 5184 5239
type(
  unit
)
"gWindow.ml" 138 5240 5270 "gWindow.ml" 138 5240 5271
type(
  'a
)
ident(
  def v "gWindow.ml" 139 5275 5279 "gWindow.ml" 139 5275 5326
)
"gWindow.ml" 139 5275 5279 "gWindow.ml" 139 5275 5306
type(
  'b Gtk.obj -> int -> unit
)
ident(
  ext_ref GtkWindow.Dialog.set_default_response
)
"gWindow.ml" 139 5275 5307 "gWindow.ml" 139 5275 5310
type(
  'b Gtk.obj
)
"gWindow.ml" 139 5275 5312 "gWindow.ml" 139 5275 5316
type(
  'c
)
"gWindow.ml" 139 5275 5312 "gWindow.ml" 139 5275 5323
call(
  stack
)
type(
  'a -> int
)
"gWindow.ml" 139 5275 5324 "gWindow.ml" 139 5275 5325
type(
  'a
)
ident(
  int_ref v "gWindow.ml" 138 5240 5270 "gWindow.ml" 138 5240 5271
)
"gWindow.ml" 139 5275 5311 "gWindow.ml" 139 5275 5326
type(
  int
)
"gWindow.ml" 139 5275 5279 "gWindow.ml" 139 5275 5326
type(
  unit
)
"gWindow.ml" 140 5327 5340 "gWindow.ml" 140 5327 5342
type(
  unit
)
"gWindow.ml" 141 5346 5354 "gWindow.ml" 141 5346 5358
type(
  int
)
"gWindow.ml" 141 5346 5361 "gWindow.ml" 141 5346 5371
type(
  'b Gtk.obj -> int
)
ident(
  ext_ref GtkWindow.Dialog.run
)
"gWindow.ml" 141 5346 5372 "gWindow.ml" 141 5346 5375
type(
  'b Gtk.obj
)
"gWindow.ml" 141 5346 5361 "gWindow.ml" 141 5346 5375
type(
  int
)
"gWindow.ml" 142 5379 5386 "gWindow.ml" 142 5379 5390
type(
  int
)
ident(
  int_ref resp "gWindow.ml" 141 5346 5354 "gWindow.ml" 141 5346 5358
)
"gWindow.ml" 142 5379 5391 "gWindow.ml" 142 5379 5392
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"gWindow.ml" 142 5379 5393 "gWindow.ml" 142 5379 5398
type(
  int
)
ident(
  int_ref rnone "gWindow.ml" 116 4513 4517 "gWindow.ml" 116 4513 4522
)
"gWindow.ml" 142 5379 5386 "gWindow.ml" 142 5379 5398
type(
  bool
)
"gWindow.ml" 143 5399 5408 "gWindow.ml" 143 5399 5416
type(
  string -> 'a
)
ident(
  ext_ref Pervasives.failwith
)
"gWindow.ml" 143 5399 5417 "gWindow.ml" 143 5399 5435
type(
  string
)
"gWindow.ml" 143 5399 5408 "gWindow.ml" 143 5399 5435
call(
  tail
)
type(
  'a
)
"gWindow.ml" 144 5436 5445 "gWindow.ml" 144 5436 5449
type(
  'c
)
"gWindow.ml" 144 5436 5445 "gWindow.ml" 144 5436 5456
call(
  tail
)
type(
  int -> 'a
)
"gWindow.ml" 144 5436 5457 "gWindow.ml" 144 5436 5461
type(
  int
)
ident(
  int_ref resp "gWindow.ml" 141 5346 5354 "gWindow.ml" 141 5346 5358
)
"gWindow.ml" 144 5436 5445 "gWindow.ml" 144 5436 5461
type(
  'a
)
"gWindow.ml" 142 5379 5383 "gWindow.ml" 144 5436 5461
type(
  'a
)
"gWindow.ml" 141 5346 5350 "gWindow.ml" 144 5436 5461
type(
  'a
)
"gWindow.ml" 147 5467 5490 "gWindow.ml" 147 5467 5493
type(
  [> `bin | `container | `dialog | `gtk | `widget | `window ] Gtk.obj
)
"gWindow.ml" 148 5503 5530 "gWindow.ml" 148 5503 5533
type(
  ([> `bin | `container | `dialog | `gtk | `widget | `window ] as 'a) Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 147 5467 5490 "gWindow.ml" 147 5467 5493
)
"gWindow.ml" 149 5534 5555 "gWindow.ml" 149 5534 5562
type(
  int
)
ident(
  int_ref rdelete "gWindow.ml" 119 4590 4594 "gWindow.ml" 119 4590 4601
)
"gWindow.ml" 149 5534 5564 "gWindow.ml" 149 5534 5577
type(
  [> `DELETE_EVENT ]
)
"gWindow.ml" 149 5534 5555 "gWindow.ml" 149 5534 5577
type(
  int * ([> `DELETE_EVENT ] as 'b)
)
"gWindow.ml" 149 5534 5554 "gWindow.ml" 149 5534 5578
type(
  (int * 'b) list
)
"gWindow.ml" 150 5579 5598 "gWindow.ml" 150 5579 5599
type(
  int
)
"gWindow.ml" 151 5600 5625 "gWindow.ml" 151 5600 5626
type(
  'b
)
ident(
  def v "gWindow.ml" 151 5600 5635 "gWindow.ml" 151 5600 5652
)
"gWindow.ml" 151 5600 5635 "gWindow.ml" 151 5600 5646
type(
  'b -> (int * 'b) list -> int
)
ident(
  int_ref list_rassoc "gWindow.ml" 109 4359 4367 "gWindow.ml" 109 4359 4378
)
"gWindow.ml" 151 5600 5647 "gWindow.ml" 151 5600 5648
type(
  'b
)
ident(
  int_ref v "gWindow.ml" 151 5600 5625 "gWindow.ml" 151 5600 5626
)
"gWindow.ml" 151 5600 5649 "gWindow.ml" 151 5600 5652
type(
  (int * 'b) list
)
"gWindow.ml" 151 5600 5635 "gWindow.ml" 151 5600 5652
call(
  tail
)
type(
  int
)
"gWindow.ml" 152 5653 5677 "gWindow.ml" 152 5653 5678
type(
  int
)
ident(
  def r "gWindow.ml" 153 5682 5686 "gWindow.ml" 160 5882 5901
)
"gWindow.ml" 154 5691 5697 "gWindow.ml" 154 5691 5707
type(
  int -> (int * 'b) list -> 'b
)
ident(
  ext_ref List.assoc
)
"gWindow.ml" 154 5691 5708 "gWindow.ml" 154 5691 5709
type(
  int
)
ident(
  int_ref r "gWindow.ml" 152 5653 5677 "gWindow.ml" 152 5653 5678
)
"gWindow.ml" 154 5691 5710 "gWindow.ml" 154 5691 5713
type(
  (int * 'b) list
)
"gWindow.ml" 154 5691 5697 "gWindow.ml" 154 5691 5713
call(
  stack
)
type(
  'b
)
"gWindow.ml" 155 5715 5724 "gWindow.ml" 155 5715 5733
type(
  exn
)
"gWindow.ml" 156 5738 5744 "gWindow.ml" 156 5738 5758
type(
  (int -> unit, Format.formatter, unit) format -> int -> unit
)
ident(
  ext_ref Format.eprintf
)
"gWindow.ml" 157 5760 5768 "gWindow.ml" 158 5814 5869
type(
  (int -> unit, Format.formatter, unit) format
)
"gWindow.ml" 159 5871 5879 "gWindow.ml" 159 5871 5880
type(
  int
)
ident(
  int_ref r "gWindow.ml" 152 5653 5677 "gWindow.ml" 152 5653 5678
)
"gWindow.ml" 156 5738 5744 "gWindow.ml" 159 5871 5880
call(
  stack
)
type(
  unit
)
"gWindow.ml" 160 5882 5888 "gWindow.ml" 160 5882 5901
type(
  'b
)
"gWindow.ml" 156 5738 5744 "gWindow.ml" 160 5882 5901
type(
  'b
)
"gWindow.ml" 153 5682 5686 "gWindow.ml" 160 5882 5901
type(
  'b
)
"gWindow.ml" 163 5907 5929 "gWindow.ml" 163 5907 5932
type(
  [> `bin | `container | `dialog | `gtk | `widget | `window ] Gtk.obj
)
"gWindow.ml" 163 5907 5942 "gWindow.ml" 163 5907 5948
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    add_button : string -> ([> `DELETE_EVENT ] as 'a) -> unit;
    add_button_stock : GtkStock.id -> 'a -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; child : GObj.widget; children : GObj.widget list;
    coerce : GObj.widget; decorated : bool; default_height : int;
    default_width : int; deiconify : unit -> unit; deletable : bool;
    destroy : unit -> unit; destroy_with_parent : bool; drag : GObj.drag_ops;
    event : GObj.event_ops; focus : GContainer.focus; focus_on_map : 
    bool; get_oid : int; gravity : GdkEnums.gravity; has_separator : 
    bool; has_toplevel_focus : bool; icon : GdkPixbuf.pixbuf option;
    icon_name : string; iconify : unit -> unit; is_active : bool;
    kind : GtkEnums.window_type; misc : GObj.misc_ops; modal : bool;
    move : x:int -> y:int -> unit; opacity : float;
    parse_geometry : string -> bool; position : GtkEnums.window_position;
    present : unit -> unit; remove : GObj.widget -> unit; resizable : 
    bool; resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode; response : 'a -> unit; role : 
    string; run : unit -> 'a; screen : Gdk.screen;
    set_accept_focus : bool -> unit; set_allow_grow : bool -> unit;
    set_allow_shrink : bool -> unit; set_border_width : int -> unit;
    set_decorated : bool -> unit; set_default_height : int -> unit;
    set_default_response : 'a -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_modal : bool -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : 'a -> bool -> unit; set_role : string -> unit;
    set_screen : Gdk.screen -> unit; set_skip_pager_hint : bool -> unit;
    set_skip_taskbar_hint : bool -> unit; set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
)
"gWindow.ml" 164 5949 5976 "gWindow.ml" 164 5949 5979
type(
  ([> `bin | `container | `dialog | `gtk | `widget | `window ] as 'b) Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 163 5907 5929 "gWindow.ml" 163 5907 5932
)
"gWindow.ml" 165 5980 6000 "gWindow.ml" 165 5980 6004
type(
  string
)
ident(
  def text "gWindow.ml" 165 5980 6005 "gWindow.ml" 168 6080 6097
)
"gWindow.ml" 165 5980 6006 "gWindow.ml" 165 5980 6007
type(
  'a
)
ident(
  def v "gWindow.ml" 166 6016 6020 "gWindow.ml" 168 6080 6097
)
"gWindow.ml" 166 6016 6028 "gWindow.ml" 166 6016 6030
type(
  int
)
"gWindow.ml" 166 6016 6032 "gWindow.ml" 166 6016 6033
type(
  'a
)
ident(
  int_ref v "gWindow.ml" 165 5980 6006 "gWindow.ml" 165 5980 6007
)
"gWindow.ml" 166 6016 6027 "gWindow.ml" 166 6016 6034
type(
  int * 'a
)
"gWindow.ml" 166 6016 6038 "gWindow.ml" 166 6016 6041
type(
  (int * 'a) list
)
"gWindow.ml" 166 6016 6027 "gWindow.ml" 166 6016 6041
type(
  (int * 'a) list
)
"gWindow.ml" 166 6016 6020 "gWindow.ml" 166 6016 6041
type(
  unit
)
"gWindow.ml" 167 6044 6048 "gWindow.ml" 167 6044 6065
type(
  'b Gtk.obj -> string -> int -> unit
)
ident(
  ext_ref GtkWindow.Dialog.add_button
)
"gWindow.ml" 167 6044 6066 "gWindow.ml" 167 6044 6069
type(
  'b Gtk.obj
)
"gWindow.ml" 167 6044 6070 "gWindow.ml" 167 6044 6074
type(
  string
)
ident(
  int_ref text "gWindow.ml" 165 5980 6000 "gWindow.ml" 165 5980 6004
)
"gWindow.ml" 167 6044 6075 "gWindow.ml" 167 6044 6077
type(
  int
)
"gWindow.ml" 167 6044 6048 "gWindow.ml" 167 6044 6077
type(
  unit
)
"gWindow.ml" 168 6080 6090 "gWindow.ml" 168 6080 6094
type(
  int -> int
)
ident(
  ext_ref Pervasives.succ
)
"gWindow.ml" 168 6080 6095 "gWindow.ml" 168 6080 6097
type(
  int
)
"gWindow.ml" 168 6080 6090 "gWindow.ml" 168 6080 6097
type(
  int
)
"gWindow.ml" 168 6080 6084 "gWindow.ml" 168 6080 6097
type(
  unit
)
"gWindow.ml" 167 6044 6048 "gWindow.ml" 168 6080 6097
type(
  unit
)
"gWindow.ml" 166 6016 6020 "gWindow.ml" 168 6080 6097
type(
  unit
)
"gWindow.ml" 169 6098 6124 "gWindow.ml" 169 6098 6128
type(
  GtkStock.id
)
ident(
  def s_id "gWindow.ml" 169 6098 6129 "gWindow.ml" 170 6133 6181
)
"gWindow.ml" 169 6098 6129 "gWindow.ml" 169 6098 6130
type(
  'a
)
ident(
  def v "gWindow.ml" 170 6133 6137 "gWindow.ml" 170 6133 6181
)
"gWindow.ml" 170 6133 6137 "gWindow.ml" 170 6133 6141
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    add_button : string -> 'a -> unit;
    add_button_stock : GtkStock.id -> 'a -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; child : GObj.widget; children : GObj.widget list;
    coerce : GObj.widget; decorated : bool; default_height : int;
    default_width : int; deiconify : unit -> unit; deletable : bool;
    destroy : unit -> unit; destroy_with_parent : bool; drag : GObj.drag_ops;
    event : GObj.event_ops; focus : GContainer.focus; focus_on_map : 
    bool; get_oid : int; gravity : GdkEnums.gravity; has_separator : 
    bool; has_toplevel_focus : bool; icon : GdkPixbuf.pixbuf option;
    icon_name : string; iconify : unit -> unit; is_active : bool;
    kind : GtkEnums.window_type; misc : GObj.misc_ops; modal : bool;
    move : x:int -> y:int -> unit; opacity : float;
    parse_geometry : string -> bool; position : GtkEnums.window_position;
    present : unit -> unit; remove : GObj.widget -> unit; resizable : 
    bool; resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode; response : 'a -> unit; role : 
    string; run : unit -> 'a; screen : Gdk.screen;
    set_accept_focus : bool -> unit; set_allow_grow : bool -> unit;
    set_allow_shrink : bool -> unit; set_border_width : int -> unit;
    set_decorated : bool -> unit; set_default_height : int -> unit;
    set_default_response : 'a -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_modal : bool -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : 'a -> bool -> unit; set_role : string -> unit;
    set_screen : Gdk.screen -> unit; set_skip_pager_hint : bool -> unit;
    set_skip_taskbar_hint : bool -> unit; set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
  as 'c
)
"gWindow.ml" 170 6133 6137 "gWindow.ml" 170 6133 6152
call(
  tail
)
type(
  string -> 'a -> unit
)
"gWindow.ml" 170 6133 6154 "gWindow.ml" 170 6133 6173
type(
  GtkStock.id -> string
)
ident(
  ext_ref GtkStock.convert_id
)
"gWindow.ml" 170 6133 6174 "gWindow.ml" 170 6133 6178
type(
  GtkStock.id
)
ident(
  int_ref s_id "gWindow.ml" 169 6098 6124 "gWindow.ml" 169 6098 6128
)
"gWindow.ml" 170 6133 6153 "gWindow.ml" 170 6133 6179
call(
  stack
)
type(
  string
)
"gWindow.ml" 170 6133 6180 "gWindow.ml" 170 6133 6181
type(
  'a
)
ident(
  int_ref v "gWindow.ml" 169 6098 6129 "gWindow.ml" 169 6098 6130
)
"gWindow.ml" 170 6133 6137 "gWindow.ml" 170 6133 6181
type(
  unit
)
"gWindow.ml" 173 6187 6205 "gWindow.ml" 173 6187 6208
type(
  [> Gtk.dialog ] Gobject.obj
)
"gWindow.ml" 173 6187 6218 "gWindow.ml" 173 6187 6224
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    add_button : string -> ([> `DELETE_EVENT ] as 'a) -> unit;
    add_button_stock : GtkStock.id -> 'a -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; child : GObj.widget; children : GObj.widget list;
    coerce : GObj.widget; connect : 'a dialog_signals; decorated : bool;
    default_height : int; default_width : int; deiconify : unit -> unit;
    deletable : bool; destroy : unit -> unit; destroy_with_parent : bool;
    drag : GObj.drag_ops; event : GObj.event_ops; focus : GContainer.focus;
    focus_on_map : bool; get_oid : int; gravity : GdkEnums.gravity;
    has_separator : bool; has_toplevel_focus : bool;
    icon : GdkPixbuf.pixbuf option; icon_name : string;
    iconify : unit -> unit; is_active : bool; kind : GtkEnums.window_type;
    misc : GObj.misc_ops; modal : bool; move : x:int -> y:int -> unit;
    opacity : float; parse_geometry : string -> bool;
    position : GtkEnums.window_position; present : unit -> unit;
    remove : GObj.widget -> unit; resizable : bool;
    resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode; response : 'a -> unit; role : 
    string; run : unit -> 'a; screen : Gdk.screen;
    set_accept_focus : bool -> unit; set_allow_grow : bool -> unit;
    set_allow_shrink : bool -> unit; set_border_width : int -> unit;
    set_decorated : bool -> unit; set_default_height : int -> unit;
    set_default_response : 'a -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_modal : bool -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : 'a -> bool -> unit; set_role : string -> unit;
    set_screen : Gdk.screen -> unit; set_skip_pager_hint : bool -> unit;
    set_skip_taskbar_hint : bool -> unit; set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
)
"gWindow.ml" 174 6225 6252 "gWindow.ml" 174 6225 6255
type(
  Gtk.dialog Gtk.obj
)
type(
  ([> Gtk.dialog ] as 'b) Gobject.obj
)
ident(
  int_ref obj "gWindow.ml" 173 6187 6205 "gWindow.ml" 173 6187 6208
)
"gWindow.ml" 175 6275 6314 "gWindow.ml" 175 6275 6332
type(
  Gtk.dialog Gtk.obj -> decode:(int -> 'a) -> 'a dialog_signals
)
"gWindow.ml" 175 6275 6333 "gWindow.ml" 175 6275 6336
type(
  Gtk.dialog Gtk.obj
)
"gWindow.ml" 175 6275 6338 "gWindow.ml" 175 6275 6342
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    add_button : string -> 'a -> unit;
    add_button_stock : GtkStock.id -> 'a -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; child : GObj.widget; children : GObj.widget list;
    coerce : GObj.widget; connect : 'a dialog_signals; decorated : bool;
    default_height : int; default_width : int; deiconify : unit -> unit;
    deletable : bool; destroy : unit -> unit; destroy_with_parent : bool;
    drag : GObj.drag_ops; event : GObj.event_ops; focus : GContainer.focus;
    focus_on_map : bool; get_oid : int; gravity : GdkEnums.gravity;
    has_separator : bool; has_toplevel_focus : bool;
    icon : GdkPixbuf.pixbuf option; icon_name : string;
    iconify : unit -> unit; is_active : bool; kind : GtkEnums.window_type;
    misc : GObj.misc_ops; modal : bool; move : x:int -> y:int -> unit;
    opacity : float; parse_geometry : string -> bool;
    position : GtkEnums.window_position; present : unit -> unit;
    remove : GObj.widget -> unit; resizable : bool;
    resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode; response : 'a -> unit; role : 
    string; run : unit -> 'a; screen : Gdk.screen;
    set_accept_focus : bool -> unit; set_allow_grow : bool -> unit;
    set_allow_shrink : bool -> unit; set_border_width : int -> unit;
    set_decorated : bool -> unit; set_default_height : int -> unit;
    set_default_response : 'a -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_modal : bool -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : 'a -> bool -> unit; set_role : string -> unit;
    set_screen : Gdk.screen -> unit; set_skip_pager_hint : bool -> unit;
    set_skip_taskbar_hint : bool -> unit; set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
  as 'c
)
"gWindow.ml" 175 6275 6337 "gWindow.ml" 175 6275 6350
call(
  stack
)
type(
  int -> 'a
)
"gWindow.ml" 175 6275 6314 "gWindow.ml" 175 6275 6350
call(
  tail
)
type(
  'a dialog_signals
)
type(
  'a dialog_signals
)
"gWindow.ml" 178 6356 6360 "gWindow.ml" 178 6356 6371
type(
  ([> `container | `widget | `window ] as 'a) Gobject.param list ->
  ?parent:< as_window : Gtk.window Gtk.obj; .. > ->
  ?destroy_with_parent:bool ->
  create:('a Gobject.param list -> (#window_skel as 'b)) ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int -> ?width:int -> ?height:int -> ?show:bool -> unit -> 'b
)
ident(
  def make_dialog "gWindow.ml" 185 6599 6599 --
)
"gWindow.ml" 178 6356 6372 "gWindow.ml" 178 6356 6374
type(
  'a Gobject.param list
)
ident(
  def pl "gWindow.ml" 178 6356 6375 "gWindow.ml" 183 6588 6597
)
"gWindow.ml" 178 6356 6376 "gWindow.ml" 178 6356 6382
type(
  (< as_window : Gtk.window Gtk.obj; .. > as 'c) option
)
ident(
  def parent "gWindow.ml" 178 6356 6383 "gWindow.ml" 183 6588 6597
)
"gWindow.ml" 178 6356 6384 "gWindow.ml" 178 6356 6403
type(
  bool option
)
ident(
  def destroy_with_parent "gWindow.ml" 178 6356 6404 "gWindow.ml" 183 6588 6597
)
"gWindow.ml" 178 6356 6405 "gWindow.ml" 178 6356 6411
type(
  'a Gobject.param list -> 'b
)
ident(
  def create "gWindow.ml" 179 6414 6416 "gWindow.ml" 183 6588 6597
)
"gWindow.ml" 179 6414 6416 "gWindow.ml" 179 6414 6427
type(
  create:('a Gobject.param list -> 'b) ->
  'a Gobject.param list ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int -> ?width:int -> ?height:int -> ?show:bool -> unit -> 'b
)
ident(
  int_ref make_window "gWindow.ml" 80 3481 3485 "gWindow.ml" 80 3481 3496
)
"gWindow.ml" 179 6414 6441 "gWindow.ml" 179 6414 6443
type(
  'a Gobject.param list
)
ident(
  def pl "gWindow.ml" 180 6447 6451 "gWindow.ml" 183 6588 6593
)
"gWindow.ml" 180 6447 6455 "gWindow.ml" 180 6447 6456
type(
  'b
)
"gWindow.ml" 180 6447 6459 "gWindow.ml" 180 6447 6465
type(
  'a Gobject.param list -> 'b
)
ident(
  int_ref create "gWindow.ml" 178 6356 6405 "gWindow.ml" 178 6356 6411
)
"gWindow.ml" 180 6447 6466 "gWindow.ml" 180 6447 6468
type(
  'a Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 179 6414 6441 "gWindow.ml" 179 6414 6443
)
"gWindow.ml" 180 6447 6459 "gWindow.ml" 180 6447 6468
call(
  stack
)
type(
  'b
)
"gWindow.ml" 181 6472 6476 "gWindow.ml" 181 6472 6479
type(
  f:('c -> unit) -> 'c option -> unit
)
ident(
  ext_ref Gaux.may
)
"gWindow.ml" 181 6472 6485 "gWindow.ml" 181 6472 6486
type(
  'c
)
ident(
  def p "gWindow.ml" 181 6472 6490 "gWindow.ml" 181 6472 6521
)
"gWindow.ml" 181 6472 6490 "gWindow.ml" 181 6472 6491
type(
  'b
)
ident(
  int_ref d "gWindow.ml" 180 6447 6455 "gWindow.ml" 180 6447 6456
)
"gWindow.ml" 181 6472 6490 "gWindow.ml" 181 6472 6509
call(
  tail
)
type(
  Gtk.window Gtk.obj -> unit
)
"gWindow.ml" 181 6472 6510 "gWindow.ml" 181 6472 6511
type(
  'c
)
ident(
  int_ref p "gWindow.ml" 181 6472 6485 "gWindow.ml" 181 6472 6486
)
"gWindow.ml" 181 6472 6510 "gWindow.ml" 181 6472 6521
call(
  stack
)
type(
  Gtk.window Gtk.obj
)
"gWindow.ml" 181 6472 6490 "gWindow.ml" 181 6472 6521
type(
  unit
)
"gWindow.ml" 181 6472 6480 "gWindow.ml" 181 6472 6522
type(
  'c -> unit
)
"gWindow.ml" 181 6472 6523 "gWindow.ml" 181 6472 6529
type(
  'c option
)
ident(
  int_ref parent "gWindow.ml" 178 6356 6376 "gWindow.ml" 178 6356 6382
)
"gWindow.ml" 181 6472 6476 "gWindow.ml" 181 6472 6529
call(
  stack
)
type(
  unit
)
"gWindow.ml" 182 6532 6536 "gWindow.ml" 182 6532 6539
type(
  f:(bool -> unit) -> bool option -> unit
)
ident(
  ext_ref Gaux.may
)
"gWindow.ml" 182 6532 6540 "gWindow.ml" 182 6532 6541
type(
  'b
)
ident(
  int_ref d "gWindow.ml" 180 6447 6455 "gWindow.ml" 180 6447 6456
)
"gWindow.ml" 182 6532 6540 "gWindow.ml" 182 6532 6565
call(
  stack
)
type(
  bool -> unit
)
"gWindow.ml" 182 6532 6566 "gWindow.ml" 182 6532 6585
type(
  bool option
)
ident(
  int_ref destroy_with_parent "gWindow.ml" 178 6356 6384 "gWindow.ml" 178 6356 6403
)
"gWindow.ml" 182 6532 6536 "gWindow.ml" 182 6532 6585
call(
  stack
)
type(
  unit
)
"gWindow.ml" 183 6588 6592 "gWindow.ml" 183 6588 6593
type(
  'b
)
ident(
  int_ref d "gWindow.ml" 180 6447 6455 "gWindow.ml" 180 6447 6456
)
"gWindow.ml" 182 6532 6536 "gWindow.ml" 183 6588 6593
type(
  'b
)
"gWindow.ml" 181 6472 6476 "gWindow.ml" 183 6588 6593
type(
  'b
)
"gWindow.ml" 180 6447 6451 "gWindow.ml" 183 6588 6593
type(
  'b
)
"gWindow.ml" 179 6414 6436 "gWindow.ml" 183 6588 6594
type(
  'a Gobject.param list -> 'b
)
"gWindow.ml" 183 6588 6595 "gWindow.ml" 183 6588 6597
type(
  'a Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 178 6356 6372 "gWindow.ml" 178 6356 6374
)
"gWindow.ml" 179 6414 6416 "gWindow.ml" 183 6588 6597
call(
  tail
)
type(
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int -> ?width:int -> ?height:int -> ?show:bool -> unit -> 'b
)
"gWindow.ml" 185 6599 6603 "gWindow.ml" 185 6599 6609
type(
  ?no_separator:bool ->
  ?parent:< as_window : Gtk.window Gtk.obj; .. > ->
  ?destroy_with_parent:bool ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int ->
  ?height:int -> ?show:bool -> unit -> [> `DELETE_EVENT ] dialog
)
ident(
  def dialog "gWindow.ml" 193 6822 6822 --
)
"gWindow.ml" 185 6599 6612 "gWindow.ml" 185 6599 6624
type(
  bool
)
"gWindow.ml" 185 6599 6625 "gWindow.ml" 185 6599 6630
type(
  bool
)
type(
  bool
)
ident(
  int_ref *sth* "gWindow.ml" 185 6599 6625 "gWindow.ml" 185 6599 6630
)
type(
  bool option
)
type(
  bool option
)
type(
  bool
)
ident(
  def *sth* "gWindow.ml" 185 6599 6625 "gWindow.ml" 185 6599 6630
)
"gWindow.ml" 186 6634 6636 "gWindow.ml" 186 6634 6647
type(
  Gtk.dialog Gobject.param list ->
  ?parent:(< as_window : Gtk.window Gtk.obj; .. > as 'a) ->
  ?destroy_with_parent:bool ->
  create:(Gtk.dialog Gobject.param list -> ([> `DELETE_EVENT ] as 'b) dialog) ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> 'b dialog
)
ident(
  int_ref make_dialog "gWindow.ml" 178 6356 6360 "gWindow.ml" 178 6356 6371
)
"gWindow.ml" 186 6634 6648 "gWindow.ml" 186 6634 6650
type(
  Gtk.dialog Gobject.param list
)
"gWindow.ml" 186 6634 6664 "gWindow.ml" 186 6634 6666
type(
  Gtk.dialog Gobject.param list
)
ident(
  def pl "gWindow.ml" 187 6670 6674 "gWindow.ml" 191 6786 6819
)
"gWindow.ml" 187 6670 6678 "gWindow.ml" 187 6670 6680
type(
  Gtk.dialog Gobject.param list
)
"gWindow.ml" 188 6684 6693 "gWindow.ml" 188 6684 6705
type(
  bool
)
ident(
  int_ref no_separator "gWindow.ml" 185 6599 6612 "gWindow.ml" 185 6599 6624
)
"gWindow.ml" 189 6707 6719 "gWindow.ml" 189 6707 6732
type(
  (Gtk.dialog, bool) Gobject.property -> bool -> Gtk.dialog Gobject.param
)
ident(
  ext_ref Gobject.param
)
"gWindow.ml" 189 6707 6733 "gWindow.ml" 189 6707 6755
type(
  (Gtk.dialog, bool) Gobject.property
)
ident(
  ext_ref GtkWindow.Dialog.P.has_separator
)
"gWindow.ml" 189 6707 6756 "gWindow.ml" 189 6707 6761
type(
  bool
)
"gWindow.ml" 189 6707 6718 "gWindow.ml" 189 6707 6762
call(
  stack
)
type(
  Gtk.dialog Gobject.param
)
"gWindow.ml" 189 6707 6766 "gWindow.ml" 189 6707 6768
type(
  Gtk.dialog Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 186 6634 6664 "gWindow.ml" 186 6634 6666
)
"gWindow.ml" 189 6707 6718 "gWindow.ml" 189 6707 6768
type(
  Gtk.dialog Gobject.param list
)
"gWindow.ml" 190 6769 6780 "gWindow.ml" 190 6769 6782
type(
  Gtk.dialog Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 186 6634 6664 "gWindow.ml" 186 6634 6666
)
"gWindow.ml" 188 6684 6690 "gWindow.ml" 190 6769 6782
type(
  Gtk.dialog Gobject.param list
)
"gWindow.ml" 191 6786 6790 "gWindow.ml" 191 6786 6800
type(
  Gtk.dialog Gtk.obj -> 'b dialog
)
"gWindow.ml" 191 6786 6802 "gWindow.ml" 191 6786 6815
type(
  Gtk.dialog Gobject.param list -> Gtk.dialog Gtk.obj
)
ident(
  ext_ref GtkWindow.Dialog.create
)
"gWindow.ml" 191 6786 6816 "gWindow.ml" 191 6786 6818
type(
  Gtk.dialog Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 187 6670 6678 "gWindow.ml" 187 6670 6680
)
"gWindow.ml" 191 6786 6801 "gWindow.ml" 191 6786 6819
call(
  stack
)
type(
  Gtk.dialog Gtk.obj
)
"gWindow.ml" 191 6786 6790 "gWindow.ml" 191 6786 6819
call(
  tail
)
type(
  'b dialog
)
"gWindow.ml" 187 6670 6674 "gWindow.ml" 191 6786 6819
type(
  'b dialog
)
"gWindow.ml" 186 6634 6659 "gWindow.ml" 191 6786 6820
type(
  Gtk.dialog Gobject.param list -> 'b dialog
)
"gWindow.ml" 186 6634 6636 "gWindow.ml" 191 6786 6820
call(
  tail
)
call(
  stack
)
type(
  ?parent:'a ->
  ?destroy_with_parent:bool ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> 'b dialog
)
"gWindow.ml" 195 6879 6896 "gWindow.ml" 195 6879 6899
type(
  [> Gtk.dialog ] Gobject.obj
)
"gWindow.ml" 195 6879 6909 "gWindow.ml" 195 6879 6915
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    add_button : string -> any_response -> unit;
    add_button_stock : GtkStock.id -> any_response -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; child : GObj.widget; children : GObj.widget list;
    coerce : GObj.widget; connect : any_response dialog_signals;
    decorated : bool; default_height : int; default_width : int;
    deiconify : unit -> unit; deletable : bool; destroy : unit -> unit;
    destroy_with_parent : bool; drag : GObj.drag_ops; event : GObj.event_ops;
    focus : GContainer.focus; focus_on_map : bool; get_oid : int;
    gravity : GdkEnums.gravity; has_separator : bool;
    has_toplevel_focus : bool; icon : GdkPixbuf.pixbuf option;
    icon_name : string; iconify : unit -> unit; is_active : bool;
    kind : GtkEnums.window_type; misc : GObj.misc_ops; modal : bool;
    move : x:int -> y:int -> unit; opacity : float;
    parse_geometry : string -> bool; position : GtkEnums.window_position;
    present : unit -> unit; remove : GObj.widget -> unit; resizable : 
    bool; resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode; response : any_response -> unit;
    role : string; run : unit -> any_response; screen : Gdk.screen;
    set_accept_focus : bool -> unit; set_allow_grow : bool -> unit;
    set_allow_shrink : bool -> unit; set_border_width : int -> unit;
    set_decorated : bool -> unit; set_default_height : int -> unit;
    set_default_response : any_response -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_modal : bool -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : any_response -> bool -> unit;
    set_role : string -> unit; set_screen : Gdk.screen -> unit;
    set_skip_pager_hint : bool -> unit; set_skip_taskbar_hint : bool -> unit;
    set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
)
"gWindow.ml" 196 6916 6954 "gWindow.ml" 196 6916 6957
type(
  Gtk.dialog Gtk.obj
)
type(
  ([> Gtk.dialog ] as 'a) Gobject.obj
)
ident(
  int_ref obj "gWindow.ml" 195 6879 6896 "gWindow.ml" 195 6879 6899
)
"gWindow.ml" 198 7012 7025 "gWindow.ml" 198 7012 7026
type(
  int
)
ident(
  def n "gWindow.ml" 198 7012 7030 "gWindow.ml" 198 7012 7031
)
"gWindow.ml" 198 7012 7018 "gWindow.ml" 198 7012 7026
type(
  any_response
)
"gWindow.ml" 198 7012 7030 "gWindow.ml" 198 7012 7031
type(
  int
)
ident(
  int_ref n "gWindow.ml" 198 7012 7025 "gWindow.ml" 198 7012 7026
)
"gWindow.ml" 199 7032 7038 "gWindow.ml" 199 7032 7056
type(
  any_response
)
"gWindow.ml" 199 7032 7038 "gWindow.ml" 199 7032 7061
type(
  any_response
)
ident(
  def v "gWindow.ml" 199 7032 7065 "gWindow.ml" 199 7032 7086
)
"gWindow.ml" 199 7032 7065 "gWindow.ml" 199 7032 7084
type(
  GtkEnums.response -> int
)
ident(
  ext_ref GtkWindow.Dialog.std_response
)
"gWindow.ml" 199 7032 7085 "gWindow.ml" 199 7032 7086
type(
  GtkEnums.response
)
ident(
  int_ref v "gWindow.ml" 199 7032 7038 "gWindow.ml" 199 7032 7061
)
"gWindow.ml" 199 7032 7065 "gWindow.ml" 199 7032 7086
call(
  tail
)
type(
  int
)
"gWindow.ml" 197 6977 7003 "gWindow.ml" 199 7032 7086
type(
  any_response -> int
)
type(
  any_response -> int
)
"gWindow.ml" 200 7087 7111 "gWindow.ml" 200 7087 7112
type(
  int
)
ident(
  def r "gWindow.ml" 201 7121 7125 "gWindow.ml" 202 7200 7239
)
"gWindow.ml" 201 7121 7130 "gWindow.ml" 201 7121 7152
type(
  int -> GtkEnums.response
)
ident(
  ext_ref GtkWindow.Dialog.decode_response
)
"gWindow.ml" 201 7121 7153 "gWindow.ml" 201 7121 7154
type(
  int
)
ident(
  int_ref r "gWindow.ml" 200 7087 7111 "gWindow.ml" 200 7087 7112
)
"gWindow.ml" 201 7121 7130 "gWindow.ml" 201 7121 7154
call(
  stack
)
type(
  any_response
)
type(
  GtkEnums.response
)
"gWindow.ml" 202 7200 7226 "gWindow.ml" 202 7200 7227
type(
  string
)
"gWindow.ml" 202 7200 7209 "gWindow.ml" 202 7200 7227
type(
  exn
)
"gWindow.ml" 202 7200 7238 "gWindow.ml" 202 7200 7239
type(
  int
)
ident(
  int_ref r "gWindow.ml" 200 7087 7111 "gWindow.ml" 200 7087 7112
)
"gWindow.ml" 202 7200 7231 "gWindow.ml" 202 7200 7239
type(
  any_response
)
"gWindow.ml" 201 7121 7125 "gWindow.ml" 202 7200 7239
type(
  any_response
)
"gWindow.ml" 204 7289 7293 "gWindow.ml" 204 7289 7311
type(
  Gtk.dialog Gtk.obj ->
  decode:(int -> any_response) -> any_response dialog_signals
)
"gWindow.ml" 204 7289 7312 "gWindow.ml" 204 7289 7315
type(
  Gtk.dialog Gtk.obj
)
"gWindow.ml" 204 7289 7316 "gWindow.ml" 204 7289 7320
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    add_button : string -> any_response -> unit;
    add_button_stock : GtkStock.id -> any_response -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; child : GObj.widget; children : GObj.widget list;
    coerce : GObj.widget; connect : any_response dialog_signals;
    decorated : bool; default_height : int; default_width : int;
    deiconify : unit -> unit; deletable : bool; destroy : unit -> unit;
    destroy_with_parent : bool; drag : GObj.drag_ops; event : GObj.event_ops;
    focus : GContainer.focus; focus_on_map : bool; get_oid : int;
    gravity : GdkEnums.gravity; has_separator : bool;
    has_toplevel_focus : bool; icon : GdkPixbuf.pixbuf option;
    icon_name : string; iconify : unit -> unit; is_active : bool;
    kind : GtkEnums.window_type; misc : GObj.misc_ops; modal : bool;
    move : x:int -> y:int -> unit; opacity : float;
    parse_geometry : string -> bool; position : GtkEnums.window_position;
    present : unit -> unit; remove : GObj.widget -> unit; resizable : 
    bool; resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode; response : any_response -> unit;
    role : string; run : unit -> any_response; screen : Gdk.screen;
    set_accept_focus : bool -> unit; set_allow_grow : bool -> unit;
    set_allow_shrink : bool -> unit; set_border_width : int -> unit;
    set_decorated : bool -> unit; set_default_height : int -> unit;
    set_default_response : any_response -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_modal : bool -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : any_response -> bool -> unit;
    set_role : string -> unit; set_screen : Gdk.screen -> unit;
    set_skip_pager_hint : bool -> unit; set_skip_taskbar_hint : bool -> unit;
    set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
  as 'b
)
"gWindow.ml" 204 7289 7316 "gWindow.ml" 204 7289 7327
call(
  stack
)
type(
  int -> any_response
)
"gWindow.ml" 204 7289 7293 "gWindow.ml" 204 7289 7327
call(
  tail
)
type(
  any_response dialog_signals
)
type(
  any_response dialog_signals
)
"gWindow.ml" 205 7328 7348 "gWindow.ml" 205 7328 7352
type(
  string
)
ident(
  def text "gWindow.ml" 205 7328 7353 "gWindow.ml" 206 7357 7403
)
"gWindow.ml" 205 7328 7353 "gWindow.ml" 205 7328 7354
type(
  any_response
)
ident(
  def v "gWindow.ml" 206 7357 7361 "gWindow.ml" 206 7357 7403
)
"gWindow.ml" 206 7357 7361 "gWindow.ml" 206 7357 7378
type(
  Gtk.dialog Gtk.obj -> string -> int -> unit
)
ident(
  ext_ref GtkWindow.Dialog.add_button
)
"gWindow.ml" 206 7357 7379 "gWindow.ml" 206 7357 7382
type(
  Gtk.dialog Gtk.obj
)
"gWindow.ml" 206 7357 7383 "gWindow.ml" 206 7357 7387
type(
  string
)
ident(
  int_ref text "gWindow.ml" 205 7328 7348 "gWindow.ml" 205 7328 7352
)
"gWindow.ml" 206 7357 7389 "gWindow.ml" 206 7357 7393
type(
  'b
)
"gWindow.ml" 206 7357 7389 "gWindow.ml" 206 7357 7400
call(
  stack
)
type(
  any_response -> int
)
"gWindow.ml" 206 7357 7401 "gWindow.ml" 206 7357 7402
type(
  any_response
)
ident(
  int_ref v "gWindow.ml" 205 7328 7353 "gWindow.ml" 205 7328 7354
)
"gWindow.ml" 206 7357 7388 "gWindow.ml" 206 7357 7403
type(
  int
)
"gWindow.ml" 206 7357 7361 "gWindow.ml" 206 7357 7403
type(
  unit
)
"gWindow.ml" 207 7404 7430 "gWindow.ml" 207 7404 7434
type(
  GtkStock.id
)
ident(
  def s_id "gWindow.ml" 207 7404 7435 "gWindow.ml" 208 7439 7487
)
"gWindow.ml" 207 7404 7435 "gWindow.ml" 207 7404 7436
type(
  any_response
)
ident(
  def v "gWindow.ml" 208 7439 7443 "gWindow.ml" 208 7439 7487
)
"gWindow.ml" 208 7439 7443 "gWindow.ml" 208 7439 7447
type(
  'b
)
"gWindow.ml" 208 7439 7443 "gWindow.ml" 208 7439 7458
call(
  tail
)
type(
  string -> any_response -> unit
)
"gWindow.ml" 208 7439 7460 "gWindow.ml" 208 7439 7479
type(
  GtkStock.id -> string
)
ident(
  ext_ref GtkStock.convert_id
)
"gWindow.ml" 208 7439 7480 "gWindow.ml" 208 7439 7484
type(
  GtkStock.id
)
ident(
  int_ref s_id "gWindow.ml" 207 7404 7430 "gWindow.ml" 207 7404 7434
)
"gWindow.ml" 208 7439 7459 "gWindow.ml" 208 7439 7485
call(
  stack
)
type(
  string
)
"gWindow.ml" 208 7439 7486 "gWindow.ml" 208 7439 7487
type(
  any_response
)
ident(
  int_ref v "gWindow.ml" 207 7404 7435 "gWindow.ml" 207 7404 7436
)
"gWindow.ml" 208 7439 7443 "gWindow.ml" 208 7439 7487
type(
  unit
)
"gWindow.ml" 215 7593 7599 "gWindow.ml" 215 7593 7601
type(
  [> `OK ] * (int * [> `OK ]) list
)
ident(
  def ok "gWindow.ml" 216 7622 7624 "gWindow.ml" 223 8018 8021
)
"gWindow.ml" 215 7593 7604 "gWindow.ml" 215 7593 7607
type(
  [> `OK ] as 'a
)
"gWindow.ml" 215 7593 7611 "gWindow.ml" 215 7593 7614
type(
  int
)
ident(
  int_ref rok "gWindow.ml" 120 4623 4627 "gWindow.ml" 120 4623 4630
)
"gWindow.ml" 215 7593 7616 "gWindow.ml" 215 7593 7619
type(
  [> `OK ] as 'b
)
"gWindow.ml" 215 7593 7611 "gWindow.ml" 215 7593 7619
type(
  int * 'b
)
"gWindow.ml" 215 7593 7609 "gWindow.ml" 215 7593 7621
type(
  (int * 'b) list
)
"gWindow.ml" 215 7593 7604 "gWindow.ml" 215 7593 7621
type(
  'a * (int * 'b) list
)
"gWindow.ml" 216 7622 7628 "gWindow.ml" 216 7622 7633
type(
  [> `CLOSE ] * (int * [> `CLOSE ]) list
)
ident(
  def close "gWindow.ml" 217 7663 7665 "gWindow.ml" 223 8018 8021
)
"gWindow.ml" 216 7622 7636 "gWindow.ml" 216 7622 7642
type(
  [> `CLOSE ] as 'c
)
"gWindow.ml" 216 7622 7646 "gWindow.ml" 216 7622 7652
type(
  int
)
ident(
  int_ref rclose "gWindow.ml" 122 4669 4673 "gWindow.ml" 122 4669 4679
)
"gWindow.ml" 216 7622 7654 "gWindow.ml" 216 7622 7660
type(
  [> `CLOSE ] as 'd
)
"gWindow.ml" 216 7622 7646 "gWindow.ml" 216 7622 7660
type(
  int * 'd
)
"gWindow.ml" 216 7622 7644 "gWindow.ml" 216 7622 7662
type(
  (int * 'd) list
)
"gWindow.ml" 216 7622 7636 "gWindow.ml" 216 7622 7662
type(
  'c * (int * 'd) list
)
"gWindow.ml" 217 7663 7669 "gWindow.ml" 217 7663 7675
type(
  [> `YES_NO ] * (int * [> `NO | `YES ]) list
)
ident(
  def yes_no "gWindow.ml" 218 7713 7715 "gWindow.ml" 223 8018 8021
)
"gWindow.ml" 217 7663 7678 "gWindow.ml" 217 7663 7685
type(
  [> `YES_NO ] as 'e
)
"gWindow.ml" 217 7663 7689 "gWindow.ml" 217 7663 7693
type(
  int
)
ident(
  int_ref ryes "gWindow.ml" 123 4694 4698 "gWindow.ml" 123 4694 4702
)
"gWindow.ml" 217 7663 7695 "gWindow.ml" 217 7663 7699
type(
  [> `NO | `YES ] as 'f
)
"gWindow.ml" 217 7663 7689 "gWindow.ml" 217 7663 7699
type(
  int * 'f
)
"gWindow.ml" 217 7663 7702 "gWindow.ml" 217 7663 7705
type(
  int
)
ident(
  int_ref rno "gWindow.ml" 124 4715 4719 "gWindow.ml" 124 4715 4722
)
"gWindow.ml" 217 7663 7707 "gWindow.ml" 217 7663 7710
type(
  'f
)
"gWindow.ml" 217 7663 7702 "gWindow.ml" 217 7663 7710
type(
  int * 'f
)
"gWindow.ml" 217 7663 7687 "gWindow.ml" 217 7663 7712
type(
  (int * 'f) list
)
"gWindow.ml" 217 7663 7678 "gWindow.ml" 217 7663 7712
type(
  'e * (int * 'f) list
)
"gWindow.ml" 218 7713 7719 "gWindow.ml" 218 7713 7728
type(
  [> `OK_CANCEL ] * (int * [> `CANCEL | `OK ]) list
)
ident(
  def ok_cancel "gWindow.ml" 219 7774 7776 "gWindow.ml" 223 8018 8021
)
"gWindow.ml" 218 7713 7731 "gWindow.ml" 218 7713 7741
type(
  [> `OK_CANCEL ] as 'g
)
"gWindow.ml" 218 7713 7745 "gWindow.ml" 218 7713 7748
type(
  int
)
ident(
  int_ref rok "gWindow.ml" 120 4623 4627 "gWindow.ml" 120 4623 4630
)
"gWindow.ml" 218 7713 7750 "gWindow.ml" 218 7713 7753
type(
  [> `CANCEL | `OK ] as 'h
)
"gWindow.ml" 218 7713 7745 "gWindow.ml" 218 7713 7753
type(
  int * 'h
)
"gWindow.ml" 218 7713 7755 "gWindow.ml" 218 7713 7762
type(
  int
)
ident(
  int_ref rcancel "gWindow.ml" 121 4642 4646 "gWindow.ml" 121 4642 4653
)
"gWindow.ml" 218 7713 7764 "gWindow.ml" 218 7713 7771
type(
  'h
)
"gWindow.ml" 218 7713 7755 "gWindow.ml" 218 7713 7771
type(
  int * 'h
)
"gWindow.ml" 218 7713 7743 "gWindow.ml" 218 7713 7773
type(
  (int * 'h) list
)
"gWindow.ml" 218 7713 7731 "gWindow.ml" 218 7713 7773
type(
  'g * (int * 'h) list
)
"gWindow.ml" 225 8023 8049 "gWindow.ml" 225 8023 8052
type(
  [> `bin | `container | `dialog | `gtk | `messagedialog | `widget | `window ]
  Gtk.obj
)
"gWindow.ml" 225 8023 8055 "gWindow.ml" 225 8023 8062
type(
  [> `DELETE_EVENT ] buttons
)
"gWindow.ml" 225 8023 8086 "gWindow.ml" 225 8023 8092
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; child : GObj.widget; children : GObj.widget list;
    coerce : GObj.widget;
    connect : ([> `DELETE_EVENT ] as 'a) dialog_signals; decorated : 
    bool; default_height : int; default_width : int;
    deiconify : unit -> unit; deletable : bool; destroy : unit -> unit;
    destroy_with_parent : bool; drag : GObj.drag_ops; event : GObj.event_ops;
    focus : GContainer.focus; focus_on_map : bool; get_oid : int;
    gravity : GdkEnums.gravity; has_separator : bool;
    has_toplevel_focus : bool; icon : GdkPixbuf.pixbuf option;
    icon_name : string; iconify : unit -> unit; is_active : bool;
    kind : GtkEnums.window_type; message_type : GtkEnums.message_type;
    misc : GObj.misc_ops; modal : bool; move : x:int -> y:int -> unit;
    opacity : float; parse_geometry : string -> bool;
    position : GtkEnums.window_position; present : unit -> unit;
    remove : GObj.widget -> unit; resizable : bool;
    resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode; response : 'a -> unit; role : 
    string; run : unit -> 'a; screen : Gdk.screen;
    set_accept_focus : bool -> unit; set_allow_grow : bool -> unit;
    set_allow_shrink : bool -> unit; set_border_width : int -> unit;
    set_decorated : bool -> unit; set_default_height : int -> unit;
    set_default_response : 'a -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_markup : string -> unit;
    set_message_type : GtkEnums.message_type -> unit;
    set_modal : bool -> unit; set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : 'a -> bool -> unit; set_role : string -> unit;
    set_screen : Gdk.screen -> unit; set_skip_pager_hint : bool -> unit;
    set_skip_taskbar_hint : bool -> unit; set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
)
"gWindow.ml" 226 8093 8120 "gWindow.ml" 226 8093 8123
type(
  ([> `bin | `container | `dialog | `gtk | `messagedialog | `widget | `window ]
   as 'b)
  Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 225 8023 8049 "gWindow.ml" 225 8023 8052
)
"gWindow.ml" 228 8155 8194 "gWindow.ml" 228 8155 8212
type(
  'b Gtk.obj -> decode:(int -> 'a) -> 'a dialog_signals
)
"gWindow.ml" 228 8155 8213 "gWindow.ml" 228 8155 8216
type(
  'b Gtk.obj
)
"gWindow.ml" 228 8155 8217 "gWindow.ml" 228 8155 8221
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; child : GObj.widget; children : GObj.widget list;
    coerce : GObj.widget; connect : 'a dialog_signals; decorated : bool;
    default_height : int; default_width : int; deiconify : unit -> unit;
    deletable : bool; destroy : unit -> unit; destroy_with_parent : bool;
    drag : GObj.drag_ops; event : GObj.event_ops; focus : GContainer.focus;
    focus_on_map : bool; get_oid : int; gravity : GdkEnums.gravity;
    has_separator : bool; has_toplevel_focus : bool;
    icon : GdkPixbuf.pixbuf option; icon_name : string;
    iconify : unit -> unit; is_active : bool; kind : GtkEnums.window_type;
    message_type : GtkEnums.message_type; misc : GObj.misc_ops; modal : 
    bool; move : x:int -> y:int -> unit; opacity : float;
    parse_geometry : string -> bool; position : GtkEnums.window_position;
    present : unit -> unit; remove : GObj.widget -> unit; resizable : 
    bool; resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode; response : 'a -> unit; role : 
    string; run : unit -> 'a; screen : Gdk.screen;
    set_accept_focus : bool -> unit; set_allow_grow : bool -> unit;
    set_allow_shrink : bool -> unit; set_border_width : int -> unit;
    set_decorated : bool -> unit; set_default_height : int -> unit;
    set_default_response : 'a -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_markup : string -> unit;
    set_message_type : GtkEnums.message_type -> unit;
    set_modal : bool -> unit; set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : 'a -> bool -> unit; set_role : string -> unit;
    set_screen : Gdk.screen -> unit; set_skip_pager_hint : bool -> unit;
    set_skip_taskbar_hint : bool -> unit; set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
  as 'c
)
"gWindow.ml" 228 8155 8217 "gWindow.ml" 228 8155 8228
call(
  stack
)
type(
  int -> 'a
)
"gWindow.ml" 228 8155 8194 "gWindow.ml" 228 8155 8228
call(
  tail
)
type(
  'a dialog_signals
)
type(
  'a dialog_signals
)
"gWindow.ml" 229 8229 8251 "gWindow.ml" 229 8229 8275
type(
  'b Gtk.obj -> string -> unit
)
ident(
  ext_ref GtkWindow.MessageDialog.set_markup
)
"gWindow.ml" 229 8229 8276 "gWindow.ml" 229 8229 8279
type(
  'b Gtk.obj
)
"gWindow.ml" 229 8229 8251 "gWindow.ml" 229 8229 8279
call(
  tail
)
type(
  string -> unit
)
type(
  string -> unit
)
"gWindow.ml" 231 8294 8305 "gWindow.ml" 231 8294 8308
type(
  'a buttons -> (int * 'a) list
)
ident(
  ext_ref Pervasives.snd
)
"gWindow.ml" 231 8294 8309 "gWindow.ml" 231 8294 8316
type(
  'a buttons
)
"gWindow.ml" 231 8294 8305 "gWindow.ml" 231 8294 8316
type(
  (int * 'a) list
)
"gWindow.ml" 231 8294 8317 "gWindow.ml" 231 8294 8318
type(
  (int * 'a) list -> (int * 'a) list -> (int * 'a) list
)
ident(
  ext_ref Pervasives.( @ )
)
"gWindow.ml" 231 8294 8319 "gWindow.ml" 231 8294 8322
type(
  (int * 'a) list
)
"gWindow.ml" 231 8294 8305 "gWindow.ml" 231 8294 8322
call(
  stack
)
type(
  (int * 'a) list
)
"gWindow.ml" 231 8294 8298 "gWindow.ml" 231 8294 8322
type(
  'c -> unit
)
type(
  unit
)
"gWindow.ml" 234 8328 8332 "gWindow.ml" 234 8328 8346
type(
  ?message:string ->
  ?use_markup:bool ->
  message_type:Gtk.Tags.message_type ->
  buttons:([> `DELETE_EVENT ] as 'a) buttons ->
  ?parent:< as_window : Gtk.window Gtk.obj; .. > ->
  ?destroy_with_parent:bool ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> 'a message_dialog
)
ident(
  def message_dialog "gWindow.ml" 246 8739 8739 --
)
"gWindow.ml" 234 8328 8349 "gWindow.ml" 234 8328 8356
type(
  string
)
"gWindow.ml" 234 8328 8357 "gWindow.ml" 234 8328 8359
type(
  string
)
type(
  string
)
ident(
  int_ref *sth* "gWindow.ml" 234 8328 8357 "gWindow.ml" 234 8328 8359
)
type(
  string option
)
type(
  string option
)
type(
  string
)
ident(
  def *sth* "gWindow.ml" 234 8328 8357 "gWindow.ml" 234 8328 8359
)
"gWindow.ml" 234 8328 8363 "gWindow.ml" 234 8328 8373
type(
  bool
)
"gWindow.ml" 234 8328 8374 "gWindow.ml" 234 8328 8379
type(
  bool
)
type(
  bool
)
ident(
  int_ref *sth* "gWindow.ml" 234 8328 8374 "gWindow.ml" 234 8328 8379
)
type(
  bool option
)
type(
  bool option
)
type(
  bool
)
ident(
  def *sth* "gWindow.ml" 234 8328 8374 "gWindow.ml" 234 8328 8379
)
"gWindow.ml" 234 8328 8382 "gWindow.ml" 234 8328 8394
type(
  Gtk.Tags.message_type
)
ident(
  def message_type "gWindow.ml" 234 8328 8395 "gWindow.ml" 241 8682 8716
)
"gWindow.ml" 234 8328 8396 "gWindow.ml" 234 8328 8403
type(
  'a buttons
)
ident(
  def buttons "gWindow.ml" 235 8406 8408 "gWindow.ml" 241 8682 8716
)
"gWindow.ml" 235 8406 8408 "gWindow.ml" 235 8406 8419
type(
  Gtk.message_dialog Gobject.param list ->
  ?parent:(< as_window : Gtk.window Gtk.obj; .. > as 'b) ->
  ?destroy_with_parent:bool ->
  create:(Gtk.message_dialog Gobject.param list -> 'a message_dialog) ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> 'a message_dialog
)
ident(
  int_ref make_dialog "gWindow.ml" 178 6356 6360 "gWindow.ml" 178 6356 6371
)
"gWindow.ml" 235 8406 8420 "gWindow.ml" 235 8406 8422
type(
  Gtk.message_dialog Gobject.param list
)
"gWindow.ml" 235 8406 8436 "gWindow.ml" 235 8406 8438
type(
  Gtk.message_dialog Gobject.param list
)
ident(
  def pl "gWindow.ml" 236 8442 8446 "gWindow.ml" 241 8682 8715
)
"gWindow.ml" 236 8442 8450 "gWindow.ml" 236 8442 8451
type(
  Gtk.message_dialog Gtk.obj
)
"gWindow.ml" 237 8455 8465 "gWindow.ml" 237 8455 8472
type(
  string
)
"gWindow.ml" 237 8455 8478 "gWindow.ml" 237 8455 8488
type(
  bool
)
ident(
  int_ref use_markup "gWindow.ml" 234 8328 8363 "gWindow.ml" 234 8328 8373
)
"gWindow.ml" 237 8455 8494 "gWindow.ml" 237 8455 8496
type(
  string
)
"gWindow.ml" 237 8455 8502 "gWindow.ml" 237 8455 8509
type(
  string
)
ident(
  int_ref message "gWindow.ml" 234 8328 8349 "gWindow.ml" 234 8328 8356
)
"gWindow.ml" 237 8455 8475 "gWindow.ml" 237 8455 8509
type(
  string
)
"gWindow.ml" 238 8513 8519 "gWindow.ml" 238 8513 8539
type(
  ?parent:_[> `window ] Gtk.obj ->
  message_type:Gtk.Tags.message_type ->
  buttons:Gtk.Tags.buttons ->
  message:string -> unit -> Gtk.message_dialog Gtk.obj
)
ident(
  ext_ref GtkWindow.MessageDialog.create
)
"gWindow.ml" 238 8513 8541 "gWindow.ml" 238 8513 8553
type(
  Gtk.Tags.message_type
)
ident(
  int_ref message_type "gWindow.ml" 234 8328 8382 "gWindow.ml" 234 8328 8394
)
"gWindow.ml" 238 8513 8564 "gWindow.ml" 238 8513 8567
type(
  'a buttons -> Gtk.Tags.buttons
)
ident(
  ext_ref Pervasives.fst
)
"gWindow.ml" 238 8513 8568 "gWindow.ml" 238 8513 8575
type(
  'a buttons
)
ident(
  int_ref buttons "gWindow.ml" 234 8328 8396 "gWindow.ml" 234 8328 8403
)
"gWindow.ml" 238 8513 8563 "gWindow.ml" 238 8513 8576
type(
  Gtk.Tags.buttons
)
"gWindow.ml" 238 8513 8578 "gWindow.ml" 238 8513 8585
type(
  string
)
ident(
  int_ref message "gWindow.ml" 237 8455 8465 "gWindow.ml" 237 8455 8472
)
"gWindow.ml" 238 8513 8586 "gWindow.ml" 238 8513 8588
type(
  unit
)
"gWindow.ml" 238 8513 8519 "gWindow.ml" 238 8513 8588
type(
  Gtk.message_dialog Gtk.obj
)
"gWindow.ml" 237 8455 8461 "gWindow.ml" 238 8513 8588
type(
  Gtk.message_dialog Gtk.obj
)
"gWindow.ml" 239 8593 8597 "gWindow.ml" 239 8593 8615
type(
  Gtk.message_dialog Gtk.obj -> Gtk.message_dialog Gobject.param list -> unit
)
ident(
  ext_ref Gobject.set_params
)
"gWindow.ml" 239 8593 8616 "gWindow.ml" 239 8593 8617
type(
  Gtk.message_dialog Gtk.obj
)
ident(
  int_ref w "gWindow.ml" 236 8442 8450 "gWindow.ml" 236 8442 8451
)
"gWindow.ml" 239 8593 8618 "gWindow.ml" 239 8593 8620
type(
  Gtk.message_dialog Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 235 8406 8436 "gWindow.ml" 235 8406 8438
)
"gWindow.ml" 239 8593 8597 "gWindow.ml" 239 8593 8620
call(
  stack
)
type(
  unit
)
"gWindow.ml" 240 8622 8629 "gWindow.ml" 240 8622 8639
type(
  bool
)
ident(
  int_ref use_markup "gWindow.ml" 234 8328 8363 "gWindow.ml" 234 8328 8373
)
"gWindow.ml" 240 8622 8645 "gWindow.ml" 240 8622 8669
type(
  Gtk.message_dialog Gtk.obj -> string -> unit
)
ident(
  ext_ref GtkWindow.MessageDialog.set_markup
)
"gWindow.ml" 240 8622 8670 "gWindow.ml" 240 8622 8671
type(
  Gtk.message_dialog Gtk.obj
)
ident(
  int_ref w "gWindow.ml" 236 8442 8450 "gWindow.ml" 236 8442 8451
)
"gWindow.ml" 240 8622 8672 "gWindow.ml" 240 8622 8679
type(
  string
)
ident(
  int_ref message "gWindow.ml" 234 8328 8349 "gWindow.ml" 234 8328 8356
)
"gWindow.ml" 240 8622 8645 "gWindow.ml" 240 8622 8679
type(
  unit
)
"gWindow.ml" 240 8622 8626 "gWindow.ml" 240 8622 8679
type(
  unit
)
"gWindow.ml" 241 8682 8686 "gWindow.ml" 241 8682 8704
type(
  Gtk.message_dialog Gtk.obj -> buttons:'a buttons -> 'a message_dialog
)
"gWindow.ml" 241 8682 8706 "gWindow.ml" 241 8682 8713
type(
  'a buttons
)
ident(
  int_ref buttons "gWindow.ml" 234 8328 8396 "gWindow.ml" 234 8328 8403
)
"gWindow.ml" 241 8682 8714 "gWindow.ml" 241 8682 8715
type(
  Gtk.message_dialog Gtk.obj
)
ident(
  int_ref w "gWindow.ml" 236 8442 8450 "gWindow.ml" 236 8442 8451
)
"gWindow.ml" 241 8682 8686 "gWindow.ml" 241 8682 8715
call(
  tail
)
type(
  'a message_dialog
)
"gWindow.ml" 240 8622 8626 "gWindow.ml" 241 8682 8715
type(
  'a message_dialog
)
"gWindow.ml" 239 8593 8597 "gWindow.ml" 241 8682 8715
type(
  'a message_dialog
)
"gWindow.ml" 236 8442 8446 "gWindow.ml" 241 8682 8715
type(
  'a message_dialog
)
"gWindow.ml" 235 8406 8431 "gWindow.ml" 241 8682 8716
type(
  Gtk.message_dialog Gobject.param list -> 'a message_dialog
)
"gWindow.ml" 235 8406 8408 "gWindow.ml" 241 8682 8716
call(
  tail
)
call(
  stack
)
type(
  ?parent:'b ->
  ?destroy_with_parent:bool ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> 'a message_dialog
)
"gWindow.ml" 246 8739 8743 "gWindow.ml" 246 8739 8748
type(
  ([> `aboutdialog | `widget ], string) Gobject.property
)
ident(
  def namep "gWindow.ml" 251 8871 8871 --
)
"gWindow.ml" 247 8751 8756 "gWindow.ml" 247 8751 8776
type(
  int * int * int
)
ident(
  ext_ref GtkMain.Main.version
)
"gWindow.ml" 247 8751 8777 "gWindow.ml" 247 8751 8779
type(
  int * int * int -> int * int * int -> bool
)
ident(
  ext_ref Pervasives.( >= )
)
"gWindow.ml" 247 8751 8781 "gWindow.ml" 247 8751 8782
type(
  int
)
"gWindow.ml" 247 8751 8783 "gWindow.ml" 247 8751 8785
type(
  int
)
"gWindow.ml" 247 8751 8786 "gWindow.ml" 247 8751 8787
type(
  int
)
"gWindow.ml" 247 8751 8780 "gWindow.ml" 247 8751 8788
type(
  int * int * int
)
"gWindow.ml" 247 8751 8756 "gWindow.ml" 247 8751 8788
type(
  bool
)
"gWindow.ml" 248 8789 8796 "gWindow.ml" 248 8789 8835
type(
  ([> `aboutdialog | `widget ] as 'a, string) Gobject.property
)
ident(
  ext_ref GtkBaseProps.AboutDialog.P.program_name
)
"gWindow.ml" 249 8836 8843 "gWindow.ml" 249 8836 8869
type(
  ('a, string) Gobject.property
)
ident(
  ext_ref GtkBaseProps.Widget.P.name
)
"gWindow.ml" 247 8751 8753 "gWindow.ml" 249 8836 8869
type(
  ('a, string) Gobject.property
)
"gWindow.ml" 251 8871 8890 "gWindow.ml" 251 8871 8893
type(
  [> `aboutdialog | `bin | `container | `dialog | `gtk | `widget | `window ]
  Gtk.obj
)
"gWindow.ml" 252 8896 8905 "gWindow.ml" 252 8896 8911
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; artists : string list; as_widget : Gtk.widget Gtk.obj;
    as_window : Gtk.window Gtk.obj; authors : string list;
    border_width : int; child : GObj.widget; children : GObj.widget list;
    coerce : GObj.widget; comments : string;
    connect : Buttons.about dialog_signals; copyright : string;
    decorated : bool; default_height : int; default_width : int;
    deiconify : unit -> unit; deletable : bool; destroy : unit -> unit;
    destroy_with_parent : bool; documenters : string list;
    drag : GObj.drag_ops; event : GObj.event_ops; focus : GContainer.focus;
    focus_on_map : bool; get_oid : int; gravity : GdkEnums.gravity;
    has_separator : bool; has_toplevel_focus : bool;
    icon : GdkPixbuf.pixbuf option; icon_name : string;
    iconify : unit -> unit; is_active : bool; kind : GtkEnums.window_type;
    license : string; logo : GdkPixbuf.pixbuf; logo_icon_name : string;
    misc : GObj.misc_ops; modal : bool; move : x:int -> y:int -> unit;
    name : string; opacity : float; parse_geometry : string -> bool;
    position : GtkEnums.window_position; present : unit -> unit;
    remove : GObj.widget -> unit; resizable : bool;
    resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode; response : Buttons.about -> unit;
    role : string; run : unit -> Buttons.about; screen : Gdk.screen;
    set_accept_focus : bool -> unit; set_allow_grow : bool -> unit;
    set_allow_shrink : bool -> unit; set_artists : string list -> unit;
    set_authors : string list -> unit; set_border_width : int -> unit;
    set_comments : string -> unit; set_copyright : string -> unit;
    set_decorated : bool -> unit; set_default_height : int -> unit;
    set_default_response : Buttons.about -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit;
    set_documenters : string list -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_license : string -> unit;
    set_logo : GdkPixbuf.pixbuf -> unit; set_logo_icon_name : string -> unit;
    set_modal : bool -> unit; set_name : string -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : Buttons.about -> bool -> unit;
    set_role : string -> unit; set_screen : Gdk.screen -> unit;
    set_skip_pager_hint : bool -> unit; set_skip_taskbar_hint : bool -> unit;
    set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_translator_credits : string -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_version : string -> unit;
    set_website : string -> unit; set_website_label : string -> unit;
    set_wm_class : string -> unit; set_wm_name : string -> unit;
    set_wrap_license : bool -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    translator_credits : string; type_hint : GdkEnums.window_type_hint;
    urgency_hint : bool; vbox : GPack.box; version : string;
    website : string; website_label : string; wrap_license : bool; .. >
)
"gWindow.ml" 253 8912 8952 "gWindow.ml" 253 8912 8955
type(
  ([> `aboutdialog | `bin | `container | `dialog | `gtk | `widget | `window ]
   as 'a)
  Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 251 8871 8890 "gWindow.ml" 251 8871 8893
)
"gWindow.ml" 255 8996 9014 "gWindow.ml" 255 8996 9025
type(
  ('a, string) Gobject.property -> 'a Gtk.obj -> string
)
ident(
  ext_ref Gobject.get
)
"gWindow.ml" 255 8996 9026 "gWindow.ml" 255 8996 9031
type(
  ('a, string) Gobject.property
)
ident(
  int_ref namep "gWindow.ml" 246 8739 8743 "gWindow.ml" 246 8739 8748
)
"gWindow.ml" 255 8996 9032 "gWindow.ml" 255 8996 9035
type(
  'a Gtk.obj
)
"gWindow.ml" 255 8996 9014 "gWindow.ml" 255 8996 9035
call(
  tail
)
type(
  string
)
type(
  string
)
"gWindow.ml" 256 9036 9058 "gWindow.ml" 256 9036 9069
type(
  ('a, string) Gobject.property -> 'a Gtk.obj -> string -> unit
)
ident(
  ext_ref Gobject.set
)
"gWindow.ml" 256 9036 9070 "gWindow.ml" 256 9036 9075
type(
  ('a, string) Gobject.property
)
ident(
  int_ref namep "gWindow.ml" 246 8739 8743 "gWindow.ml" 246 8739 8748
)
"gWindow.ml" 256 9036 9076 "gWindow.ml" 256 9036 9079
type(
  'a Gtk.obj
)
"gWindow.ml" 256 9036 9058 "gWindow.ml" 256 9036 9079
call(
  tail
)
type(
  string -> unit
)
type(
  string -> unit
)
"gWindow.ml" 258 9132 9138 "gWindow.ml" 258 9132 9156
type(
  'a Gtk.obj -> decode:(int -> Buttons.about) -> Buttons.about dialog_signals
)
"gWindow.ml" 258 9132 9157 "gWindow.ml" 258 9132 9160
type(
  'a Gtk.obj
)
"gWindow.ml" 258 9132 9161 "gWindow.ml" 258 9132 9165
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; artists : string list; as_widget : Gtk.widget Gtk.obj;
    as_window : Gtk.window Gtk.obj; authors : string list;
    border_width : int; child : GObj.widget; children : GObj.widget list;
    coerce : GObj.widget; comments : string;
    connect : Buttons.about dialog_signals; copyright : string;
    decorated : bool; default_height : int; default_width : int;
    deiconify : unit -> unit; deletable : bool; destroy : unit -> unit;
    destroy_with_parent : bool; documenters : string list;
    drag : GObj.drag_ops; event : GObj.event_ops; focus : GContainer.focus;
    focus_on_map : bool; get_oid : int; gravity : GdkEnums.gravity;
    has_separator : bool; has_toplevel_focus : bool;
    icon : GdkPixbuf.pixbuf option; icon_name : string;
    iconify : unit -> unit; is_active : bool; kind : GtkEnums.window_type;
    license : string; logo : GdkPixbuf.pixbuf; logo_icon_name : string;
    misc : GObj.misc_ops; modal : bool; move : x:int -> y:int -> unit;
    name : string; opacity : float; parse_geometry : string -> bool;
    position : GtkEnums.window_position; present : unit -> unit;
    remove : GObj.widget -> unit; resizable : bool;
    resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode; response : Buttons.about -> unit;
    role : string; run : unit -> Buttons.about; screen : Gdk.screen;
    set_accept_focus : bool -> unit; set_allow_grow : bool -> unit;
    set_allow_shrink : bool -> unit; set_artists : string list -> unit;
    set_authors : string list -> unit; set_border_width : int -> unit;
    set_comments : string -> unit; set_copyright : string -> unit;
    set_decorated : bool -> unit; set_default_height : int -> unit;
    set_default_response : Buttons.about -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit;
    set_documenters : string list -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_license : string -> unit;
    set_logo : GdkPixbuf.pixbuf -> unit; set_logo_icon_name : string -> unit;
    set_modal : bool -> unit; set_name : string -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : Buttons.about -> bool -> unit;
    set_role : string -> unit; set_screen : Gdk.screen -> unit;
    set_skip_pager_hint : bool -> unit; set_skip_taskbar_hint : bool -> unit;
    set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_translator_credits : string -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_version : string -> unit;
    set_website : string -> unit; set_website_label : string -> unit;
    set_wm_class : string -> unit; set_wm_name : string -> unit;
    set_wrap_license : bool -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    translator_credits : string; type_hint : GdkEnums.window_type_hint;
    urgency_hint : bool; vbox : GPack.box; version : string;
    website : string; website_label : string; wrap_license : bool; .. >
  as 'b
)
"gWindow.ml" 258 9132 9161 "gWindow.ml" 258 9132 9172
call(
  stack
)
type(
  int -> Buttons.about
)
"gWindow.ml" 258 9132 9138 "gWindow.ml" 258 9132 9172
call(
  tail
)
type(
  Buttons.about dialog_signals
)
type(
  Buttons.about dialog_signals
)
"gWindow.ml" 259 9173 9198 "gWindow.ml" 259 9173 9221
type(
  'a Gtk.obj -> string list -> unit
)
ident(
  ext_ref GtkWindow.AboutDialog.set_artists
)
"gWindow.ml" 259 9173 9222 "gWindow.ml" 259 9173 9225
type(
  'a Gtk.obj
)
"gWindow.ml" 259 9173 9198 "gWindow.ml" 259 9173 9225
call(
  tail
)
type(
  string list -> unit
)
type(
  string list -> unit
)
"gWindow.ml" 260 9226 9247 "gWindow.ml" 260 9226 9270
type(
  'a Gtk.obj -> string list
)
ident(
  ext_ref GtkWindow.AboutDialog.get_artists
)
"gWindow.ml" 260 9226 9271 "gWindow.ml" 260 9226 9274
type(
  'a Gtk.obj
)
"gWindow.ml" 260 9226 9247 "gWindow.ml" 260 9226 9274
type(
  string list
)
type(
  string list
)
"gWindow.ml" 261 9275 9300 "gWindow.ml" 261 9275 9323
type(
  'a Gtk.obj -> string list -> unit
)
ident(
  ext_ref GtkWindow.AboutDialog.set_authors
)
"gWindow.ml" 261 9275 9324 "gWindow.ml" 261 9275 9327
type(
  'a Gtk.obj
)
"gWindow.ml" 261 9275 9300 "gWindow.ml" 261 9275 9327
call(
  tail
)
type(
  string list -> unit
)
type(
  string list -> unit
)
"gWindow.ml" 262 9328 9349 "gWindow.ml" 262 9328 9372
type(
  'a Gtk.obj -> string list
)
ident(
  ext_ref GtkWindow.AboutDialog.get_authors
)
"gWindow.ml" 262 9328 9373 "gWindow.ml" 262 9328 9376
type(
  'a Gtk.obj
)
"gWindow.ml" 262 9328 9349 "gWindow.ml" 262 9328 9376
type(
  string list
)
type(
  string list
)
"gWindow.ml" 263 9377 9406 "gWindow.ml" 263 9377 9433
type(
  'a Gtk.obj -> string list -> unit
)
ident(
  ext_ref GtkWindow.AboutDialog.set_documenters
)
"gWindow.ml" 263 9377 9434 "gWindow.ml" 263 9377 9437
type(
  'a Gtk.obj
)
"gWindow.ml" 263 9377 9406 "gWindow.ml" 263 9377 9437
call(
  tail
)
type(
  string list -> unit
)
type(
  string list -> unit
)
"gWindow.ml" 264 9438 9463 "gWindow.ml" 264 9438 9490
type(
  'a Gtk.obj -> string list
)
ident(
  ext_ref GtkWindow.AboutDialog.get_documenters
)
"gWindow.ml" 264 9438 9491 "gWindow.ml" 264 9438 9494
type(
  'a Gtk.obj
)
"gWindow.ml" 264 9438 9463 "gWindow.ml" 264 9438 9494
type(
  string list
)
type(
  string list
)
"gWindow.ml" 266 9511 9526 "gWindow.ml" 266 9511 9533
type(
  int
)
ident(
  int_ref rcancel "gWindow.ml" 121 4642 4646 "gWindow.ml" 121 4642 4653
)
"gWindow.ml" 266 9511 9535 "gWindow.ml" 266 9511 9542
type(
  Buttons.about
)
"gWindow.ml" 266 9511 9526 "gWindow.ml" 266 9511 9542
type(
  int * Buttons.about
)
"gWindow.ml" 266 9511 9545 "gWindow.ml" 266 9511 9551
type(
  int
)
ident(
  int_ref rclose "gWindow.ml" 122 4669 4673 "gWindow.ml" 122 4669 4679
)
"gWindow.ml" 266 9511 9553 "gWindow.ml" 266 9511 9559
type(
  Buttons.about
)
"gWindow.ml" 266 9511 9545 "gWindow.ml" 266 9511 9559
type(
  int * Buttons.about
)
"gWindow.ml" 266 9511 9524 "gWindow.ml" 266 9511 9561
type(
  (int * Buttons.about) list
)
"gWindow.ml" 266 9511 9562 "gWindow.ml" 266 9511 9563
type(
  (int * Buttons.about) list ->
  (int * Buttons.about) list -> (int * Buttons.about) list
)
ident(
  ext_ref Pervasives.( @ )
)
"gWindow.ml" 266 9511 9564 "gWindow.ml" 266 9511 9567
type(
  (int * Buttons.about) list
)
"gWindow.ml" 266 9511 9524 "gWindow.ml" 266 9511 9567
call(
  stack
)
type(
  (int * Buttons.about) list
)
"gWindow.ml" 266 9511 9517 "gWindow.ml" 266 9511 9567
type(
  'b -> unit
)
type(
  unit
)
"gWindow.ml" 269 9575 9579 "gWindow.ml" 269 9575 9591
type(
  ?name:string ->
  ?authors:string list ->
  ?comments:string ->
  ?copyright:string ->
  ?license:string ->
  ?logo:GdkPixbuf.pixbuf ->
  ?logo_icon_name:string ->
  ?translator_credits:string ->
  ?version:string ->
  ?website:string ->
  ?website_label:string ->
  ?wrap_license:bool ->
  ?parent:< as_window : Gtk.window Gtk.obj; .. > ->
  ?destroy_with_parent:bool ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> about_dialog
)
ident(
  def about_dialog "gWindow.ml" 280 9924 9924 --
)
"gWindow.ml" 269 9575 9593 "gWindow.ml" 269 9575 9597
type(
  string option
)
ident(
  def name "gWindow.ml" 269 9575 9598 "gWindow.ml" 276 9866 9892
)
"gWindow.ml" 269 9575 9599 "gWindow.ml" 269 9575 9606
type(
  string list option
)
ident(
  def authors "gWindow.ml" 270 9609 9611 "gWindow.ml" 276 9866 9892
)
"gWindow.ml" 270 9609 9615 "gWindow.ml" 270 9609 9617
type(
  [> `aboutdialog | `widget ] Gobject.param list
)
"gWindow.ml" 270 9609 9620 "gWindow.ml" 270 9609 9645
type(
  ([> `aboutdialog | `widget ] as 'a, string) Gobject.property ->
  string option -> 'a Gobject.param list -> 'a Gobject.param list
)
ident(
  ext_ref Gobject.Property.may_cons
)
"gWindow.ml" 270 9609 9646 "gWindow.ml" 270 9609 9651
type(
  ('a, string) Gobject.property
)
ident(
  int_ref namep "gWindow.ml" 246 8739 8743 "gWindow.ml" 246 8739 8748
)
"gWindow.ml" 270 9609 9652 "gWindow.ml" 270 9609 9656
type(
  string option
)
ident(
  int_ref name "gWindow.ml" 269 9575 9593 "gWindow.ml" 269 9575 9597
)
"gWindow.ml" 270 9609 9657 "gWindow.ml" 270 9609 9659
type(
  'a Gobject.param list
)
"gWindow.ml" 270 9609 9620 "gWindow.ml" 270 9609 9659
call(
  stack
)
type(
  'a Gobject.param list
)
"gWindow.ml" 271 9663 9665 "gWindow.ml" 271 9663 9688
type(
  cont:(Gtk.about_dialog Gobject.param list ->
        ?parent:(< as_window : Gtk.window Gtk.obj; .. > as 'b) ->
        ?destroy_with_parent:bool ->
        ?title:string ->
        ?allow_grow:bool ->
        ?allow_shrink:bool ->
        ?decorated:bool ->
        ?deletable:bool ->
        ?focus_on_map:bool ->
        ?icon:GdkPixbuf.pixbuf ->
        ?icon_name:string ->
        ?modal:bool ->
        ?position:GtkEnums.window_position ->
        ?resizable:bool ->
        ?screen:Gdk.screen ->
        ?type_hint:GdkEnums.window_type_hint ->
        ?urgency_hint:bool ->
        ?wm_name:string ->
        ?wm_class:string ->
        ?border_width:int ->
        ?width:int -> ?height:int -> ?show:bool -> unit -> about_dialog) ->
  Gtk.about_dialog Gobject.param list ->
  ?comments:string ->
  ?copyright:string ->
  ?license:string ->
  ?logo:GdkPixbuf.pixbuf ->
  ?logo_icon_name:string ->
  ?translator_credits:string ->
  ?version:string ->
  ?website:string ->
  ?website_label:string ->
  ?wrap_license:bool ->
  ?parent:'b ->
  ?destroy_with_parent:bool ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> about_dialog
)
ident(
  ext_ref GtkWindow.AboutDialog.make_params
)
"gWindow.ml" 271 9663 9689 "gWindow.ml" 271 9663 9691
type(
  Gtk.about_dialog Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 270 9609 9615 "gWindow.ml" 270 9609 9617
)
"gWindow.ml" 271 9663 9703 "gWindow.ml" 271 9663 9705
type(
  Gtk.about_dialog Gobject.param list
)
ident(
  def pl "gWindow.ml" 272 9709 9713 "gWindow.ml" 276 9866 9891
)
"gWindow.ml" 272 9709 9713 "gWindow.ml" 272 9709 9724
type(
  Gtk.about_dialog Gobject.param list ->
  ?parent:'b ->
  ?destroy_with_parent:bool ->
  create:(Gtk.about_dialog Gobject.param list -> about_dialog) ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> about_dialog
)
ident(
  int_ref make_dialog "gWindow.ml" 178 6356 6360 "gWindow.ml" 178 6356 6371
)
"gWindow.ml" 272 9709 9725 "gWindow.ml" 272 9709 9727
type(
  Gtk.about_dialog Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 271 9663 9703 "gWindow.ml" 271 9663 9705
)
"gWindow.ml" 272 9709 9741 "gWindow.ml" 272 9709 9743
type(
  Gtk.about_dialog Gobject.param list
)
ident(
  def pl "gWindow.ml" 273 9747 9753 "gWindow.ml" 276 9866 9890
)
"gWindow.ml" 273 9747 9757 "gWindow.ml" 273 9747 9758
type(
  Gtk.about_dialog Gtk.obj
)
"gWindow.ml" 273 9747 9761 "gWindow.ml" 273 9747 9779
type(
  unit -> Gtk.about_dialog Gtk.obj
)
ident(
  ext_ref GtkWindow.AboutDialog.create
)
"gWindow.ml" 273 9747 9780 "gWindow.ml" 273 9747 9782
type(
  unit
)
"gWindow.ml" 273 9747 9761 "gWindow.ml" 273 9747 9782
type(
  Gtk.about_dialog Gtk.obj
)
"gWindow.ml" 274 9786 9792 "gWindow.ml" 274 9786 9810
type(
  Gtk.about_dialog Gtk.obj -> Gtk.about_dialog Gobject.param list -> unit
)
ident(
  ext_ref Gobject.set_params
)
"gWindow.ml" 274 9786 9811 "gWindow.ml" 274 9786 9812
type(
  Gtk.about_dialog Gtk.obj
)
ident(
  int_ref d "gWindow.ml" 273 9747 9757 "gWindow.ml" 273 9747 9758
)
"gWindow.ml" 274 9786 9813 "gWindow.ml" 274 9786 9815
type(
  Gtk.about_dialog Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 272 9709 9741 "gWindow.ml" 272 9709 9743
)
"gWindow.ml" 274 9786 9792 "gWindow.ml" 274 9786 9815
call(
  stack
)
type(
  unit
)
"gWindow.ml" 275 9818 9824 "gWindow.ml" 275 9818 9827
type(
  f:(string list -> unit) -> string list option -> unit
)
ident(
  ext_ref Gaux.may
)
"gWindow.ml" 275 9818 9829 "gWindow.ml" 275 9818 9852
type(
  Gtk.about_dialog Gtk.obj -> string list -> unit
)
ident(
  ext_ref GtkWindow.AboutDialog.set_authors
)
"gWindow.ml" 275 9818 9853 "gWindow.ml" 275 9818 9854
type(
  Gtk.about_dialog Gtk.obj
)
ident(
  int_ref d "gWindow.ml" 273 9747 9757 "gWindow.ml" 273 9747 9758
)
"gWindow.ml" 275 9818 9828 "gWindow.ml" 275 9818 9855
call(
  stack
)
type(
  string list -> unit
)
"gWindow.ml" 275 9818 9856 "gWindow.ml" 275 9818 9863
type(
  string list option
)
ident(
  int_ref authors "gWindow.ml" 269 9575 9599 "gWindow.ml" 269 9575 9606
)
"gWindow.ml" 275 9818 9824 "gWindow.ml" 275 9818 9863
call(
  stack
)
type(
  unit
)
"gWindow.ml" 276 9866 9872 "gWindow.ml" 276 9866 9888
type(
  Gtk.about_dialog Gtk.obj -> about_dialog
)
"gWindow.ml" 276 9866 9889 "gWindow.ml" 276 9866 9890
type(
  Gtk.about_dialog Gtk.obj
)
ident(
  int_ref d "gWindow.ml" 273 9747 9757 "gWindow.ml" 273 9747 9758
)
"gWindow.ml" 276 9866 9872 "gWindow.ml" 276 9866 9890
call(
  tail
)
type(
  about_dialog
)
"gWindow.ml" 275 9818 9824 "gWindow.ml" 276 9866 9890
type(
  about_dialog
)
"gWindow.ml" 274 9786 9792 "gWindow.ml" 276 9866 9890
type(
  about_dialog
)
"gWindow.ml" 273 9747 9753 "gWindow.ml" 276 9866 9890
type(
  about_dialog
)
"gWindow.ml" 272 9709 9736 "gWindow.ml" 276 9866 9891
type(
  Gtk.about_dialog Gobject.param list -> about_dialog
)
"gWindow.ml" 272 9709 9713 "gWindow.ml" 276 9866 9891
call(
  tail
)
call(
  stack
)
type(
  ?parent:'b ->
  ?destroy_with_parent:bool ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> about_dialog
)
"gWindow.ml" 271 9663 9698 "gWindow.ml" 276 9866 9892
type(
  Gtk.about_dialog Gobject.param list ->
  ?parent:'b ->
  ?destroy_with_parent:bool ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> about_dialog
)
"gWindow.ml" 271 9663 9665 "gWindow.ml" 276 9866 9892
call(
  tail
)
type(
  ?comments:string ->
  ?copyright:string ->
  ?license:string ->
  ?logo:GdkPixbuf.pixbuf ->
  ?logo_icon_name:string ->
  ?translator_credits:string ->
  ?version:string ->
  ?website:string ->
  ?website_label:string ->
  ?wrap_license:bool ->
  ?parent:'b ->
  ?destroy_with_parent:bool ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> about_dialog
)
"gWindow.ml" 270 9609 9611 "gWindow.ml" 276 9866 9892
type(
  ?comments:string ->
  ?copyright:string ->
  ?license:string ->
  ?logo:GdkPixbuf.pixbuf ->
  ?logo_icon_name:string ->
  ?translator_credits:string ->
  ?version:string ->
  ?website:string ->
  ?website_label:string ->
  ?wrap_license:bool ->
  ?parent:'b ->
  ?destroy_with_parent:bool ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> about_dialog
)
"gWindow.ml" 280 9924 9953 "gWindow.ml" 280 9924 9956
type(
  Gtk.color_selection_dialog Gtk.obj
)
"gWindow.ml" 280 9924 9966 "gWindow.ml" 280 9924 9972
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; cancel_button : GButton.button; child : GObj.widget;
    children : GObj.widget list; coerce : GObj.widget;
    colorsel : GMisc.color_selection;
    connect : Buttons.color_selection dialog_signals; decorated : bool;
    default_height : int; default_width : int; deiconify : unit -> unit;
    deletable : bool; destroy : unit -> unit; destroy_with_parent : bool;
    drag : GObj.drag_ops; event : GObj.event_ops; focus : GContainer.focus;
    focus_on_map : bool; get_oid : int; gravity : GdkEnums.gravity;
    has_separator : bool; has_toplevel_focus : bool;
    help_button : GButton.button; icon : GdkPixbuf.pixbuf option;
    icon_name : string; iconify : unit -> unit; is_active : bool;
    kind : GtkEnums.window_type; misc : GObj.misc_ops; modal : bool;
    move : x:int -> y:int -> unit; ok_button : GButton.button;
    opacity : float; parse_geometry : string -> bool;
    position : GtkEnums.window_position; present : unit -> unit;
    remove : GObj.widget -> unit; resizable : bool;
    resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode;
    response : Buttons.color_selection -> unit; role : string;
    run : unit -> Buttons.color_selection; screen : Gdk.screen;
    set_accept_focus : bool -> unit; set_allow_grow : bool -> unit;
    set_allow_shrink : bool -> unit; set_border_width : int -> unit;
    set_decorated : bool -> unit; set_default_height : int -> unit;
    set_default_response : Buttons.color_selection -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_modal : bool -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : Buttons.color_selection -> bool -> unit;
    set_role : string -> unit; set_screen : Gdk.screen -> unit;
    set_skip_pager_hint : bool -> unit; set_skip_taskbar_hint : bool -> unit;
    set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
)
"gWindow.ml" 281 9973 10022 "gWindow.ml" 281 9973 10025
type(
  Gtk.color_selection_dialog Gtk.obj
)
type(
  Gtk.color_selection_dialog Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 280 9924 9953 "gWindow.ml" 280 9924 9956
)
"gWindow.ml" 282 10060 10099 "gWindow.ml" 282 10060 10117
type(
  Gtk.color_selection_dialog Gtk.obj ->
  decode:(int -> Buttons.color_selection) ->
  Buttons.color_selection dialog_signals
)
"gWindow.ml" 282 10060 10118 "gWindow.ml" 282 10060 10121
type(
  Gtk.color_selection_dialog Gtk.obj
)
"gWindow.ml" 282 10060 10122 "gWindow.ml" 282 10060 10126
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; cancel_button : GButton.button; child : GObj.widget;
    children : GObj.widget list; coerce : GObj.widget;
    colorsel : GMisc.color_selection;
    connect : Buttons.color_selection dialog_signals; decorated : bool;
    default_height : int; default_width : int; deiconify : unit -> unit;
    deletable : bool; destroy : unit -> unit; destroy_with_parent : bool;
    drag : GObj.drag_ops; event : GObj.event_ops; focus : GContainer.focus;
    focus_on_map : bool; get_oid : int; gravity : GdkEnums.gravity;
    has_separator : bool; has_toplevel_focus : bool;
    help_button : GButton.button; icon : GdkPixbuf.pixbuf option;
    icon_name : string; iconify : unit -> unit; is_active : bool;
    kind : GtkEnums.window_type; misc : GObj.misc_ops; modal : bool;
    move : x:int -> y:int -> unit; ok_button : GButton.button;
    opacity : float; parse_geometry : string -> bool;
    position : GtkEnums.window_position; present : unit -> unit;
    remove : GObj.widget -> unit; resizable : bool;
    resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode;
    response : Buttons.color_selection -> unit; role : string;
    run : unit -> Buttons.color_selection; screen : Gdk.screen;
    set_accept_focus : bool -> unit; set_allow_grow : bool -> unit;
    set_allow_shrink : bool -> unit; set_border_width : int -> unit;
    set_decorated : bool -> unit; set_default_height : int -> unit;
    set_default_response : Buttons.color_selection -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_modal : bool -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : Buttons.color_selection -> bool -> unit;
    set_role : string -> unit; set_screen : Gdk.screen -> unit;
    set_skip_pager_hint : bool -> unit; set_skip_taskbar_hint : bool -> unit;
    set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
  as 'a
)
"gWindow.ml" 282 10060 10122 "gWindow.ml" 282 10060 10133
call(
  stack
)
type(
  int -> Buttons.color_selection
)
"gWindow.ml" 282 10060 10099 "gWindow.ml" 282 10060 10133
call(
  tail
)
type(
  Buttons.color_selection dialog_signals
)
type(
  Buttons.color_selection dialog_signals
)
"gWindow.ml" 284 10155 10159 "gWindow.ml" 284 10155 10177
type(
  Gtk.button Gtk.obj -> GButton.button
)
"gWindow.ml" 284 10155 10179 "gWindow.ml" 284 10155 10209
type(
  Gtk.color_selection_dialog Gtk.obj -> Gtk.button Gtk.obj
)
ident(
  ext_ref GtkWindow.ColorSelectionDialog.ok_button
)
"gWindow.ml" 284 10155 10210 "gWindow.ml" 284 10155 10213
type(
  Gtk.color_selection_dialog Gtk.obj
)
"gWindow.ml" 284 10155 10178 "gWindow.ml" 284 10155 10214
type(
  Gtk.button Gtk.obj
)
"gWindow.ml" 284 10155 10159 "gWindow.ml" 284 10155 10214
call(
  tail
)
type(
  GButton.button
)
type(
  GButton.button
)
"gWindow.ml" 286 10240 10244 "gWindow.ml" 286 10240 10262
type(
  Gtk.button Gtk.obj -> GButton.button
)
"gWindow.ml" 286 10240 10264 "gWindow.ml" 286 10240 10298
type(
  Gtk.color_selection_dialog Gtk.obj -> Gtk.button Gtk.obj
)
ident(
  ext_ref GtkWindow.ColorSelectionDialog.cancel_button
)
"gWindow.ml" 286 10240 10299 "gWindow.ml" 286 10240 10302
type(
  Gtk.color_selection_dialog Gtk.obj
)
"gWindow.ml" 286 10240 10263 "gWindow.ml" 286 10240 10303
type(
  Gtk.button Gtk.obj
)
"gWindow.ml" 286 10240 10244 "gWindow.ml" 286 10240 10303
call(
  tail
)
type(
  GButton.button
)
type(
  GButton.button
)
"gWindow.ml" 288 10327 10331 "gWindow.ml" 288 10327 10349
type(
  Gtk.button Gtk.obj -> GButton.button
)
"gWindow.ml" 288 10327 10351 "gWindow.ml" 288 10327 10383
type(
  Gtk.color_selection_dialog Gtk.obj -> Gtk.button Gtk.obj
)
ident(
  ext_ref GtkWindow.ColorSelectionDialog.help_button
)
"gWindow.ml" 288 10327 10384 "gWindow.ml" 288 10327 10387
type(
  Gtk.color_selection_dialog Gtk.obj
)
"gWindow.ml" 288 10327 10350 "gWindow.ml" 288 10327 10388
type(
  Gtk.button Gtk.obj
)
"gWindow.ml" 288 10327 10331 "gWindow.ml" 288 10327 10388
call(
  tail
)
type(
  GButton.button
)
type(
  GButton.button
)
"gWindow.ml" 290 10409 10413 "gWindow.ml" 290 10409 10438
type(
  Gtk.color_selection Gtk.obj -> GMisc.color_selection
)
"gWindow.ml" 290 10409 10440 "gWindow.ml" 290 10409 10469
type(
  Gtk.color_selection_dialog Gtk.obj -> Gtk.color_selection Gtk.obj
)
ident(
  ext_ref GtkWindow.ColorSelectionDialog.colorsel
)
"gWindow.ml" 290 10409 10470 "gWindow.ml" 290 10409 10473
type(
  Gtk.color_selection_dialog Gtk.obj
)
"gWindow.ml" 290 10409 10439 "gWindow.ml" 290 10409 10474
type(
  Gtk.color_selection Gtk.obj
)
"gWindow.ml" 290 10409 10413 "gWindow.ml" 290 10409 10474
call(
  tail
)
type(
  GMisc.color_selection
)
type(
  GMisc.color_selection
)
"gWindow.ml" 292 10489 10502 "gWindow.ml" 292 10489 10505
type(
  int
)
ident(
  int_ref rok "gWindow.ml" 120 4623 4627 "gWindow.ml" 120 4623 4630
)
"gWindow.ml" 292 10489 10507 "gWindow.ml" 292 10489 10510
type(
  Buttons.color_selection
)
"gWindow.ml" 292 10489 10502 "gWindow.ml" 292 10489 10510
type(
  int * Buttons.color_selection
)
"gWindow.ml" 292 10489 10513 "gWindow.ml" 292 10489 10520
type(
  int
)
ident(
  int_ref rcancel "gWindow.ml" 121 4642 4646 "gWindow.ml" 121 4642 4653
)
"gWindow.ml" 292 10489 10522 "gWindow.ml" 292 10489 10529
type(
  Buttons.color_selection
)
"gWindow.ml" 292 10489 10513 "gWindow.ml" 292 10489 10529
type(
  int * Buttons.color_selection
)
"gWindow.ml" 292 10489 10532 "gWindow.ml" 292 10489 10537
type(
  int
)
ident(
  int_ref rhelp "gWindow.ml" 126 4759 4763 "gWindow.ml" 126 4759 4768
)
"gWindow.ml" 292 10489 10539 "gWindow.ml" 292 10489 10544
type(
  Buttons.color_selection
)
"gWindow.ml" 292 10489 10532 "gWindow.ml" 292 10489 10544
type(
  int * Buttons.color_selection
)
"gWindow.ml" 292 10489 10500 "gWindow.ml" 292 10489 10546
type(
  (int * Buttons.color_selection) list
)
"gWindow.ml" 292 10489 10547 "gWindow.ml" 292 10489 10548
type(
  (int * Buttons.color_selection) list ->
  (int * Buttons.color_selection) list ->
  (int * Buttons.color_selection) list
)
ident(
  ext_ref Pervasives.( @ )
)
"gWindow.ml" 292 10489 10549 "gWindow.ml" 292 10489 10552
type(
  (int * Buttons.color_selection) list
)
"gWindow.ml" 292 10489 10500 "gWindow.ml" 292 10489 10552
call(
  stack
)
type(
  (int * Buttons.color_selection) list
)
"gWindow.ml" 292 10489 10493 "gWindow.ml" 292 10489 10552
type(
  'a -> unit
)
type(
  unit
)
"gWindow.ml" 295 10558 10562 "gWindow.ml" 295 10558 10584
type(
  ?title:string ->
  ?parent:< as_window : Gtk.window Gtk.obj; .. > ->
  ?destroy_with_parent:bool ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> color_selection_dialog
)
ident(
  def color_selection_dialog "gWindow.ml" 301 10760 10760 --
)
"gWindow.ml" 295 10558 10587 "gWindow.ml" 295 10558 10592
type(
  string
)
"gWindow.ml" 295 10558 10593 "gWindow.ml" 295 10558 10607
type(
  string
)
type(
  string
)
ident(
  int_ref *sth* "gWindow.ml" 295 10558 10593 "gWindow.ml" 295 10558 10607
)
type(
  string option
)
type(
  string option
)
type(
  string
)
ident(
  def *sth* "gWindow.ml" 295 10558 10593 "gWindow.ml" 295 10558 10607
)
"gWindow.ml" 296 10611 10613 "gWindow.ml" 296 10611 10624
type(
  Gtk.color_selection_dialog Gobject.param list ->
  ?parent:(< as_window : Gtk.window Gtk.obj; .. > as 'a) ->
  ?destroy_with_parent:bool ->
  create:(Gtk.color_selection_dialog Gobject.param list ->
          color_selection_dialog) ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> color_selection_dialog
)
ident(
  int_ref make_dialog "gWindow.ml" 178 6356 6360 "gWindow.ml" 178 6356 6371
)
"gWindow.ml" 296 10611 10625 "gWindow.ml" 296 10611 10627
type(
  Gtk.color_selection_dialog Gobject.param list
)
"gWindow.ml" 296 10611 10629 "gWindow.ml" 296 10611 10634
type(
  string
)
ident(
  int_ref title "gWindow.ml" 295 10558 10587 "gWindow.ml" 295 10558 10592
)
"gWindow.ml" 296 10611 10646 "gWindow.ml" 296 10611 10651
type(
  bool
)
"gWindow.ml" 296 10611 10665 "gWindow.ml" 296 10611 10667
type(
  Gtk.color_selection_dialog Gobject.param list
)
ident(
  def pl "gWindow.ml" 297 10671 10675 "gWindow.ml" 297 10671 10734
)
"gWindow.ml" 297 10671 10675 "gWindow.ml" 297 10671 10701
type(
  Gtk.color_selection_dialog Gtk.obj -> color_selection_dialog
)
"gWindow.ml" 297 10671 10703 "gWindow.ml" 297 10671 10730
type(
  Gtk.color_selection_dialog Gobject.param list ->
  Gtk.color_selection_dialog Gtk.obj
)
ident(
  ext_ref GtkWindow.ColorSelectionDialog.create
)
"gWindow.ml" 297 10671 10731 "gWindow.ml" 297 10671 10733
type(
  Gtk.color_selection_dialog Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 296 10611 10665 "gWindow.ml" 296 10611 10667
)
"gWindow.ml" 297 10671 10702 "gWindow.ml" 297 10671 10734
call(
  stack
)
type(
  Gtk.color_selection_dialog Gtk.obj
)
"gWindow.ml" 297 10671 10675 "gWindow.ml" 297 10671 10734
call(
  tail
)
type(
  color_selection_dialog
)
"gWindow.ml" 296 10611 10660 "gWindow.ml" 297 10671 10735
type(
  Gtk.color_selection_dialog Gobject.param list -> color_selection_dialog
)
"gWindow.ml" 296 10611 10613 "gWindow.ml" 297 10671 10735
call(
  tail
)
call(
  stack
)
call(
  stack
)
type(
  ?parent:'a ->
  ?destroy_with_parent:bool ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> color_selection_dialog
)
"gWindow.ml" 301 10760 10781 "gWindow.ml" 301 10760 10784
type(
  Gtk.file_selection Gtk.obj
)
"gWindow.ml" 301 10760 10794 "gWindow.ml" 301 10760 10800
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; cancel_button : GButton.button; child : GObj.widget;
    children : GObj.widget list; coerce : GObj.widget;
    complete : filter:string -> unit;
    connect : Buttons.file_selection dialog_signals; decorated : bool;
    default_height : int; default_width : int; deiconify : unit -> unit;
    deletable : bool; destroy : unit -> unit; destroy_with_parent : bool;
    dir_list : string GList.clist; drag : GObj.drag_ops;
    event : GObj.event_ops; file_list : string GList.clist;
    filename : string; focus : GContainer.focus; focus_on_map : bool;
    get_oid : int; get_selections : string list; gravity : GdkEnums.gravity;
    has_separator : bool; has_toplevel_focus : bool;
    help_button : GButton.button; icon : GdkPixbuf.pixbuf option;
    icon_name : string; iconify : unit -> unit; is_active : bool;
    kind : GtkEnums.window_type; misc : GObj.misc_ops; modal : bool;
    move : x:int -> y:int -> unit; ok_button : GButton.button;
    opacity : float; parse_geometry : string -> bool;
    position : GtkEnums.window_position; present : unit -> unit;
    remove : GObj.widget -> unit; resizable : bool;
    resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode;
    response : Buttons.file_selection -> unit; role : string;
    run : unit -> Buttons.file_selection; screen : Gdk.screen;
    select_multiple : bool; set_accept_focus : bool -> unit;
    set_allow_grow : bool -> unit; set_allow_shrink : bool -> unit;
    set_border_width : int -> unit; set_decorated : bool -> unit;
    set_default_height : int -> unit;
    set_default_response : Buttons.file_selection -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_filename : string -> unit;
    set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_modal : bool -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : Buttons.file_selection -> bool -> unit;
    set_role : string -> unit; set_screen : Gdk.screen -> unit;
    set_select_multiple : bool -> unit; set_show_fileops : bool -> unit;
    set_skip_pager_hint : bool -> unit; set_skip_taskbar_hint : bool -> unit;
    set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit; show_fileops : 
    bool; skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
)
"gWindow.ml" 302 10801 10849 "gWindow.ml" 302 10801 10852
type(
  Gtk.file_selection Gtk.obj
)
type(
  Gtk.file_selection Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 301 10760 10781 "gWindow.ml" 301 10760 10784
)
"gWindow.ml" 304 10910 10949 "gWindow.ml" 304 10910 10967
type(
  Gtk.file_selection Gtk.obj ->
  decode:(int -> Buttons.file_selection) ->
  Buttons.file_selection dialog_signals
)
"gWindow.ml" 304 10910 10968 "gWindow.ml" 304 10910 10971
type(
  Gtk.file_selection Gtk.obj
)
"gWindow.ml" 304 10910 10972 "gWindow.ml" 304 10910 10976
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; cancel_button : GButton.button; child : GObj.widget;
    children : GObj.widget list; coerce : GObj.widget;
    complete : filter:string -> unit;
    connect : Buttons.file_selection dialog_signals; decorated : bool;
    default_height : int; default_width : int; deiconify : unit -> unit;
    deletable : bool; destroy : unit -> unit; destroy_with_parent : bool;
    dir_list : string GList.clist; drag : GObj.drag_ops;
    event : GObj.event_ops; file_list : string GList.clist;
    filename : string; focus : GContainer.focus; focus_on_map : bool;
    get_oid : int; get_selections : string list; gravity : GdkEnums.gravity;
    has_separator : bool; has_toplevel_focus : bool;
    help_button : GButton.button; icon : GdkPixbuf.pixbuf option;
    icon_name : string; iconify : unit -> unit; is_active : bool;
    kind : GtkEnums.window_type; misc : GObj.misc_ops; modal : bool;
    move : x:int -> y:int -> unit; ok_button : GButton.button;
    opacity : float; parse_geometry : string -> bool;
    position : GtkEnums.window_position; present : unit -> unit;
    remove : GObj.widget -> unit; resizable : bool;
    resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode;
    response : Buttons.file_selection -> unit; role : string;
    run : unit -> Buttons.file_selection; screen : Gdk.screen;
    select_multiple : bool; set_accept_focus : bool -> unit;
    set_allow_grow : bool -> unit; set_allow_shrink : bool -> unit;
    set_border_width : int -> unit; set_decorated : bool -> unit;
    set_default_height : int -> unit;
    set_default_response : Buttons.file_selection -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_filename : string -> unit;
    set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_modal : bool -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : Buttons.file_selection -> bool -> unit;
    set_role : string -> unit; set_screen : Gdk.screen -> unit;
    set_select_multiple : bool -> unit; set_show_fileops : bool -> unit;
    set_skip_pager_hint : bool -> unit; set_skip_taskbar_hint : bool -> unit;
    set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit; show_fileops : 
    bool; skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
  as 'a
)
"gWindow.ml" 304 10910 10972 "gWindow.ml" 304 10910 10983
call(
  stack
)
type(
  int -> Buttons.file_selection
)
"gWindow.ml" 304 10910 10949 "gWindow.ml" 304 10910 10983
call(
  tail
)
type(
  Buttons.file_selection dialog_signals
)
type(
  Buttons.file_selection dialog_signals
)
"gWindow.ml" 305 10984 11004 "gWindow.ml" 305 10984 11026
type(
  Gtk.file_selection Gtk.obj -> filter:string -> unit
)
ident(
  ext_ref GtkWindow.FileSelection.complete
)
"gWindow.ml" 305 10984 11027 "gWindow.ml" 305 10984 11030
type(
  Gtk.file_selection Gtk.obj
)
"gWindow.ml" 305 10984 11004 "gWindow.ml" 305 10984 11030
call(
  tail
)
type(
  filter:string -> unit
)
type(
  filter:string -> unit
)
"gWindow.ml" 306 11031 11057 "gWindow.ml" 306 11031 11085
type(
  Gtk.file_selection Gtk.obj -> string list
)
ident(
  ext_ref GtkWindow.FileSelection.get_selections
)
"gWindow.ml" 306 11031 11086 "gWindow.ml" 306 11031 11089
type(
  Gtk.file_selection Gtk.obj
)
"gWindow.ml" 306 11031 11057 "gWindow.ml" 306 11031 11089
type(
  string list
)
type(
  string list
)
"gWindow.ml" 307 11090 11111 "gWindow.ml" 307 11090 11129
type(
  Gtk.button Gtk.obj -> GButton.button
)
"gWindow.ml" 307 11090 11131 "gWindow.ml" 307 11090 11158
type(
  Gtk.file_selection Gtk.obj -> Gtk.button Gtk.obj
)
ident(
  ext_ref GtkWindow.FileSelection.get_ok_button
)
"gWindow.ml" 307 11090 11159 "gWindow.ml" 307 11090 11162
type(
  Gtk.file_selection Gtk.obj
)
"gWindow.ml" 307 11090 11130 "gWindow.ml" 307 11090 11163
type(
  Gtk.button Gtk.obj
)
"gWindow.ml" 307 11090 11111 "gWindow.ml" 307 11090 11163
call(
  tail
)
type(
  GButton.button
)
type(
  GButton.button
)
"gWindow.ml" 309 11189 11193 "gWindow.ml" 309 11189 11211
type(
  Gtk.button Gtk.obj -> GButton.button
)
"gWindow.ml" 309 11189 11213 "gWindow.ml" 309 11189 11244
type(
  Gtk.file_selection Gtk.obj -> Gtk.button Gtk.obj
)
ident(
  ext_ref GtkWindow.FileSelection.get_cancel_button
)
"gWindow.ml" 309 11189 11245 "gWindow.ml" 309 11189 11248
type(
  Gtk.file_selection Gtk.obj
)
"gWindow.ml" 309 11189 11212 "gWindow.ml" 309 11189 11249
type(
  Gtk.button Gtk.obj
)
"gWindow.ml" 309 11189 11193 "gWindow.ml" 309 11189 11249
call(
  tail
)
type(
  GButton.button
)
type(
  GButton.button
)
"gWindow.ml" 310 11250 11273 "gWindow.ml" 310 11250 11291
type(
  Gtk.button Gtk.obj -> GButton.button
)
"gWindow.ml" 310 11250 11293 "gWindow.ml" 310 11250 11322
type(
  Gtk.file_selection Gtk.obj -> Gtk.button Gtk.obj
)
ident(
  ext_ref GtkWindow.FileSelection.get_help_button
)
"gWindow.ml" 310 11250 11323 "gWindow.ml" 310 11250 11326
type(
  Gtk.file_selection Gtk.obj
)
"gWindow.ml" 310 11250 11292 "gWindow.ml" 310 11250 11327
type(
  Gtk.button Gtk.obj
)
"gWindow.ml" 310 11250 11273 "gWindow.ml" 310 11250 11327
call(
  tail
)
type(
  GButton.button
)
type(
  GButton.button
)
"gWindow.ml" 312 11370 11374 "gWindow.ml" 312 11370 11389
type(
  Gtk.clist Gtk.obj -> string GList.clist
)
"gWindow.ml" 312 11370 11391 "gWindow.ml" 312 11370 11418
type(
  Gtk.file_selection Gtk.obj -> Gtk.clist Gtk.obj
)
ident(
  ext_ref GtkWindow.FileSelection.get_file_list
)
"gWindow.ml" 312 11370 11419 "gWindow.ml" 312 11370 11422
type(
  Gtk.file_selection Gtk.obj
)
"gWindow.ml" 312 11370 11390 "gWindow.ml" 312 11370 11423
type(
  Gtk.clist Gtk.obj
)
"gWindow.ml" 312 11370 11374 "gWindow.ml" 312 11370 11423
call(
  tail
)
type(
  string GList.clist
)
type(
  string GList.clist
)
"gWindow.ml" 314 11465 11469 "gWindow.ml" 314 11465 11484
type(
  Gtk.clist Gtk.obj -> string GList.clist
)
"gWindow.ml" 314 11465 11486 "gWindow.ml" 314 11465 11512
type(
  Gtk.file_selection Gtk.obj -> Gtk.clist Gtk.obj
)
ident(
  ext_ref GtkWindow.FileSelection.get_dir_list
)
"gWindow.ml" 314 11465 11513 "gWindow.ml" 314 11465 11516
type(
  Gtk.file_selection Gtk.obj
)
"gWindow.ml" 314 11465 11485 "gWindow.ml" 314 11465 11517
type(
  Gtk.clist Gtk.obj
)
"gWindow.ml" 314 11465 11469 "gWindow.ml" 314 11465 11517
call(
  tail
)
type(
  string GList.clist
)
type(
  string GList.clist
)
"gWindow.ml" 316 11532 11545 "gWindow.ml" 316 11532 11548
type(
  int
)
ident(
  int_ref rok "gWindow.ml" 120 4623 4627 "gWindow.ml" 120 4623 4630
)
"gWindow.ml" 316 11532 11550 "gWindow.ml" 316 11532 11553
type(
  Buttons.file_selection
)
"gWindow.ml" 316 11532 11545 "gWindow.ml" 316 11532 11553
type(
  int * Buttons.file_selection
)
"gWindow.ml" 316 11532 11556 "gWindow.ml" 316 11532 11563
type(
  int
)
ident(
  int_ref rcancel "gWindow.ml" 121 4642 4646 "gWindow.ml" 121 4642 4653
)
"gWindow.ml" 316 11532 11565 "gWindow.ml" 316 11532 11572
type(
  Buttons.file_selection
)
"gWindow.ml" 316 11532 11556 "gWindow.ml" 316 11532 11572
type(
  int * Buttons.file_selection
)
"gWindow.ml" 316 11532 11575 "gWindow.ml" 316 11532 11580
type(
  int
)
ident(
  int_ref rhelp "gWindow.ml" 126 4759 4763 "gWindow.ml" 126 4759 4768
)
"gWindow.ml" 316 11532 11582 "gWindow.ml" 316 11532 11587
type(
  Buttons.file_selection
)
"gWindow.ml" 316 11532 11575 "gWindow.ml" 316 11532 11587
type(
  int * Buttons.file_selection
)
"gWindow.ml" 316 11532 11543 "gWindow.ml" 316 11532 11589
type(
  (int * Buttons.file_selection) list
)
"gWindow.ml" 316 11532 11590 "gWindow.ml" 316 11532 11591
type(
  (int * Buttons.file_selection) list ->
  (int * Buttons.file_selection) list -> (int * Buttons.file_selection) list
)
ident(
  ext_ref Pervasives.( @ )
)
"gWindow.ml" 316 11532 11592 "gWindow.ml" 316 11532 11595
type(
  (int * Buttons.file_selection) list
)
"gWindow.ml" 316 11532 11543 "gWindow.ml" 316 11532 11595
call(
  stack
)
type(
  (int * Buttons.file_selection) list
)
"gWindow.ml" 316 11532 11536 "gWindow.ml" 316 11532 11595
type(
  'a -> unit
)
type(
  unit
)
"gWindow.ml" 319 11601 11605 "gWindow.ml" 319 11601 11619
type(
  ?title:string ->
  ?show_fileops:bool ->
  ?filename:string ->
  ?select_multiple:bool ->
  ?parent:< as_window : Gtk.window Gtk.obj; .. > ->
  ?destroy_with_parent:bool ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> file_selection
)
ident(
  def file_selection "gWindow.ml" 329 11896 11896 --
)
"gWindow.ml" 319 11601 11622 "gWindow.ml" 319 11601 11627
type(
  string
)
"gWindow.ml" 319 11601 11628 "gWindow.ml" 319 11601 11643
type(
  string
)
type(
  string
)
ident(
  int_ref *sth* "gWindow.ml" 319 11601 11628 "gWindow.ml" 319 11601 11643
)
type(
  string option
)
type(
  string option
)
type(
  string
)
ident(
  def *sth* "gWindow.ml" 319 11601 11628 "gWindow.ml" 319 11601 11643
)
"gWindow.ml" 319 11601 11647 "gWindow.ml" 319 11601 11659
type(
  bool
)
"gWindow.ml" 319 11601 11660 "gWindow.ml" 319 11601 11665
type(
  bool
)
type(
  bool
)
ident(
  int_ref *sth* "gWindow.ml" 319 11601 11660 "gWindow.ml" 319 11601 11665
)
type(
  bool option
)
type(
  bool option
)
type(
  bool
)
ident(
  def *sth* "gWindow.ml" 319 11601 11660 "gWindow.ml" 319 11601 11665
)
"gWindow.ml" 320 11669 11671 "gWindow.ml" 320 11669 11696
type(
  cont:(Gtk.file_selection Gobject.param list ->
        ?parent:(< as_window : Gtk.window Gtk.obj; .. > as 'a) ->
        ?destroy_with_parent:bool ->
        ?allow_grow:bool ->
        ?allow_shrink:bool ->
        ?decorated:bool ->
        ?deletable:bool ->
        ?focus_on_map:bool ->
        ?icon:GdkPixbuf.pixbuf ->
        ?icon_name:string ->
        ?modal:bool ->
        ?position:GtkEnums.window_position ->
        ?resizable:bool ->
        ?screen:Gdk.screen ->
        ?type_hint:GdkEnums.window_type_hint ->
        ?urgency_hint:bool ->
        ?wm_name:string ->
        ?wm_class:string ->
        ?border_width:int ->
        ?width:int -> ?height:int -> ?show:bool -> unit -> file_selection) ->
  Gtk.file_selection Gobject.param list ->
  ?filename:string ->
  ?select_multiple:bool ->
  ?show_fileops:bool ->
  ?parent:'a ->
  ?destroy_with_parent:bool ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> file_selection
)
ident(
  ext_ref GtkWindow.FileSelection.make_params
)
"gWindow.ml" 320 11669 11697 "gWindow.ml" 320 11669 11699
type(
  Gtk.file_selection Gobject.param list
)
"gWindow.ml" 320 11669 11701 "gWindow.ml" 320 11669 11713
type(
  bool
)
ident(
  int_ref show_fileops "gWindow.ml" 319 11601 11647 "gWindow.ml" 319 11601 11659
)
"gWindow.ml" 321 11722 11724 "gWindow.ml" 321 11722 11735
type(
  Gtk.file_selection Gobject.param list ->
  ?parent:'a ->
  ?destroy_with_parent:bool ->
  create:(Gtk.file_selection Gobject.param list -> file_selection) ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> file_selection
)
ident(
  int_ref make_dialog "gWindow.ml" 178 6356 6360 "gWindow.ml" 178 6356 6371
)
"gWindow.ml" 321 11722 11743 "gWindow.ml" 321 11722 11747
type(
  string option
)
"gWindow.ml" 321 11722 11761 "gWindow.ml" 321 11722 11763
type(
  Gtk.file_selection Gobject.param list
)
ident(
  def pl "gWindow.ml" 322 11767 11771 "gWindow.ml" 324 11838 11862
)
"gWindow.ml" 322 11767 11775 "gWindow.ml" 322 11767 11776
type(
  Gtk.file_selection Gtk.obj
)
"gWindow.ml" 322 11767 11779 "gWindow.ml" 322 11767 11799
type(
  string -> Gtk.file_selection Gtk.obj
)
ident(
  ext_ref GtkWindow.FileSelection.create
)
"gWindow.ml" 322 11767 11800 "gWindow.ml" 322 11767 11805
type(
  string
)
ident(
  int_ref title "gWindow.ml" 319 11601 11622 "gWindow.ml" 319 11601 11627
)
"gWindow.ml" 322 11767 11779 "gWindow.ml" 322 11767 11805
type(
  Gtk.file_selection Gtk.obj
)
"gWindow.ml" 323 11809 11813 "gWindow.ml" 323 11809 11831
type(
  Gtk.file_selection Gtk.obj -> Gtk.file_selection Gobject.param list -> unit
)
ident(
  ext_ref Gobject.set_params
)
"gWindow.ml" 323 11809 11832 "gWindow.ml" 323 11809 11833
type(
  Gtk.file_selection Gtk.obj
)
ident(
  int_ref w "gWindow.ml" 322 11767 11775 "gWindow.ml" 322 11767 11776
)
"gWindow.ml" 323 11809 11834 "gWindow.ml" 323 11809 11836
type(
  Gtk.file_selection Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 321 11722 11761 "gWindow.ml" 321 11722 11763
)
"gWindow.ml" 323 11809 11813 "gWindow.ml" 323 11809 11836
call(
  stack
)
type(
  unit
)
"gWindow.ml" 324 11838 11842 "gWindow.ml" 324 11838 11860
type(
  Gtk.file_selection Gtk.obj -> file_selection
)
"gWindow.ml" 324 11838 11861 "gWindow.ml" 324 11838 11862
type(
  Gtk.file_selection Gtk.obj
)
ident(
  int_ref w "gWindow.ml" 322 11767 11775 "gWindow.ml" 322 11767 11776
)
"gWindow.ml" 324 11838 11842 "gWindow.ml" 324 11838 11862
call(
  tail
)
type(
  file_selection
)
"gWindow.ml" 323 11809 11813 "gWindow.ml" 324 11838 11862
type(
  file_selection
)
"gWindow.ml" 322 11767 11771 "gWindow.ml" 324 11838 11862
type(
  file_selection
)
"gWindow.ml" 321 11722 11756 "gWindow.ml" 324 11838 11863
type(
  Gtk.file_selection Gobject.param list -> file_selection
)
"gWindow.ml" 320 11669 11720 "gWindow.ml" 324 11838 11864
call(
  tail
)
call(
  stack
)
type(
  Gtk.file_selection Gobject.param list ->
  ?parent:'a ->
  ?destroy_with_parent:bool ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> file_selection
)
"gWindow.ml" 320 11669 11671 "gWindow.ml" 324 11838 11864
call(
  tail
)
call(
  stack
)
type(
  ?filename:string ->
  ?select_multiple:bool ->
  ?parent:'a ->
  ?destroy_with_parent:bool ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> file_selection
)
"gWindow.ml" 329 11896 11924 "gWindow.ml" 329 11896 11927
type(
  Gtk.font_selection_dialog Gtk.obj
)
"gWindow.ml" 329 11896 11937 "gWindow.ml" 329 11896 11943
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; apply_button : GButton.button; as_widget : Gtk.widget Gtk.obj;
    as_window : Gtk.window Gtk.obj; border_width : int;
    cancel_button : GButton.button; child : GObj.widget;
    children : GObj.widget list; coerce : GObj.widget;
    connect : Buttons.font_selection dialog_signals; decorated : bool;
    default_height : int; default_width : int; deiconify : unit -> unit;
    deletable : bool; destroy : unit -> unit; destroy_with_parent : bool;
    drag : GObj.drag_ops; event : GObj.event_ops; focus : GContainer.focus;
    focus_on_map : bool; get_oid : int; gravity : GdkEnums.gravity;
    has_separator : bool; has_toplevel_focus : bool;
    icon : GdkPixbuf.pixbuf option; icon_name : string;
    iconify : unit -> unit; is_active : bool; kind : GtkEnums.window_type;
    misc : GObj.misc_ops; modal : bool; move : x:int -> y:int -> unit;
    ok_button : GButton.button; opacity : float;
    parse_geometry : string -> bool; position : GtkEnums.window_position;
    present : unit -> unit; remove : GObj.widget -> unit; resizable : 
    bool; resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode;
    response : Buttons.font_selection -> unit; role : string;
    run : unit -> Buttons.font_selection; screen : Gdk.screen;
    selection : GMisc.font_selection; set_accept_focus : bool -> unit;
    set_allow_grow : bool -> unit; set_allow_shrink : bool -> unit;
    set_border_width : int -> unit; set_decorated : bool -> unit;
    set_default_height : int -> unit;
    set_default_response : Buttons.font_selection -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_modal : bool -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : Buttons.font_selection -> bool -> unit;
    set_role : string -> unit; set_screen : Gdk.screen -> unit;
    set_skip_pager_hint : bool -> unit; set_skip_taskbar_hint : bool -> unit;
    set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
)
"gWindow.ml" 330 11944 11992 "gWindow.ml" 330 11944 11995
type(
  Gtk.font_selection_dialog Gtk.obj
)
type(
  Gtk.font_selection_dialog Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 329 11896 11924 "gWindow.ml" 329 11896 11927
)
"gWindow.ml" 331 12029 12068 "gWindow.ml" 331 12029 12086
type(
  Gtk.font_selection_dialog Gtk.obj ->
  decode:(int -> Buttons.font_selection) ->
  Buttons.font_selection dialog_signals
)
"gWindow.ml" 331 12029 12087 "gWindow.ml" 331 12029 12090
type(
  Gtk.font_selection_dialog Gtk.obj
)
"gWindow.ml" 331 12029 12091 "gWindow.ml" 331 12029 12095
type(
  < accept_focus : bool; action_area : GPack.button_box;
    activate_default : unit -> bool; activate_focus : unit -> bool;
    add : GObj.widget -> unit; add_accel_group : Gtk.accel_group -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; apply_button : GButton.button; as_widget : Gtk.widget Gtk.obj;
    as_window : Gtk.window Gtk.obj; border_width : int;
    cancel_button : GButton.button; child : GObj.widget;
    children : GObj.widget list; coerce : GObj.widget;
    connect : Buttons.font_selection dialog_signals; decorated : bool;
    default_height : int; default_width : int; deiconify : unit -> unit;
    deletable : bool; destroy : unit -> unit; destroy_with_parent : bool;
    drag : GObj.drag_ops; event : GObj.event_ops; focus : GContainer.focus;
    focus_on_map : bool; get_oid : int; gravity : GdkEnums.gravity;
    has_separator : bool; has_toplevel_focus : bool;
    icon : GdkPixbuf.pixbuf option; icon_name : string;
    iconify : unit -> unit; is_active : bool; kind : GtkEnums.window_type;
    misc : GObj.misc_ops; modal : bool; move : x:int -> y:int -> unit;
    ok_button : GButton.button; opacity : float;
    parse_geometry : string -> bool; position : GtkEnums.window_position;
    present : unit -> unit; remove : GObj.widget -> unit; resizable : 
    bool; resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode;
    response : Buttons.font_selection -> unit; role : string;
    run : unit -> Buttons.font_selection; screen : Gdk.screen;
    selection : GMisc.font_selection; set_accept_focus : bool -> unit;
    set_allow_grow : bool -> unit; set_allow_shrink : bool -> unit;
    set_border_width : int -> unit; set_decorated : bool -> unit;
    set_default_height : int -> unit;
    set_default_response : Buttons.font_selection -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_modal : bool -> unit;
    set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : Buttons.font_selection -> bool -> unit;
    set_role : string -> unit; set_screen : Gdk.screen -> unit;
    set_skip_pager_hint : bool -> unit; set_skip_taskbar_hint : bool -> unit;
    set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit;
    skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; urgency_hint : bool;
    vbox : GPack.box; .. >
  as 'a
)
"gWindow.ml" 331 12029 12091 "gWindow.ml" 331 12029 12102
call(
  stack
)
type(
  int -> Buttons.font_selection
)
"gWindow.ml" 331 12029 12068 "gWindow.ml" 331 12029 12102
call(
  tail
)
type(
  Buttons.font_selection dialog_signals
)
type(
  Buttons.font_selection dialog_signals
)
"gWindow.ml" 333 12124 12128 "gWindow.ml" 333 12124 12152
type(
  Gtk.font_selection Gtk.obj -> GMisc.font_selection
)
"gWindow.ml" 333 12124 12154 "gWindow.ml" 333 12124 12188
type(
  Gtk.font_selection_dialog Gtk.obj -> Gtk.font_selection Gtk.obj
)
ident(
  ext_ref GtkWindow.FontSelectionDialog.font_selection
)
"gWindow.ml" 333 12124 12189 "gWindow.ml" 333 12124 12192
type(
  Gtk.font_selection_dialog Gtk.obj
)
"gWindow.ml" 333 12124 12153 "gWindow.ml" 333 12124 12193
type(
  Gtk.font_selection Gtk.obj
)
"gWindow.ml" 333 12124 12128 "gWindow.ml" 333 12124 12193
call(
  tail
)
type(
  GMisc.font_selection
)
type(
  GMisc.font_selection
)
"gWindow.ml" 334 12194 12216 "gWindow.ml" 334 12194 12234
type(
  Gtk.button Gtk.obj -> GButton.button
)
"gWindow.ml" 334 12194 12236 "gWindow.ml" 334 12194 12265
type(
  Gtk.font_selection_dialog Gtk.obj -> Gtk.button Gtk.obj
)
ident(
  ext_ref GtkWindow.FontSelectionDialog.ok_button
)
"gWindow.ml" 334 12194 12266 "gWindow.ml" 334 12194 12269
type(
  Gtk.font_selection_dialog Gtk.obj
)
"gWindow.ml" 334 12194 12235 "gWindow.ml" 334 12194 12270
type(
  Gtk.button Gtk.obj
)
"gWindow.ml" 334 12194 12216 "gWindow.ml" 334 12194 12270
call(
  tail
)
type(
  GButton.button
)
type(
  GButton.button
)
"gWindow.ml" 336 12295 12299 "gWindow.ml" 336 12295 12317
type(
  Gtk.button Gtk.obj -> GButton.button
)
"gWindow.ml" 336 12295 12319 "gWindow.ml" 336 12295 12351
type(
  Gtk.font_selection_dialog Gtk.obj -> Gtk.button Gtk.obj
)
ident(
  ext_ref GtkWindow.FontSelectionDialog.apply_button
)
"gWindow.ml" 336 12295 12352 "gWindow.ml" 336 12295 12355
type(
  Gtk.font_selection_dialog Gtk.obj
)
"gWindow.ml" 336 12295 12318 "gWindow.ml" 336 12295 12356
type(
  Gtk.button Gtk.obj
)
"gWindow.ml" 336 12295 12299 "gWindow.ml" 336 12295 12356
call(
  tail
)
type(
  GButton.button
)
type(
  GButton.button
)
"gWindow.ml" 338 12382 12386 "gWindow.ml" 338 12382 12404
type(
  Gtk.button Gtk.obj -> GButton.button
)
"gWindow.ml" 338 12382 12406 "gWindow.ml" 338 12382 12439
type(
  Gtk.font_selection_dialog Gtk.obj -> Gtk.button Gtk.obj
)
ident(
  ext_ref GtkWindow.FontSelectionDialog.cancel_button
)
"gWindow.ml" 338 12382 12440 "gWindow.ml" 338 12382 12443
type(
  Gtk.font_selection_dialog Gtk.obj
)
"gWindow.ml" 338 12382 12405 "gWindow.ml" 338 12382 12444
type(
  Gtk.button Gtk.obj
)
"gWindow.ml" 338 12382 12386 "gWindow.ml" 338 12382 12444
call(
  tail
)
type(
  GButton.button
)
type(
  GButton.button
)
"gWindow.ml" 340 12459 12472 "gWindow.ml" 340 12459 12475
type(
  int
)
ident(
  int_ref rok "gWindow.ml" 120 4623 4627 "gWindow.ml" 120 4623 4630
)
"gWindow.ml" 340 12459 12477 "gWindow.ml" 340 12459 12480
type(
  Buttons.font_selection
)
"gWindow.ml" 340 12459 12472 "gWindow.ml" 340 12459 12480
type(
  int * Buttons.font_selection
)
"gWindow.ml" 340 12459 12483 "gWindow.ml" 340 12459 12490
type(
  int
)
ident(
  int_ref rcancel "gWindow.ml" 121 4642 4646 "gWindow.ml" 121 4642 4653
)
"gWindow.ml" 340 12459 12492 "gWindow.ml" 340 12459 12499
type(
  Buttons.font_selection
)
"gWindow.ml" 340 12459 12483 "gWindow.ml" 340 12459 12499
type(
  int * Buttons.font_selection
)
"gWindow.ml" 340 12459 12502 "gWindow.ml" 340 12459 12508
type(
  int
)
ident(
  int_ref rapply "gWindow.ml" 125 4734 4738 "gWindow.ml" 125 4734 4744
)
"gWindow.ml" 340 12459 12510 "gWindow.ml" 340 12459 12516
type(
  Buttons.font_selection
)
"gWindow.ml" 340 12459 12502 "gWindow.ml" 340 12459 12516
type(
  int * Buttons.font_selection
)
"gWindow.ml" 340 12459 12470 "gWindow.ml" 340 12459 12518
type(
  (int * Buttons.font_selection) list
)
"gWindow.ml" 340 12459 12519 "gWindow.ml" 340 12459 12520
type(
  (int * Buttons.font_selection) list ->
  (int * Buttons.font_selection) list -> (int * Buttons.font_selection) list
)
ident(
  ext_ref Pervasives.( @ )
)
"gWindow.ml" 340 12459 12521 "gWindow.ml" 340 12459 12524
type(
  (int * Buttons.font_selection) list
)
"gWindow.ml" 340 12459 12470 "gWindow.ml" 340 12459 12524
call(
  stack
)
type(
  (int * Buttons.font_selection) list
)
"gWindow.ml" 340 12459 12463 "gWindow.ml" 340 12459 12524
type(
  'a -> unit
)
type(
  unit
)
"gWindow.ml" 343 12530 12534 "gWindow.ml" 343 12530 12555
type(
  ?title:string ->
  ?parent:< as_window : Gtk.window Gtk.obj; .. > ->
  ?destroy_with_parent:bool ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> font_selection_dialog
)
ident(
  def font_selection_dialog "gWindow.ml" 350 12687 12687 --
)
"gWindow.ml" 343 12530 12557 "gWindow.ml" 343 12530 12562
type(
  string option
)
ident(
  def title "gWindow.ml" 344 12565 12567 "gWindow.ml" 345 12608 12670
)
"gWindow.ml" 344 12565 12567 "gWindow.ml" 344 12565 12578
type(
  Gtk.font_selection_dialog Gobject.param list ->
  ?parent:(< as_window : Gtk.window Gtk.obj; .. > as 'a) ->
  ?destroy_with_parent:bool ->
  create:(Gtk.font_selection_dialog Gobject.param list ->
          font_selection_dialog) ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> font_selection_dialog
)
ident(
  int_ref make_dialog "gWindow.ml" 178 6356 6360 "gWindow.ml" 178 6356 6371
)
"gWindow.ml" 344 12565 12579 "gWindow.ml" 344 12565 12581
type(
  Gtk.font_selection_dialog Gobject.param list
)
"gWindow.ml" 344 12565 12583 "gWindow.ml" 344 12565 12588
type(
  string option
)
ident(
  int_ref title "gWindow.ml" 343 12530 12557 "gWindow.ml" 343 12530 12562
)
"gWindow.ml" 344 12565 12602 "gWindow.ml" 344 12565 12604
type(
  Gtk.font_selection_dialog Gobject.param list
)
ident(
  def pl "gWindow.ml" 345 12608 12612 "gWindow.ml" 345 12608 12669
)
"gWindow.ml" 345 12608 12612 "gWindow.ml" 345 12608 12637
type(
  Gtk.font_selection_dialog Gtk.obj -> font_selection_dialog
)
"gWindow.ml" 345 12608 12639 "gWindow.ml" 345 12608 12665
type(
  Gtk.font_selection_dialog Gobject.param list ->
  Gtk.font_selection_dialog Gtk.obj
)
ident(
  ext_ref GtkWindow.FontSelectionDialog.create
)
"gWindow.ml" 345 12608 12666 "gWindow.ml" 345 12608 12668
type(
  Gtk.font_selection_dialog Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 344 12565 12602 "gWindow.ml" 344 12565 12604
)
"gWindow.ml" 345 12608 12638 "gWindow.ml" 345 12608 12669
call(
  stack
)
type(
  Gtk.font_selection_dialog Gtk.obj
)
"gWindow.ml" 345 12608 12612 "gWindow.ml" 345 12608 12669
call(
  tail
)
type(
  font_selection_dialog
)
"gWindow.ml" 344 12565 12597 "gWindow.ml" 345 12608 12670
type(
  Gtk.font_selection_dialog Gobject.param list -> font_selection_dialog
)
"gWindow.ml" 344 12565 12567 "gWindow.ml" 345 12608 12670
call(
  tail
)
call(
  stack
)
type(
  ?parent:'a ->
  ?destroy_with_parent:bool ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> font_selection_dialog
)
"gWindow.ml" 350 12687 12706 "gWindow.ml" 350 12687 12709
type(
  [> Gtk.plug ] Gtk.obj
)
"gWindow.ml" 351 12719 12753 "gWindow.ml" 351 12719 12756
type(
  ([> Gtk.plug ] as 'a) Gtk.obj
)
type(
  'a Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 350 12687 12706 "gWindow.ml" 350 12687 12709
)
"gWindow.ml" 355 12798 12810 "gWindow.ml" 355 12798 12813
type(
  Gtk.plug Gtk.obj
)
"gWindow.ml" 356 12839 12861 "gWindow.ml" 356 12839 12864
type(
  Gtk.plug Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 355 12798 12810 "gWindow.ml" 355 12798 12813
)
"gWindow.ml" 357 12865 12884 "gWindow.ml" 357 12865 12900
type(
  Gtk.plug Gtk.obj -> plug_signals
)
"gWindow.ml" 357 12865 12901 "gWindow.ml" 357 12865 12904
type(
  Gtk.plug Gtk.obj
)
"gWindow.ml" 357 12865 12884 "gWindow.ml" 357 12865 12904
call(
  tail
)
type(
  plug_signals
)
type(
  plug_signals
)
"gWindow.ml" 360 12910 12914 "gWindow.ml" 360 12910 12918
type(
  window:Gdk.xid ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> plug
)
ident(
  def plug "gWindow.ml" 369 13119 13119 --
)
"gWindow.ml" 360 12910 12927 "gWindow.ml" 360 12910 12930
type(
  Gdk.xid
)
ident(
  def xid "gWindow.ml" 361 12933 12935 "gWindow.ml" 365 13086 13101
)
"gWindow.ml" 361 12933 12935 "gWindow.ml" 361 12933 12956
type(
  cont:(Gtk.plug Gobject.param list -> ?show:bool -> unit -> plug) ->
  Gtk.plug Gobject.param list ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> plug
)
ident(
  ext_ref GtkBase.Container.make_params
)
"gWindow.ml" 361 12933 12957 "gWindow.ml" 361 12933 12959
type(
  Gtk.plug Gobject.param list
)
"gWindow.ml" 361 12933 12971 "gWindow.ml" 361 12933 12973
type(
  Gtk.plug Gobject.param list
)
ident(
  def pl "gWindow.ml" 361 12933 12974 "gWindow.ml" 365 13086 13100
)
"gWindow.ml" 361 12933 12976 "gWindow.ml" 361 12933 12980
type(
  bool
)
"gWindow.ml" 361 12933 12981 "gWindow.ml" 361 12933 12986
type(
  bool
)
type(
  bool
)
ident(
  int_ref *sth* "gWindow.ml" 361 12933 12981 "gWindow.ml" 361 12933 12986
)
type(
  bool option
)
type(
  bool option
)
type(
  bool
)
ident(
  def *sth* "gWindow.ml" 361 12933 12981 "gWindow.ml" 361 12933 12986
)
"gWindow.ml" 361 12933 12988 "gWindow.ml" 361 12933 12990
type(
  unit
)
"gWindow.ml" 362 12994 13002 "gWindow.ml" 362 12994 13003
type(
  Gtk.plug Gtk.obj
)
"gWindow.ml" 362 12994 13006 "gWindow.ml" 362 12994 13017
type(
  Gdk.xid -> Gtk.plug Gtk.obj
)
ident(
  ext_ref GtkWindow.Plug.create
)
"gWindow.ml" 362 12994 13018 "gWindow.ml" 362 12994 13021
type(
  Gdk.xid
)
ident(
  int_ref xid "gWindow.ml" 360 12910 12927 "gWindow.ml" 360 12910 12930
)
"gWindow.ml" 362 12994 13006 "gWindow.ml" 362 12994 13021
type(
  Gtk.plug Gtk.obj
)
"gWindow.ml" 363 13025 13029 "gWindow.ml" 363 13025 13047
type(
  Gtk.plug Gtk.obj -> Gtk.plug Gobject.param list -> unit
)
ident(
  ext_ref Gobject.set_params
)
"gWindow.ml" 363 13025 13048 "gWindow.ml" 363 13025 13049
type(
  Gtk.plug Gtk.obj
)
ident(
  int_ref w "gWindow.ml" 362 12994 13002 "gWindow.ml" 362 12994 13003
)
"gWindow.ml" 363 13025 13050 "gWindow.ml" 363 13025 13052
type(
  Gtk.plug Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 361 12933 12971 "gWindow.ml" 361 12933 12973
)
"gWindow.ml" 363 13025 13029 "gWindow.ml" 363 13025 13052
call(
  stack
)
type(
  unit
)
"gWindow.ml" 364 13054 13061 "gWindow.ml" 364 13054 13065
type(
  bool
)
ident(
  int_ref show "gWindow.ml" 361 12933 12976 "gWindow.ml" 361 12933 12980
)
"gWindow.ml" 364 13054 13071 "gWindow.ml" 364 13054 13082
type(
  Gtk.plug Gtk.obj -> unit
)
ident(
  ext_ref GtkBase.Widget.show
)
"gWindow.ml" 364 13054 13083 "gWindow.ml" 364 13054 13084
type(
  Gtk.plug Gtk.obj
)
ident(
  int_ref w "gWindow.ml" 362 12994 13002 "gWindow.ml" 362 12994 13003
)
"gWindow.ml" 364 13054 13071 "gWindow.ml" 364 13054 13084
type(
  unit
)
"gWindow.ml" 364 13054 13058 "gWindow.ml" 364 13054 13084
type(
  unit
)
"gWindow.ml" 365 13086 13090 "gWindow.ml" 365 13086 13098
type(
  Gtk.plug Gtk.obj -> plug
)
"gWindow.ml" 365 13086 13099 "gWindow.ml" 365 13086 13100
type(
  Gtk.plug Gtk.obj
)
ident(
  int_ref w "gWindow.ml" 362 12994 13002 "gWindow.ml" 362 12994 13003
)
"gWindow.ml" 365 13086 13090 "gWindow.ml" 365 13086 13100
call(
  tail
)
type(
  plug
)
"gWindow.ml" 364 13054 13058 "gWindow.ml" 365 13086 13100
type(
  plug
)
"gWindow.ml" 363 13025 13029 "gWindow.ml" 365 13086 13100
type(
  plug
)
"gWindow.ml" 362 12994 12998 "gWindow.ml" 365 13086 13100
type(
  plug
)
"gWindow.ml" 361 12933 12966 "gWindow.ml" 365 13086 13101
type(
  Gtk.plug Gobject.param list -> ?show:bool -> unit -> plug
)
"gWindow.ml" 361 12933 12935 "gWindow.ml" 365 13086 13101
call(
  tail
)
type(
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> plug
)
"gWindow.ml" 369 13119 13140 "gWindow.ml" 369 13119 13143
type(
  [> Gtk.socket ] Gtk.obj
)
"gWindow.ml" 370 13153 13187 "gWindow.ml" 370 13153 13190
type(
  ([> Gtk.socket ] as 'a) Gtk.obj
)
type(
  'a Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 369 13119 13140 "gWindow.ml" 369 13119 13143
)
"gWindow.ml" 374 13236 13249 "gWindow.ml" 374 13236 13252
type(
  Gtk.socket Gtk.obj
)
"gWindow.ml" 374 13236 13262 "gWindow.ml" 374 13236 13268
type(
  < add : GObj.widget -> unit; all_children : GObj.widget list;
    as_widget : Gtk.widget Gtk.obj; border_width : int;
    children : GObj.widget list; coerce : GObj.widget;
    connect : socket_signals; destroy : unit -> unit; drag : GObj.drag_ops;
    focus : GContainer.focus; get_oid : int; misc : GObj.misc_ops;
    remove : GObj.widget -> unit; resize_mode : Gtk.Tags.resize_mode;
    set_border_width : int -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit; steal : Gdk.xid -> unit;
    xwindow : Gdk.xid; .. >
)
"gWindow.ml" 375 13269 13290 "gWindow.ml" 375 13269 13293
type(
  Gtk.socket Gtk.obj
)
type(
  Gtk.socket Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 374 13236 13249 "gWindow.ml" 374 13236 13252
)
"gWindow.ml" 376 13312 13331 "gWindow.ml" 376 13312 13349
type(
  Gtk.socket Gtk.obj -> socket_signals
)
"gWindow.ml" 376 13312 13350 "gWindow.ml" 376 13312 13353
type(
  Gtk.socket Gtk.obj
)
"gWindow.ml" 376 13312 13331 "gWindow.ml" 376 13312 13353
call(
  tail
)
type(
  socket_signals
)
type(
  socket_signals
)
"gWindow.ml" 377 13354 13371 "gWindow.ml" 377 13354 13383
type(
  Gtk.socket Gtk.obj -> Gdk.xid -> unit
)
ident(
  ext_ref GtkWindow.Socket.steal
)
"gWindow.ml" 377 13354 13384 "gWindow.ml" 377 13354 13387
type(
  Gtk.socket Gtk.obj
)
"gWindow.ml" 377 13354 13371 "gWindow.ml" 377 13354 13387
call(
  tail
)
type(
  Gdk.xid -> unit
)
type(
  Gdk.xid -> unit
)
"gWindow.ml" 379 13407 13411 "gWindow.ml" 379 13407 13415
type(
  < add : GObj.widget -> unit; all_children : GObj.widget list;
    as_widget : Gtk.widget Gtk.obj; border_width : int;
    children : GObj.widget list; coerce : GObj.widget;
    connect : socket_signals; destroy : unit -> unit; drag : GObj.drag_ops;
    focus : GContainer.focus; get_oid : int; misc : GObj.misc_ops;
    remove : GObj.widget -> unit; resize_mode : Gtk.Tags.resize_mode;
    set_border_width : int -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit; steal : Gdk.xid -> unit;
    xwindow : Gdk.xid; .. >
  as 'a
)
"gWindow.ml" 379 13407 13411 "gWindow.ml" 379 13407 13420
call(
  stack
)
type(
  GObj.misc_ops
)
"gWindow.ml" 379 13407 13411 "gWindow.ml" 379 13407 13428
call(
  stack
)
type(
  unit -> unit
)
"gWindow.ml" 379 13407 13429 "gWindow.ml" 379 13407 13431
type(
  unit
)
"gWindow.ml" 379 13407 13411 "gWindow.ml" 379 13407 13431
type(
  unit
)
"gWindow.ml" 380 13433 13437 "gWindow.ml" 380 13433 13459
type(
  Gdk.window -> Gdk.xid
)
ident(
  ext_ref Gdk.Window.get_xwindow
)
"gWindow.ml" 380 13433 13460 "gWindow.ml" 380 13433 13464
type(
  'a
)
"gWindow.ml" 380 13433 13460 "gWindow.ml" 380 13433 13469
call(
  stack
)
type(
  GObj.misc_ops
)
"gWindow.ml" 380 13433 13460 "gWindow.ml" 380 13433 13476
call(
  stack
)
type(
  Gdk.window
)
"gWindow.ml" 380 13433 13437 "gWindow.ml" 380 13433 13476
call(
  tail
)
type(
  Gdk.xid
)
"gWindow.ml" 379 13407 13411 "gWindow.ml" 380 13433 13476
type(
  Gdk.xid
)
type(
  Gdk.xid
)
"gWindow.ml" 383 13482 13486 "gWindow.ml" 383 13482 13492
type(
  ?border_width:int ->
  ?width:int ->
  ?height:int ->
  ?packing:(GObj.widget -> unit) -> ?show:bool -> unit -> socket
)
ident(
  def socket "gWindow.ml" 387 13585 13585 --
)
"gWindow.ml" 384 13495 13497 "gWindow.ml" 384 13495 13511
type(
  create:(Gtk.socket Gobject.param list -> socket) ->
  Gtk.socket Gobject.param list ->
  ?border_width:int ->
  ?width:int ->
  ?height:int ->
  ?packing:(GObj.widget -> unit) -> ?show:bool -> unit -> socket
)
ident(
  ext_ref GContainer.pack_container
)
"gWindow.ml" 384 13495 13512 "gWindow.ml" 384 13495 13514
type(
  Gtk.socket Gobject.param list
)
"gWindow.ml" 384 13495 13528 "gWindow.ml" 384 13495 13530
type(
  Gtk.socket Gobject.param list
)
ident(
  def pl "gWindow.ml" 384 13495 13534 "gWindow.ml" 384 13495 13563
)
"gWindow.ml" 384 13495 13534 "gWindow.ml" 384 13495 13544
type(
  Gtk.socket Gtk.obj -> socket
)
"gWindow.ml" 384 13495 13546 "gWindow.ml" 384 13495 13559
type(
  Gtk.socket Gobject.param list -> Gtk.socket Gtk.obj
)
ident(
  ext_ref GtkWindow.Socket.create
)
"gWindow.ml" 384 13495 13560 "gWindow.ml" 384 13495 13562
type(
  Gtk.socket Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 384 13495 13528 "gWindow.ml" 384 13495 13530
)
"gWindow.ml" 384 13495 13545 "gWindow.ml" 384 13495 13563
call(
  stack
)
type(
  Gtk.socket Gtk.obj
)
"gWindow.ml" 384 13495 13534 "gWindow.ml" 384 13495 13563
call(
  tail
)
type(
  socket
)
"gWindow.ml" 384 13495 13523 "gWindow.ml" 384 13495 13564
type(
  Gtk.socket Gobject.param list -> socket
)
"gWindow.ml" 384 13495 13497 "gWindow.ml" 384 13495 13564
call(
  stack
)
type(
  ?border_width:int ->
  ?width:int ->
  ?height:int ->
  ?packing:(GObj.widget -> unit) -> ?show:bool -> unit -> socket
)
"gWindow.ml" 387 13585 13624 "gWindow.ml" 387 13585 13627
type(
  [> `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gtk.obj
)
"gWindow.ml" 387 13585 13629 "gWindow.ml" 387 13585 13635
type(
  int -> 'a
)
"gWindow.ml" 388 13645 13675 "gWindow.ml" 388 13645 13678
type(
  ([> `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
   as 'b)
  Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 387 13585 13624 "gWindow.ml" 387 13585 13627
)
"gWindow.ml" 388 13645 13680 "gWindow.ml" 388 13645 13686
type(
  int -> 'a
)
ident(
  int_ref decode "gWindow.ml" 387 13585 13629 "gWindow.ml" 387 13585 13635
)
"gWindow.ml" 392 13734 13765 "gWindow.ml" 392 13734 13768
type(
  [> `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gtk.obj
)
"gWindow.ml" 392 13734 13778 "gWindow.ml" 392 13734 13784
type(
  < accept_focus : bool; action : GtkEnums.file_chooser_action;
    action_area : GPack.button_box; activate_default : unit -> bool;
    activate_focus : unit -> bool; add : GObj.widget -> unit;
    add_accel_group : Gtk.accel_group -> unit;
    add_button : string -> ([> `DELETE_EVENT ] as 'a) -> unit;
    add_button_stock : GtkStock.id -> 'a -> unit;
    add_filter : GFile.filter -> unit;
    add_select_button : string -> 'a -> unit;
    add_select_button_stock : GtkStock.id -> 'a -> unit;
    add_shortcut_folder : string -> unit;
    add_shortcut_folder_uri : string -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; child : GObj.widget; children : GObj.widget list;
    coerce : GObj.widget; connect : 'a file_chooser_dialog_signals;
    current_folder : string option; current_folder_uri : string;
    decorated : bool; default_height : int; default_width : int;
    deiconify : unit -> unit; deletable : bool; destroy : unit -> unit;
    destroy_with_parent : bool; do_overwrite_confirmation : bool;
    drag : GObj.drag_ops; event : GObj.event_ops; extra_widget : GObj.widget;
    filename : string option; filter : GFile.filter;
    focus : GContainer.focus; focus_on_map : bool;
    get_filenames : string list; get_oid : int; get_uris : string list;
    gravity : GdkEnums.gravity; has_separator : bool;
    has_toplevel_focus : bool; icon : GdkPixbuf.pixbuf option;
    icon_name : string; iconify : unit -> unit; is_active : bool;
    kind : GtkEnums.window_type; list_filters : GFile.filter list;
    list_shortcut_folder_uris : string list;
    list_shortcut_folders : string list; local_only : bool;
    misc : GObj.misc_ops; modal : bool; move : x:int -> y:int -> unit;
    opacity : float; parse_geometry : string -> bool;
    position : GtkEnums.window_position; present : unit -> unit;
    preview_filename : string option; preview_uri : string option;
    preview_widget : GObj.widget; preview_widget_active : bool;
    remove : GObj.widget -> unit; remove_filter : GFile.filter -> unit;
    remove_shortcut_folder : string -> unit;
    remove_shortcut_folder_uri : string -> unit; resizable : bool;
    resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode; response : 'a -> unit; role : 
    string; run : unit -> 'a; screen : Gdk.screen; select_all : unit;
    select_filename : string -> bool; select_multiple : bool;
    select_uri : string -> bool; set_accept_focus : bool -> unit;
    set_action : GtkEnums.file_chooser_action -> unit;
    set_allow_grow : bool -> unit; set_allow_shrink : bool -> unit;
    set_border_width : int -> unit; set_current_folder : string -> bool;
    set_current_folder_uri : string -> bool;
    set_current_name : string -> unit; set_decorated : bool -> unit;
    set_default_height : int -> unit; set_default_response : 'a -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit;
    set_do_overwrite_confirmation : bool -> unit;
    set_extra_widget : GObj.widget -> unit; set_filename : string -> bool;
    set_filter : GFile.filter -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_local_only : bool -> unit;
    set_modal : bool -> unit; set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_preview_widget : GObj.widget -> unit;
    set_preview_widget_active : bool -> unit; set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : 'a -> bool -> unit; set_role : string -> unit;
    set_screen : Gdk.screen -> unit; set_select_multiple : bool -> unit;
    set_show_hidden : bool -> unit; set_skip_pager_hint : bool -> unit;
    set_skip_taskbar_hint : bool -> unit; set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_uri : string -> bool;
    set_use_preview_label : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit; show_hidden : 
    bool; skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; unselect_all : unit;
    unselect_filename : string -> unit; unselect_uri : string -> unit;
    urgency_hint : bool; uri : string option; use_preview_label : bool;
    vbox : GPack.box; .. >
)
"gWindow.ml" 393 13785 13811 "gWindow.ml" 393 13785 13814
type(
  ([> `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
   as 'b)
  Gtk.obj
)
ident(
  int_ref obj "gWindow.ml" 392 13734 13765 "gWindow.ml" 392 13734 13768
)
"gWindow.ml" 396 13897 13901 "gWindow.ml" 396 13897 13932
type(
  'b Gtk.obj -> decode:(int -> 'a) -> 'a file_chooser_dialog_signals
)
"gWindow.ml" 396 13897 13933 "gWindow.ml" 396 13897 13936
type(
  'b Gtk.obj
)
"gWindow.ml" 396 13897 13937 "gWindow.ml" 396 13897 13941
type(
  < accept_focus : bool; action : GtkEnums.file_chooser_action;
    action_area : GPack.button_box; activate_default : unit -> bool;
    activate_focus : unit -> bool; add : GObj.widget -> unit;
    add_accel_group : Gtk.accel_group -> unit;
    add_button : string -> 'a -> unit;
    add_button_stock : GtkStock.id -> 'a -> unit;
    add_filter : GFile.filter -> unit;
    add_select_button : string -> 'a -> unit;
    add_select_button_stock : GtkStock.id -> 'a -> unit;
    add_shortcut_folder : string -> unit;
    add_shortcut_folder_uri : string -> unit;
    all_children : GObj.widget list; allow_grow : bool; allow_shrink : 
    bool; as_widget : Gtk.widget Gtk.obj; as_window : Gtk.window Gtk.obj;
    border_width : int; child : GObj.widget; children : GObj.widget list;
    coerce : GObj.widget; connect : 'a file_chooser_dialog_signals;
    current_folder : string option; current_folder_uri : string;
    decorated : bool; default_height : int; default_width : int;
    deiconify : unit -> unit; deletable : bool; destroy : unit -> unit;
    destroy_with_parent : bool; do_overwrite_confirmation : bool;
    drag : GObj.drag_ops; event : GObj.event_ops; extra_widget : GObj.widget;
    filename : string option; filter : GFile.filter;
    focus : GContainer.focus; focus_on_map : bool;
    get_filenames : string list; get_oid : int; get_uris : string list;
    gravity : GdkEnums.gravity; has_separator : bool;
    has_toplevel_focus : bool; icon : GdkPixbuf.pixbuf option;
    icon_name : string; iconify : unit -> unit; is_active : bool;
    kind : GtkEnums.window_type; list_filters : GFile.filter list;
    list_shortcut_folder_uris : string list;
    list_shortcut_folders : string list; local_only : bool;
    misc : GObj.misc_ops; modal : bool; move : x:int -> y:int -> unit;
    opacity : float; parse_geometry : string -> bool;
    position : GtkEnums.window_position; present : unit -> unit;
    preview_filename : string option; preview_uri : string option;
    preview_widget : GObj.widget; preview_widget_active : bool;
    remove : GObj.widget -> unit; remove_filter : GFile.filter -> unit;
    remove_shortcut_folder : string -> unit;
    remove_shortcut_folder_uri : string -> unit; resizable : bool;
    resize : width:int -> height:int -> unit;
    resize_mode : Gtk.Tags.resize_mode; response : 'a -> unit; role : 
    string; run : unit -> 'a; screen : Gdk.screen; select_all : unit;
    select_filename : string -> bool; select_multiple : bool;
    select_uri : string -> bool; set_accept_focus : bool -> unit;
    set_action : GtkEnums.file_chooser_action -> unit;
    set_allow_grow : bool -> unit; set_allow_shrink : bool -> unit;
    set_border_width : int -> unit; set_current_folder : string -> bool;
    set_current_folder_uri : string -> bool;
    set_current_name : string -> unit; set_decorated : bool -> unit;
    set_default_height : int -> unit; set_default_response : 'a -> unit;
    set_default_size : width:int -> height:int -> unit;
    set_default_width : int -> unit; set_deletable : bool -> unit;
    set_destroy_with_parent : bool -> unit;
    set_do_overwrite_confirmation : bool -> unit;
    set_extra_widget : GObj.widget -> unit; set_filename : string -> bool;
    set_filter : GFile.filter -> unit; set_focus_on_map : bool -> unit;
    set_geometry_hints : ?min_size:int * int ->
                         ?max_size:int * int ->
                         ?base_size:int * int ->
                         ?aspect:float * float ->
                         ?resize_inc:int * int ->
                         ?win_gravity:Gdk.Tags.gravity ->
                         ?pos:bool ->
                         ?user_pos:bool ->
                         ?user_size:bool -> GObj.widget -> unit;
    set_gravity : GdkEnums.gravity -> unit; set_has_separator : bool -> unit;
    set_icon : GdkPixbuf.pixbuf option -> unit;
    set_icon_name : string -> unit; set_local_only : bool -> unit;
    set_modal : bool -> unit; set_opacity : float -> unit;
    set_position : GtkEnums.window_position -> unit;
    set_preview_widget : GObj.widget -> unit;
    set_preview_widget_active : bool -> unit; set_resizable : bool -> unit;
    set_resize_mode : Gtk.Tags.resize_mode -> unit;
    set_response_sensitive : 'a -> bool -> unit; set_role : string -> unit;
    set_screen : Gdk.screen -> unit; set_select_multiple : bool -> unit;
    set_show_hidden : bool -> unit; set_skip_pager_hint : bool -> unit;
    set_skip_taskbar_hint : bool -> unit; set_title : string -> unit;
    set_transient_for : Gtk.window Gtk.obj -> unit;
    set_type_hint : GdkEnums.window_type_hint -> unit;
    set_urgency_hint : bool -> unit; set_uri : string -> bool;
    set_use_preview_label : bool -> unit; set_wm_class : string -> unit;
    set_wm_name : string -> unit; show : unit -> unit; show_hidden : 
    bool; skip_pager_hint : bool; skip_taskbar_hint : bool; title : string;
    type_hint : GdkEnums.window_type_hint; unselect_all : unit;
    unselect_filename : string -> unit; unselect_uri : string -> unit;
    urgency_hint : bool; uri : string option; use_preview_label : bool;
    vbox : GPack.box; .. >
  as 'c
)
"gWindow.ml" 396 13897 13937 "gWindow.ml" 396 13897 13948
call(
  stack
)
type(
  int -> 'a
)
"gWindow.ml" 396 13897 13901 "gWindow.ml" 396 13897 13948
call(
  tail
)
type(
  'a file_chooser_dialog_signals
)
type(
  'a file_chooser_dialog_signals
)
"gWindow.ml" 397 13949 13976 "gWindow.ml" 397 13949 13980
type(
  string
)
ident(
  def text "gWindow.ml" 397 13949 13981 "gWindow.ml" 399 14018 14056
)
"gWindow.ml" 397 13949 13981 "gWindow.ml" 397 13949 13982
type(
  'a
)
ident(
  def v "gWindow.ml" 398 13985 13989 "gWindow.ml" 399 14018 14056
)
"gWindow.ml" 398 13985 13997 "gWindow.ml" 398 13985 14004
type(
  int
)
ident(
  int_ref raccept "gWindow.ml" 118 4563 4567 "gWindow.ml" 118 4563 4574
)
"gWindow.ml" 398 13985 14006 "gWindow.ml" 398 13985 14007
type(
  'a
)
ident(
  int_ref v "gWindow.ml" 397 13949 13981 "gWindow.ml" 397 13949 13982
)
"gWindow.ml" 398 13985 13996 "gWindow.ml" 398 13985 14008
type(
  int * 'a
)
"gWindow.ml" 398 13985 14012 "gWindow.ml" 398 13985 14015
type(
  (int * 'a) list
)
"gWindow.ml" 398 13985 13996 "gWindow.ml" 398 13985 14015
type(
  (int * 'a) list
)
"gWindow.ml" 398 13985 13989 "gWindow.ml" 398 13985 14015
type(
  unit
)
"gWindow.ml" 399 14018 14022 "gWindow.ml" 399 14018 14039
type(
  'b Gtk.obj -> string -> int -> unit
)
ident(
  ext_ref GtkWindow.Dialog.add_button
)
"gWindow.ml" 399 14018 14040 "gWindow.ml" 399 14018 14043
type(
  'b Gtk.obj
)
"gWindow.ml" 399 14018 14044 "gWindow.ml" 399 14018 14048
type(
  string
)
ident(
  int_ref text "gWindow.ml" 397 13949 13976 "gWindow.ml" 397 13949 13980
)
"gWindow.ml" 399 14018 14049 "gWindow.ml" 399 14018 14056
type(
  int
)
ident(
  int_ref raccept "gWindow.ml" 118 4563 4567 "gWindow.ml" 118 4563 4574
)
"gWindow.ml" 399 14018 14022 "gWindow.ml" 399 14018 14056
type(
  unit
)
"gWindow.ml" 398 13985 13989 "gWindow.ml" 399 14018 14056
type(
  unit
)
"gWindow.ml" 400 14057 14090 "gWindow.ml" 400 14057 14094
type(
  GtkStock.id
)
ident(
  def s_id "gWindow.ml" 400 14057 14095 "gWindow.ml" 401 14099 14154
)
"gWindow.ml" 400 14057 14095 "gWindow.ml" 400 14057 14096
type(
  'a
)
ident(
  def v "gWindow.ml" 401 14099 14103 "gWindow.ml" 401 14099 14154
)
"gWindow.ml" 401 14099 14103 "gWindow.ml" 401 14099 14107
type(
  'c
)
"gWindow.ml" 401 14099 14103 "gWindow.ml" 401 14099 14125
call(
  tail
)
type(
  string -> 'a -> unit
)
"gWindow.ml" 401 14099 14127 "gWindow.ml" 401 14099 14146
type(
  GtkStock.id -> string
)
ident(
  ext_ref GtkStock.convert_id
)
"gWindow.ml" 401 14099 14147 "gWindow.ml" 401 14099 14151
type(
  GtkStock.id
)
ident(
  int_ref s_id "gWindow.ml" 400 14057 14090 "gWindow.ml" 400 14057 14094
)
"gWindow.ml" 401 14099 14126 "gWindow.ml" 401 14099 14152
call(
  stack
)
type(
  string
)
"gWindow.ml" 401 14099 14153 "gWindow.ml" 401 14099 14154
type(
  'a
)
ident(
  int_ref v "gWindow.ml" 400 14057 14095 "gWindow.ml" 400 14057 14096
)
"gWindow.ml" 401 14099 14103 "gWindow.ml" 401 14099 14154
type(
  unit
)
"gWindow.ml" 404 14160 14164 "gWindow.ml" 404 14160 14183
type(
  action:GtkEnums.file_chooser_action ->
  ?backend:string ->
  ?parent:< as_window : Gtk.window Gtk.obj; .. > ->
  ?destroy_with_parent:bool ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int ->
  ?height:int -> ?show:bool -> unit -> [> `DELETE_EVENT ] file_chooser_dialog
)
ident(
  def file_chooser_dialog "gWindow.ml" 411 14446 14478 --
)
"gWindow.ml" 404 14160 14185 "gWindow.ml" 404 14160 14191
type(
  GtkEnums.file_chooser_action
)
ident(
  def action "gWindow.ml" 404 14160 14192 "gWindow.ml" 411 14446 14478
)
"gWindow.ml" 404 14160 14193 "gWindow.ml" 404 14160 14200
type(
  string option
)
ident(
  def backend "gWindow.ml" 405 14203 14205 "gWindow.ml" 411 14446 14478
)
"gWindow.ml" 405 14203 14205 "gWindow.ml" 405 14203 14216
type(
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gobject.param list ->
  ?parent:(< as_window : Gtk.window Gtk.obj; .. > as 'a) ->
  ?destroy_with_parent:bool ->
  create:([ `bin
          | `container
          | `dialog
          | `filechooser
          | `gtk
          | `widget
          | `window ] Gobject.param list ->
          ([> `DELETE_EVENT ] as 'b) file_chooser_dialog) ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> 'b file_chooser_dialog
)
ident(
  int_ref make_dialog "gWindow.ml" 178 6356 6360 "gWindow.ml" 178 6356 6371
)
"gWindow.ml" 406 14218 14223 "gWindow.ml" 406 14218 14248
type(
  ([ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ],
   string)
  Gobject.property ->
  string option ->
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gobject.param list ->
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gobject.param list
)
ident(
  ext_ref Gobject.Property.may_cons
)
"gWindow.ml" 407 14250 14257 "gWindow.ml" 407 14250 14298
type(
  ([ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ],
   string)
  Gobject.property
)
ident(
  ext_ref GtkFile.FileChooser.P.file_system_backend
)
"gWindow.ml" 407 14250 14299 "gWindow.ml" 407 14250 14306
type(
  string option
)
ident(
  int_ref backend "gWindow.ml" 404 14160 14193 "gWindow.ml" 404 14160 14200
)
"gWindow.ml" 408 14307 14316 "gWindow.ml" 408 14307 14329
type(
  ([ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ],
   GtkEnums.file_chooser_action)
  Gobject.property ->
  GtkEnums.file_chooser_action ->
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gobject.param
)
ident(
  ext_ref Gobject.param
)
"gWindow.ml" 408 14307 14330 "gWindow.ml" 408 14307 14358
type(
  ([ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ],
   GtkEnums.file_chooser_action)
  Gobject.property
)
ident(
  ext_ref GtkFile.FileChooser.P.action
)
"gWindow.ml" 408 14307 14359 "gWindow.ml" 408 14307 14365
type(
  GtkEnums.file_chooser_action
)
ident(
  int_ref action "gWindow.ml" 404 14160 14185 "gWindow.ml" 404 14160 14191
)
"gWindow.ml" 408 14307 14316 "gWindow.ml" 408 14307 14365
call(
  stack
)
type(
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gobject.param
)
"gWindow.ml" 408 14307 14314 "gWindow.ml" 408 14307 14367
type(
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gobject.param list
)
"gWindow.ml" 406 14218 14222 "gWindow.ml" 408 14307 14368
call(
  stack
)
type(
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gobject.param list
)
"gWindow.ml" 409 14369 14386 "gWindow.ml" 409 14369 14388
type(
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gobject.param list
)
ident(
  def pl "gWindow.ml" 410 14392 14398 "gWindow.ml" 411 14446 14477
)
"gWindow.ml" 410 14392 14402 "gWindow.ml" 410 14392 14403
type(
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gtk.obj
)
"gWindow.ml" 410 14392 14406 "gWindow.ml" 410 14392 14439
type(
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gobject.param list ->
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gtk.obj
)
ident(
  ext_ref GtkFile.FileChooser.dialog_create
)
"gWindow.ml" 410 14392 14440 "gWindow.ml" 410 14392 14442
type(
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gobject.param list
)
ident(
  int_ref pl "gWindow.ml" 409 14369 14386 "gWindow.ml" 409 14369 14388
)
"gWindow.ml" 410 14392 14406 "gWindow.ml" 410 14392 14442
call(
  stack
)
type(
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gtk.obj
)
"gWindow.ml" 411 14446 14452 "gWindow.ml" 411 14446 14475
type(
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gtk.obj -> 'b file_chooser_dialog
)
"gWindow.ml" 411 14446 14476 "gWindow.ml" 411 14446 14477
type(
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gtk.obj
)
ident(
  int_ref w "gWindow.ml" 410 14392 14402 "gWindow.ml" 410 14392 14403
)
"gWindow.ml" 411 14446 14452 "gWindow.ml" 411 14446 14477
call(
  tail
)
type(
  'b file_chooser_dialog
)
"gWindow.ml" 410 14392 14398 "gWindow.ml" 411 14446 14477
type(
  'b file_chooser_dialog
)
"gWindow.ml" 409 14369 14381 "gWindow.ml" 411 14446 14478
type(
  [ `bin | `container | `dialog | `filechooser | `gtk | `widget | `window ]
  Gobject.param list -> 'b file_chooser_dialog
)
"gWindow.ml" 405 14203 14205 "gWindow.ml" 411 14446 14478
call(
  tail
)
call(
  stack
)
type(
  ?parent:'a ->
  ?destroy_with_parent:bool ->
  ?title:string ->
  ?allow_grow:bool ->
  ?allow_shrink:bool ->
  ?decorated:bool ->
  ?deletable:bool ->
  ?focus_on_map:bool ->
  ?icon:GdkPixbuf.pixbuf ->
  ?icon_name:string ->
  ?modal:bool ->
  ?position:GtkEnums.window_position ->
  ?resizable:bool ->
  ?screen:Gdk.screen ->
  ?type_hint:GdkEnums.window_type_hint ->
  ?urgency_hint:bool ->
  ?wm_name:string ->
  ?wm_class:string ->
  ?border_width:int ->
  ?width:int -> ?height:int -> ?show:bool -> unit -> 'b file_chooser_dialog
)
