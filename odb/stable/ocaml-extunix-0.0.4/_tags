# OASIS_START
# DO NOT EDIT (digest: 82aeae5e870df04fa8b164f6e8cb2e4c)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library extunix
"src/extunix.cmxs": use_extunix
<src/*.ml{,i}>: oasis_library_extunix_ccopt
"src/eventfd.c": oasis_library_extunix_ccopt
"src/dirfd.c": oasis_library_extunix_ccopt
"src/fsync.c": oasis_library_extunix_ccopt
"src/statvfs.c": oasis_library_extunix_ccopt
"src/atfile.c": oasis_library_extunix_ccopt
"src/ioctl_siocgifconf.c": oasis_library_extunix_ccopt
"src/uname.c": oasis_library_extunix_ccopt
"src/fadvise.c": oasis_library_extunix_ccopt
"src/fallocate.c": oasis_library_extunix_ccopt
"src/tty_ioctl.c": oasis_library_extunix_ccopt
"src/unistd.c": oasis_library_extunix_ccopt
"src/stdlib.c": oasis_library_extunix_ccopt
"src/signalfd.c": oasis_library_extunix_ccopt
"src/ptrace.c": oasis_library_extunix_ccopt
"src/resource.c": oasis_library_extunix_ccopt
"src/mman.c": oasis_library_extunix_ccopt
"src/time.c": oasis_library_extunix_ccopt
"src/pts.c": oasis_library_extunix_ccopt
"src/execinfo.c": oasis_library_extunix_ccopt
"src/malloc.c": oasis_library_extunix_ccopt
"src/endian.c": oasis_library_extunix_ccopt
"src/read_cred.c": oasis_library_extunix_ccopt
"src/fexecve.c": oasis_library_extunix_ccopt
"src/sendmsg.c": oasis_library_extunix_ccopt
"src/memalign.c": oasis_library_extunix_ccopt
"src/endianba.c": oasis_library_extunix_ccopt
"src/pread_pwrite_ba.c": oasis_library_extunix_ccopt
"src/bigarray.c": oasis_library_extunix_ccopt
<src/extunix.{cma,cmxa}>: use_libextunix_stubs
<src/*.ml{,i}>: pkg_unix
<src/*.ml{,i}>: pkg_bigarray
"src/eventfd.c": pkg_unix
"src/eventfd.c": pkg_bigarray
"src/dirfd.c": pkg_unix
"src/dirfd.c": pkg_bigarray
"src/fsync.c": pkg_unix
"src/fsync.c": pkg_bigarray
"src/statvfs.c": pkg_unix
"src/statvfs.c": pkg_bigarray
"src/atfile.c": pkg_unix
"src/atfile.c": pkg_bigarray
"src/ioctl_siocgifconf.c": pkg_unix
"src/ioctl_siocgifconf.c": pkg_bigarray
"src/uname.c": pkg_unix
"src/uname.c": pkg_bigarray
"src/fadvise.c": pkg_unix
"src/fadvise.c": pkg_bigarray
"src/fallocate.c": pkg_unix
"src/fallocate.c": pkg_bigarray
"src/tty_ioctl.c": pkg_unix
"src/tty_ioctl.c": pkg_bigarray
"src/unistd.c": pkg_unix
"src/unistd.c": pkg_bigarray
"src/stdlib.c": pkg_unix
"src/stdlib.c": pkg_bigarray
"src/signalfd.c": pkg_unix
"src/signalfd.c": pkg_bigarray
"src/ptrace.c": pkg_unix
"src/ptrace.c": pkg_bigarray
"src/resource.c": pkg_unix
"src/resource.c": pkg_bigarray
"src/mman.c": pkg_unix
"src/mman.c": pkg_bigarray
"src/time.c": pkg_unix
"src/time.c": pkg_bigarray
"src/pts.c": pkg_unix
"src/pts.c": pkg_bigarray
"src/execinfo.c": pkg_unix
"src/execinfo.c": pkg_bigarray
"src/malloc.c": pkg_unix
"src/malloc.c": pkg_bigarray
"src/endian.c": pkg_unix
"src/endian.c": pkg_bigarray
"src/read_cred.c": pkg_unix
"src/read_cred.c": pkg_bigarray
"src/fexecve.c": pkg_unix
"src/fexecve.c": pkg_bigarray
"src/sendmsg.c": pkg_unix
"src/sendmsg.c": pkg_bigarray
"src/memalign.c": pkg_unix
"src/memalign.c": pkg_bigarray
"src/endianba.c": pkg_unix
"src/endianba.c": pkg_bigarray
"src/pread_pwrite_ba.c": pkg_unix
"src/pread_pwrite_ba.c": pkg_bigarray
"src/bigarray.c": pkg_unix
"src/bigarray.c": pkg_bigarray
# Executable test
<test/test.{native,byte}>: use_extunix
<test/test.{native,byte}>: pkg_oUnit
<test/test.{native,byte}>: pkg_unix
<test/test.{native,byte}>: pkg_bigarray
<test/test.{native,byte}>: custom
# Executable testba
<test/testba.{native,byte}>: use_extunix
<test/testba.{native,byte}>: pkg_oUnit
<test/testba.{native,byte}>: pkg_unix
<test/testba.{native,byte}>: pkg_bigarray
<test/*.ml{,i}>: use_extunix
<test/*.ml{,i}>: pkg_oUnit
<test/*.ml{,i}>: pkg_unix
<test/*.ml{,i}>: pkg_bigarray
<test/testba.{native,byte}>: custom
# OASIS_STOP
"src/pa_have.ml": pkg_camlp4.quotations.r, pkg_camlp4.extend, syntax_camlp4o
